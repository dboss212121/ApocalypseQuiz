{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport ExpoSplashScreen from './ExpoSplashScreen';\nexport async function preventAutoHideAsync() {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\nexport async function hideAsync() {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\nexport function hide() {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\nexport function preventAutoHide() {\n  console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');\n  preventAutoHideAsync();\n}","map":{"version":3,"names":["UnavailabilityError","ExpoSplashScreen","preventAutoHideAsync","hideAsync","hide","console","warn","preventAutoHide"],"sources":["C:\\QuizApp\\ApocalypseQuiz\\node_modules\\expo-splash-screen\\src\\SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n *\n * > **Important note**: It is recommended to call this in global scope without awaiting, rather than\n * > inside React components or hooks, because otherwise this might be called too late,\n * > when the splash screen is already hidden.\n *\n * @example\n * ```ts\n * import * as SplashScreen from 'expo-splash-screen';\n *\n * SplashScreen.preventAutoHideAsync();\n *\n * export default function App() {\n *  // ...\n * }\n * ```\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,gBAAgB,MAAM,oBAAoB;AAqBjD,OAAO,eAAeC,oBAAoBA,CAAA;EACxC,IAAI,CAACD,gBAAgB,CAACC,oBAAoB,EAAE;IAC1C,MAAM,IAAIF,mBAAmB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC;;EAE7E,OAAO,MAAMC,gBAAgB,CAACC,oBAAoB,EAAE;AACtD;AAQA,OAAO,eAAeC,SAASA,CAAA;EAC7B,IAAI,CAACF,gBAAgB,CAACE,SAAS,EAAE;IAC/B,MAAM,IAAIH,mBAAmB,CAAC,oBAAoB,EAAE,WAAW,CAAC;;EAElE,OAAO,MAAMC,gBAAgB,CAACE,SAAS,EAAE;AAC3C;AAMA,OAAM,SAAUC,IAAIA,CAAA;EAClBC,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC;EACvFH,SAAS,EAAE;AACb;AAMA,OAAM,SAAUI,eAAeA,CAAA;EAC7BF,OAAO,CAACC,IAAI,CACV,+FAA+F,CAChG;EACDJ,oBAAoB,EAAE;AACxB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}