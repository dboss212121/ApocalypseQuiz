{"ast":null,"code":"var _jsxFileName = \"C:\\\\QuizApp\\\\ApocalypseQuiz\\\\App.js\";\nimport { Audio } from 'expo-av';\nimport AppLoading from 'expo-app-loading';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useRef } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getFonts = () => Font.loadAsync({\n  'press-start': require('./assets/fonts/PressStart2P-Regular.ttf')\n});\nconst TitleScreen = ({\n  onStart\n}) => {\n  const fadeAnim = useState(new Animated.Value(0))[0];\n  const pulseAnim = useState(new Animated.Value(0))[0];\n  useEffect(() => {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 2000,\n      useNativeDriver: true,\n      easing: Easing.ease\n    }).start(() => {\n      Animated.loop(Animated.sequence([Animated.timing(pulseAnim, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true\n      }), Animated.timing(pulseAnim, {\n        toValue: 0.3,\n        duration: 800,\n        useNativeDriver: true\n      })])).start();\n    });\n  }, []);\n  return _jsxDEV(View, {\n    style: styles.titleScreenContainer,\n    children: [_jsxDEV(Animated.View, {\n      style: {\n        opacity: fadeAnim\n      },\n      children: [_jsxDEV(Text, {\n        style: styles.titleText,\n        children: \"WELCOME TO THE APOCALYPSE QUIZ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitleText,\n        children: \"Find out how you survive the apocalypse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), _jsxDEV(Animated.View, {\n      style: {\n        opacity: pulseAnim\n      },\n      children: _jsxDEV(TouchableOpacity, {\n        onPress: onStart,\n        children: _jsxDEV(Text, {\n          style: styles.tapToStart,\n          children: \"TAP TO START\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\nconst allQuestions = [{\n  question: \"THE WORLD JUST ENDED. WHAT'S YOUR FIRST MOVE?\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/mushroomcloud.png\",\n    alt: \"A rising mushroom cloud casting an eerie glow over ruins\"\n  },\n  options: [{\n    text: 'Build a barricade out of canned beans',\n    value: 'receiptGolem'\n  }, {\n    text: 'Climb a microwave tower to search for signal',\n    value: 'doomDJ'\n  }, {\n    text: 'Loot everything that isn’t on fire',\n    value: 'glitterButcher'\n  }, {\n    text: 'Meditate and accept the void',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A STRANGE DEVICE HUMMING IN THE RUBBLE. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/buzzingmachine.png\",\n    alt: \"A broken, buzzing machine with faint glowing wires\"\n  },\n  options: [{\n    text: 'Reverse-engineer it into a toaster',\n    value: 'cyborgCellist'\n  }, {\n    text: 'Smash it immediately. No risks.',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Lick it and chant softly',\n    value: 'balloonNecromancer'\n  }, {\n    text: 'Turn it into a weapon',\n    value: 'libraryCommando'\n  }]\n}, {\n  question: \"A MUTANT RAT ARMY APPROACHES. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ratarmyresized.png\",\n    alt: \"A swarm of oversized glowing-eyed rats charging forward\"\n  },\n  options: [{\n    text: 'Negotiate. Even rats need HR',\n    value: 'cockroachNegotiator'\n  }, {\n    text: 'Screech louder to establish dominance',\n    value: 'screamerScout'\n  }, {\n    text: 'Summon the spirits of sewer ancestors',\n    value: 'trashOracle'\n  }, {\n    text: 'Organize a neighborhood defense grid',\n    value: 'bureaucracyGhoul'\n  }]\n}, {\n  question: \"A STRANGER OFFERS YOU A GLOWING MUSHROOM. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glowingmushroom.png\",\n    alt: \"A strange bioluminescent mushroom glowing with green light\"\n  },\n  options: [{\n    text: 'Accept it and name it Greg',\n    value: 'duckPainter'\n  }, {\n    text: 'Decline and file a report',\n    value: 'kaleChampion'\n  }, {\n    text: 'Run away with it and laugh',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Inspect it for medicinal use',\n    value: 'marshmallowGeneral'\n  }]\n}, {\n  question: \"YOUR WEAPON OF CHOICE IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\n    alt: \"A pile of improvised weapons scattered across a cracked floor\"\n  },\n  options: [{\n    text: 'Clipboard with sharpened corners',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Healing salve with a punch',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Nail bat covered in stickers',\n    value: 'glitterButcher'\n  }, {\n    text: 'Cursed ukulele',\n    value: 'doomDJ'\n  }]\n}, {\n  question: \"THE APOCALYPSE HAS TV AGAIN. YOUR SHOW?\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/tv.png\",\n    alt: \"A cracked old television flickering with static\"\n  },\n  options: [{\n    text: '“Disaster Diaries: Planning the Panic”',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: '“Survivor Support Circle”',\n    value: 'mutantHRManager'\n  }, {\n    text: '“Cooking with Roadkill”',\n    value: 'gnocchiNomad'\n  }, {\n    text: '“Whispers from the Ceiling Fan”',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"HOW DO YOU START YOUR APOCALYPSE MORNING?\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/sunrise.png\",\n    alt: \"A fiery sunrise breaking over a ruined wasteland\"\n  },\n  options: [{\n    text: 'Inventory and affirmations',\n    value: 'receiptGolem'\n  }, {\n    text: 'Stretch, share, and hydrate',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Scream into the mist',\n    value: 'screamerScout'\n  }, {\n    text: 'Sip tea with a ghost',\n    value: 'skeletonBarista'\n  }]\n}, {\n  question: \"YOU’RE INVITED TO A WASTELAND PARTY. YOUR GIFT IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/party.png\",\n    alt: \"A flickering bonfire surrounded by scavenged party decorations\"\n  },\n  options: [{\n    text: 'A tactical punch bowl',\n    value: 'molotovMixologist'\n  }, {\n    text: 'A box of shared memories',\n    value: 'libraryCommando'\n  }, {\n    text: 'A bag of teeth and glitter',\n    value: 'glitterButcher'\n  }, {\n    text: 'A crystal that buzzes when stared at',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A FUNCTIONAL VEHICLE. IT RUNS ON:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vehicle.png\",\n    alt: \"A rusted vehicle with strange tubes and glowing fuel tanks\"\n  },\n  options: [{\n    text: 'Dried fruit and accountability',\n    value: 'kaleChampion'\n  }, {\n    text: 'Feelings and essential oils',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Gremlin screams',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Dreams of the old world',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"A GIANT ROBOT WANTS TO JOIN YOUR CREW. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/robot.png\",\n    alt: \"A towering robot covered in dents and scavenged armor\"\n  },\n  options: [{\n    text: 'Assign it as logistics coordinator',\n    value: 'libraryCommando'\n  }, {\n    text: 'Offer emotional calibration training',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Paint flames on its chest',\n    value: 'duckPainter'\n  }, {\n    text: 'Ask if it dreams of rusting sheep',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU CHECK INTO THE LAST HOTEL ON EARTH. THE COMPLIMENTARY ITEM IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hotel.png\",\n    alt: \"A crumbling hotel lobby with dusty chandeliers\"\n  },\n  options: [{\n    text: 'A keycard made from scrap metal',\n    value: 'receiptGolem'\n  }, {\n    text: 'A bed stuffed with old newspapers',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'A minibar full of mystery meat',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'A lamp that whispers bedtime stories',\n    value: 'skeletonBarista'\n  }]\n}, {\n  question: \"YOU FIND A LEGENDARY WEAPON IN THE RUINS. IT IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\n    alt: \"An ominous weapon glinting in the rubble\"\n  },\n  options: [{\n    text: 'A sword made of melted road signs',\n    value: 'doomDJ'\n  }, {\n    text: 'A crossbow that fires angry beetles',\n    value: 'squirrelTamer'\n  }, {\n    text: 'A bat wrapped in barbed wire and rumors',\n    value: 'glitterButcher'\n  }, {\n    text: 'A gun that shoots tiny holograms of itself',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"YOUR ENEMY FINALLY FALLS INTO YOUR TRAP. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/trap.png\",\n    alt: \"A menacing pit trap surrounded by makeshift spikes\"\n  },\n  options: [{\n    text: 'Deliver a speech so epic it becomes legend',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: 'Make them clean your entire camp with a toothbrush',\n    value: 'libraryCommando'\n  }, {\n    text: 'Release a swarm of weaponized crows',\n    value: 'animalMime'\n  }, {\n    text: 'Erase them from every photo… retroactively',\n    value: 'duckPainter'\n  }]\n}, {\n  question: \"A DERELICT BOAT WASHES ASHORE. YOUR FIRST MOVE IS TO:\",\n  image: {\n    uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/boat.png\"\n  },\n  alt: \"Tactical belt with pouches\",\n  options: [{\n    text: 'Restore it into a seaworthy escape vessel',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Turn it into a floating community hub',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Strip it for parts before anyone else can',\n    value: 'glitterButcher'\n  }, {\n    text: 'Sail it inland somehow, just to confuse people',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU DISCOVER AN ABANDONED POOL IN THE WASTELAND. YOUR PLAN IS TO:\",\n  image: {\n    uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/pool.png\"\n  },\n  alt: \"Derelict pool\",\n  options: [{\n    text: 'Fill it with clean water for the community',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Grow crops in it using the deep basin',\n    value: 'kaleChampion'\n  }, {\n    text: 'Stock it with mutant fish for later snacking',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Turn it into an ominous art installation',\n    value: 'duckPainter'\n  }]\n}, {\n  question: \"YOU FIND A TACTICAL BELT WITH MYSTERIOUS POUCHES. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/belt.png\",\n    alt: \"A rugged tactical belt with oddly glowing pouches\"\n  },\n  options: [{\n    text: 'Organize survival gear with military precision',\n    value: 'libraryCommando'\n  }, {\n    text: 'Fill it with snacks for the whole squad',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Cram it full of stolen trinkets and bones',\n    value: 'glitterButcher'\n  }, {\n    text: 'Discover one pouch contains a portal to nowhere',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"CHOOSE YOUR WASTELAND COMPANION ANIMAL:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/pet.png\",\n    alt: \"A scrappy animal companion ready for chaos\"\n  },\n  options: [{\n    text: 'A battle-hardened goat',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'A one-eyed therapy pigeon',\n    value: 'mutantHRManager'\n  }, {\n    text: 'A hairless raccoon with trust issues',\n    value: 'animalMime'\n  }, {\n    text: 'A telepathic lizard that speaks in riddles',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A STRANGER APPROACHES YOUR CAMP. YOU DECIDE TO:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/stranger.png\",\n    alt: \"A mysterious figure standing at the edge of your campfire light\"\n  },\n  options: [{\n    text: 'Offer them a seat and negotiate terms',\n    value: 'cockroachNegotiator'\n  }, {\n    text: 'Share a meal and learn their story',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Circle behind them and take their boots',\n    value: 'glitterButcher'\n  }, {\n    text: 'Whisper to them in a language you just made up',\n    value: 'duckPainter'\n  }]\n}, {\n  question: \"YOU’RE ENROLLED IN THE LAST POST-APOCALYPTIC COLLEGE. YOUR MAJOR IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/college.png\",\n    alt: \"A dilapidated college building with banners of odd symbols\"\n  },\n  options: [{\n    text: 'Survival Strategy and Bartering',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: 'Mutant Relations and Counseling',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Scavenging 101: Chaos Management',\n    value: 'animalMime'\n  }, {\n    text: 'Cryptic Arts and Oddities',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"IN THE NEW ECONOMY, YOUR CURRENCY FEATURES:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/money.png\",\n    alt: \"Crumpled bills with bizarre illustrations and symbols\"\n  },\n  options: [{\n    text: 'A heroic figure with a duct-taped weapon',\n    value: 'doomDJ'\n  }, {\n    text: 'A pair of hands shaking over a campfire',\n    value: 'cockroachNegotiator'\n  }, {\n    text: 'A snarling rat wearing a crown',\n    value: 'squirrelTamer'\n  }, {\n    text: 'An eye that seems to follow you everywhere',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"IT’S TIME FOR A DUEL. WHAT IS YOUR SECRET WEAPON OF CHOICE?:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duel.png\",\n    alt: \"A dusty dueling arena with strange improvised weapons\"\n  },\n  options: [{\n    text: 'A sharpened broom handle',\n    value: 'libraryCommando'\n  }, {\n    text: 'An aggressively worded letter',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Two angry raccoons tied together',\n    value: 'animalMime'\n  }, {\n    text: 'A spoon that whispers battle strategies',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"WHAT’S YOUR MEAL PLAN?\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/meal.png\",\n    alt: \"A questionable apocalypse meal served on a rusty plate\"\n  },\n  options: [{\n    text: \"Scavenge for expired granola bars\",\n    value: \"gnocchiNomad\"\n  }, {\n    text: \"Hunt mutant squirrels\",\n    value: \"squirrelTamer\"\n  }, {\n    text: \"Barter socks for canned spaghetti\",\n    value: \"receiptGolem\"\n  }, {\n    text: \"Grow mushrooms in a toilet tank\",\n    value: \"kaleChampion\"\n  }]\n}, {\n  question: \"YOUR BARRICADE IS THE LAST LINE OF DEFENSE AGAINST:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/barricade.png\",\n    alt: \"Makeshift wooden barricade stacked with junkyard debris\"\n  },\n  options: [{\n    text: 'A horde of caffeinated squirrels',\n    value: 'squirrelTamer'\n  }, {\n    text: 'Door-to-door apocalypse salesmen',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'A river of hot cheese',\n    value: 'glitterButcher'\n  }, {\n    text: 'Time-traveling versions of yourself',\n    value: 'apocalypseConspiracyTheorist'\n  }]\n}, {\n  question: \"YOUR GANG FLAG PROUDLY DISPLAYS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/flag.png\",\n    alt: \"Tattered gang flag waving in the radioactive wind\"\n  },\n  options: [{\n    text: 'A possum holding a sword and a grudge',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Three raccoons in a trench coat flipping pancakes',\n    value: 'animalMime'\n  }, {\n    text: 'A screaming cactus wearing sunglasses',\n    value: 'duckPainter'\n  }, {\n    text: 'An eldritch sandwich that whispers your debts',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOUR KARAOKE PERFORMANCE TONIGHT IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/karaoke.png\",\n    alt: \"A lone microphone glowing under a flickering neon light\"\n  },\n  options: [{\n    text: 'Screaming the Pokémon theme while being chased by a goose',\n    value: 'screamerScout'\n  }, {\n    text: 'Interpretive dance to whale sounds in full medieval armor',\n    value: 'yodelMechanic'\n  }, {\n    text: 'Yodeling “Bohemian Rhapsody” while holding a suspicious ham',\n    value: 'doomDJ'\n  }, {\n    text: 'Whisper-rapping the Bee Movie script in a smoky jazz bar',\n    value: 'origamiDetective'\n  }]\n}, {\n  question: \"A STRANGE LIGHT APPEARS IN THE SKY. WHAT DO YOU DO?\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/light.png\",\n    alt: \"Mysterious glowing light hovering in the night sky\"\n  },\n  options: [{\n    text: 'Point at it and yell “same” until it goes away',\n    value: 'doomDJ'\n  }, {\n    text: 'Start selling tickets for the “End of the World Viewing Party”',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Challenge it to a rap battle… and lose',\n    value: 'animalMime'\n  }, {\n    text: 'Offer it a sandwich as a peace treaty',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU HAVE A SMALL THUMB DRIVE FULL OF THE MOST IMPORTANT DATA FROM THE BEFORE TIMES. IT CONTAINS:\",\n  image: {\n    uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/data.png\"\n  },\n  alt: \"Data drive\",\n  options: [{\n    text: 'Hundreds of cat photos',\n    value: 'receiptGolem'\n  }, {\n    text: 'Recipes for different napalm flavors',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Complete gibberish',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: 'The script for every Jim Carrey movie',\n    value: 'libraryCommando'\n  }]\n}, {\n  question: \"YOU STUMBLE UPON A MYSTERIOUS PORTAL. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/portal.png\",\n    alt: \"A swirling portal shimmering with unknown energy\"\n  },\n  options: [{\n    text: 'Step through confidently',\n    value: 'doomDJ'\n  }, {\n    text: 'Set up a research tent',\n    value: 'origamiDetective'\n  }, {\n    text: 'Throw a rock in first',\n    value: 'animalMime'\n  }, {\n    text: 'Whisper a warning to the void',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND AN ABANDONED AMUSEMENT PARK. YOUR PLAN IS:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/park.png\",\n    alt: \"Rusty rides and eerie carnival lights\"\n  },\n  options: [{\n    text: 'Turn it into a fortress',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Organize a scavenger hunt',\n    value: 'libraryCommando'\n  }, {\n    text: 'Ride everything at full speed',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Meditate in the funhouse mirrors',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU DISCOVER A TALKING TOASTER. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toaster.png\",\n    alt: \"A sentient toaster blinking like it has secrets\"\n  },\n  options: [{\n    text: 'Make it your tactical advisor',\n    value: 'doomDJ'\n  }, {\n    text: 'Teach it to make meals for the group',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Chase it around screaming',\n    value: 'screamerScout'\n  }, {\n    text: 'Ask it about the meaning of toast',\n    value: 'skeletonBarista'\n  }]\n}, {\n  question: \"YOU COME ACROSS A GIANT PILE OF SOCKS. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socks.png\",\n    alt: \"A mountain of mismatched, dusty socks\"\n  },\n  options: [{\n    text: 'Sort them by usefulness',\n    value: 'receiptGolem'\n  }, {\n    text: 'Distribute them evenly to survivors',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Build a sock fort',\n    value: 'glitterButcher'\n  }, {\n    text: 'Wear them all at once for enlightenment',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A MYSTERIOUS FOG ROLLS IN. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fog.png\",\n    alt: \"Thick fog swallowing the landscape\"\n  },\n  options: [{\n    text: 'Set up sentries and stay alert',\n    value: 'fogMechanic'\n  }, {\n    text: 'Use it to cover a supply run',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Run screaming into it',\n    value: 'screamerScout'\n  }, {\n    text: 'Breathe deeply and commune with spirits',\n    value: 'trashOracle'\n  }]\n}, {\n  question: \"YOU FIND A STRANGE MUSICAL INSTRUMENT. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/instrument.png\",\n    alt: \"An odd instrument with glowing strings\"\n  },\n  options: [{\n    text: 'Lead a rally with it',\n    value: 'doomDJ'\n  }, {\n    text: 'Play calming tunes for the group',\n    value: 'cyborgCellist'\n  }, {\n    text: 'Smash it loudly',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Listen for cosmic messages',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU SPOT A HOVERING DRONE. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/drone.png\",\n    alt: \"A small drone hovering and scanning the area\"\n  },\n  options: [{\n    text: 'Hack it to serve your team',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: 'Follow it to discover resources',\n    value: 'origamiDetective'\n  }, {\n    text: 'Shoot it with a slingshot',\n    value: 'animalMime'\n  }, {\n    text: 'Bow respectfully',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A MYSTERIOUS CHEST IN THE DESERT. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chest.png\",\n    alt: \"An old chest half-buried in sand\"\n  },\n  options: [{\n    text: 'Open it carefully and catalog contents',\n    value: 'receiptGolem'\n  }, {\n    text: 'Share the loot with allies',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Kick it open violently',\n    value: 'glitterButcher'\n  }, {\n    text: 'Whisper secrets before opening',\n    value: 'trashOracle'\n  }]\n}, {\n  question: \"YOU ENCOUNTER A HACKER WITH STRANGE TACTICS. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hacker.png\",\n    alt: \"A hooded figure surrounded by floating code\"\n  },\n  options: [{\n    text: 'Recruit them for strategy',\n    value: 'apocalypseConspiracyTheorist'\n  }, {\n    text: 'Learn their techniques',\n    value: 'origamiDetective'\n  }, {\n    text: 'Mess with their system',\n    value: 'animalMime'\n  }, {\n    text: 'Ask cryptic questions',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU STUMBLE UPON A FLOATING ISLAND. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/floatingisland.png\",\n    alt: \"A small island hovering mysteriously above the ground\"\n  },\n  options: [{\n    text: 'Build a base atop it',\n    value: 'neonGravedigger'\n  }, {\n    text: 'Explore it for resources',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Jump off it recklessly',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Meditate on its floating mystery',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A GLOWING RUBBER DUCK. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duck.png\",\n    alt: \"A neon rubber duck floating in a puddle\"\n  },\n  options: [{\n    text: 'Make it the team mascot',\n    value: 'duckPainter'\n  }, {\n    text: 'Use it as a morale booster',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Squish it repeatedly',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Ask it for stock tips',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A GIANT JELLO MONSTER APPROACHES. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/jello.png\",\n    alt: \"A wobbling, translucent gelatinous creature\"\n  },\n  options: [{\n    text: 'Negotiate a treaty',\n    value: 'cockroachNegotiator'\n  }, {\n    text: 'Feed it spare snacks',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Punch it repeatedly',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Dance with it to the music',\n    value: 'doomDJ'\n  }]\n}, {\n  question: \"YOU DISCOVER A HAT THAT GIVES STRANGE POWERS. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/magichat.png\",\n    alt: \"A tall hat glowing with arcane energy\"\n  },\n  options: [{\n    text: 'Wear it and lead',\n    value: 'neonGravedigger'\n  }, {\n    text: 'Use it to help friends',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Throw it into a fire',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Ask it philosophical questions',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A PILE OF MYSTICAL TOAST. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toast.png\",\n    alt: \"Slices of glowing toast stacked in an odd pattern\"\n  },\n  options: [{\n    text: 'Distribute it fairly',\n    value: 'receiptGolem'\n  }, {\n    text: 'Offer it to hungry survivors',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Eat it in one bite',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Use it to predict the future',\n    value: 'trashOracle'\n  }]\n}, {\n  question: \"A STRANGE TUNNEL OF STUFFED ANIMALS. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socktunnel.png\",\n    alt: \"A twisting tunnel made entirely of socks\"\n  },\n  options: [{\n    text: 'Map it for safe passage',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Use it to smuggle supplies',\n    value: 'libraryCommando'\n  }, {\n    text: 'Roll through it screaming',\n    value: 'screamerScout'\n  }, {\n    text: 'Meditate inside it',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A ROBOT BUTTERFLY. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/butterfly.png\",\n    alt: \"A giant frowning butterfly perched on a rock\"\n  },\n  options: [{\n    text: 'Make it your adviser',\n    value: 'cyborgCellist'\n  }, {\n    text: 'Cheer it up with gifts',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Swat it angrily',\n    value: 'animalMime'\n  }, {\n    text: 'Have a philosophical debate',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A FLOATING ICE CREAM CONE BEGS FOR HELP. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/icecream.png\",\n    alt: \"A hovering ice cream cone with pleading eyes\"\n  },\n  options: [{\n    text: 'Rescue it carefully',\n    value: 'lavaLifeguard'\n  }, {\n    text: 'Share it with friends',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Eat it immediately',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Ask it about the universe',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A MYSTICAL BROOM. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/broom.png\",\n    alt: \"A broom glowing faintly and hovering slightly\"\n  },\n  options: [{\n    text: 'Use it to lead operations',\n    value: 'libraryCommando'\n  }, {\n    text: 'Clean the camp efficiently',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Swing it wildly',\n    value: 'molotovMixologist'\n  }, {\n    text: 'Ask it to tell stories',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A TALKING ROCK OFFERS YOU ADVICE. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/rock.png\",\n    alt: \"A small rock with a mouth and tiny eyes\"\n  },\n  options: [{\n    text: 'Listen carefully',\n    value: 'receiptGolem'\n  }, {\n    text: 'Take notes',\n    value: 'libraryCommando'\n  }, {\n    text: 'Ignore it and throw it',\n    value: 'animalMime'\n  }, {\n    text: 'Ask it riddles back',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"YOU FIND A GIANT SLIPPERY BANANA. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/banana.png\",\n    alt: \"A massive banana sliding down a hill\"\n  },\n  options: [{\n    text: 'Use it to create a trap',\n    value: 'cockroachNegotiator'\n  }, {\n    text: 'Share it with the squad',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Slip on it dramatically',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Meditate while balancing on it',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A UNICORN DEMANDS PAYMENT IN GLITTER. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/unicorn.png\",\n    alt: \"A unicorn glaring, its horn glowing like a credit card machine\"\n  },\n  options: [{\n    text: 'Offer your entire savings account of rainbows',\n    value: 'glitterButcher'\n  }, {\n    text: 'Split the glitter bill with your party',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Eat the glitter before anyone can pay',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Ask if the horn also accepts interpretive dance',\n    value: 'duckPainter'\n  }]\n}, {\n  question: \"BIGFOOT APPLIES FOR A JOB AS YOUR ROOMMATE. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bigfoot.png\",\n    alt: \"Bigfoot holding a poorly written resume and a coffee mug\"\n  },\n  options: [{\n    text: 'Conduct a formal roommate interview',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Help him polish his resume',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Challenge him to wrestle for the room',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Ask if he has references from cryptids or clouds',\n    value: 'apocalypseConspiracyTheorist'\n  }]\n}, {\n  question: \"A CHUPACABRA OPENS A TACO TRUCK. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chupacabra.png\",\n    alt: \"A chupacabra wearing an apron, handing out tacos suspiciously\"\n  },\n  options: [{\n    text: 'Help write a strict business plan',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Pass out free samples to friends',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Bite the tacos before customers can order',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Ask if the salsa is made of moonlight and goats',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"ZOMBIES INVITE YOU TO THEIR BOOK CLUB. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/zombies.png\",\n    alt: \"A group of zombies politely holding hardcover novels\"\n  },\n  options: [{\n    text: 'Lead the discussion on “Brains: A Memoir”',\n    value: 'doomDJ'\n  }, {\n    text: 'Bring snacks that aren’t brains',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Eat the book before the meeting starts',\n    value: 'animalMime'\n  }, {\n    text: 'Insist the only valid book is one written by worms',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A VAMPIRE WANTS TO START A PODCAST. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vampire.png\",\n    alt: \"A vampire adjusting a microphone, avoiding its reflection in the pop filter\"\n  },\n  options: [{\n    text: 'Offer to be the co-host and manage scheduling',\n    value: 'doomDJ'\n  }, {\n    text: 'Handle the editing and moral support',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Interrupt every episode with blood-slurping ASMR',\n    value: 'skeletonBarista'\n  }, {\n    text: 'Ask if the podcast only streams at midnight',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"NESSIE EMAILS YOU A LINK TO THEIR NEW MIXTAPE. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/nessie.jpg\",\n    alt: \"The Loch Ness monster wearing headphones, bobbing its head to beats\"\n  },\n  options: [{\n    text: 'Promote the mixtape aggressively online',\n    value: 'doomDJ'\n  }, {\n    text: 'Add it to a shared playlist for friends',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Slam-dance into the nearest lake',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Ask if the beats were recorded under the moon with kelp',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"GODZILLA APPEARS WITH A CLIPBOARD AND A SURVEY. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/godzilla.png\",\n    alt: \"Godzilla politely adjusting glasses while holding a clipboard\"\n  },\n  options: [{\n    text: 'Lead the survey as if you are the mayor of ruins',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Help tally up skyscraper satisfaction scores',\n    value: 'receiptGolem'\n  }, {\n    text: 'Eat the clipboard before any questions are asked',\n    value: 'animalMime'\n  }, {\n    text: 'Ask if destruction counts as “strongly agree” or “neutral”',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"A TRIBE OF TALKING CHEESE DEMANDS REPRESENTATION. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cheese.png\",\n    alt: \"A group of cheddar and brie wearing ceremonial robes, chanting\"\n  },\n  options: [{\n    text: 'Organize their cheese council with parliamentary rules',\n    value: 'bureaucracyGhoul'\n  }, {\n    text: 'Translate their dairy hymns for outsiders',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Gnaw on the elders during negotiations',\n    value: 'gnocchiNomad'\n  }, {\n    text: 'Ask if lactose intolerance is considered heresy',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"IN A CEMETERY, A GHOST OFFERS YOU A BROKEN LAWN CHAIR. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ghost.png\",\n    alt: \"A translucent ghost politely holding out a cracked lawn chair among gravestones\"\n  },\n  options: [{\n    text: 'Sit with solemn dignity and declare yourself king of the graveyard',\n    value: 'neonGravedigger'\n  }, {\n    text: 'Invite the ghost to sit while you applaud respectfully',\n    value: 'mutantHRManager'\n  }, {\n    text: 'Break the chair further and start a midnight wrestling match with shadows',\n    value: 'hamsterWarlord'\n  }, {\n    text: 'Ask the chair if it remembers its tree-life before death',\n    value: 'radioactivePhilosopher'\n  }]\n}, {\n  question: \"IN THE DESERT, YOU FIND A TREASURE CHEST HALF-BURIED IN DUNES. IT HUMS A COUNTRY SONG. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/treasure.png\",\n    alt: \"A weathered treasure chest jutting from golden sand under a blazing sun, faint musical notes rising from it\"\n  },\n  options: [{\n    text: 'Climb atop it and proclaim yourself Sheriff of Sand Dollars',\n    value: 'travelAgentOfTerror'\n  }, {\n    text: 'Fan the chest with palm fronds and whisper “you’re doing great, buddy”',\n    value: 'marshmallowGeneral'\n  }, {\n    text: 'Punch the dunes until a scorpion agrees to fight in your honor',\n    value: 'animalMime'\n  }, {\n    text: 'Ask the chest whether it prefers tumbleweeds or tax audits',\n    value: 'apocalypseConspiracyTheorist'\n  }]\n}, {\n  question: \"IN THE RUINS OF A FORMER LASER TAG ARENA, YOU FIND A BOMB DISGUISED AS A VENDING MACHINE. IT WHISPERS YOUR CHILDHOOD NICKNAME. YOU:\",\n  image: {\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/defuse.png\",\n    alt: \"A dusty vending machine with exposed wires and blinking lights, surrounded by cracked neon walls and scorched arcade carpet\"\n  },\n  options: [{\n    text: \"Insert a coupon for ‘One Free Existential Crisis’ and wait for it to vend enlightenment\",\n    \"value\": \"couponSaboteur\"\n  }, {\n    text: \"Challenge the bomb to a staring contest and lose dramatically\",\n    \"value\": \"eyeballDiplomat\"\n  }, {\n    text: \"Recite the alphabet backwards while juggling expired batteries\",\n    \"value\": \"entropyEntertainer\"\n  }, {\n    text: \"Offer it a friendship bracelet made of spaghetti and hope for detente\",\n    \"value\": \"noodleNegotiator\"\n  }]\n}];\nconst roles = {\n  trashOracle: {\n    description: 'Trash Oracle - Reads the future in garbage. Mysterious and oddly accurate.',\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/Oracle.png\"\n    }\n  },\n  mutantHRManager: {\n    description: 'Mutant HR Manager - Resolves conflict with tasers and empathy.',\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/MutantHR.png\"\n    }\n  },\n  screamerScout: {\n    description: 'Screamer Scout - Screams first, thinks later. Often right.',\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/dancer.png\"\n    }\n  },\n  bureaucracyGhoul: {\n    description: \"Bureaucracy Ghoul - Feeds on paperwork and thrives in long lines. Stamps documents with sinister precision.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bureaucracyGhoul.png\"\n    }\n  },\n  kaleChampion: {\n    description: \"Kale Champion - Armored in leafy resilience. Bitter, righteous, and impossible to wilt.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/kaleChampion.png\"\n    }\n  },\n  fogMechanic: {\n    description: \"Fog Mechanic - Fixes broken mists and tunes eerie atmospheres. Works only at dawn.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fogMechanic.png\"\n    }\n  },\n  skeletonBarista: {\n    description: \"Skeleton Barista - Serves bone-dry lattes. Milk froth screams faintly.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/skeletonBarista.png\"\n    }\n  },\n  neonGravedigger: {\n    description: \"Neon Gravedigger - Digs glowing graves that double as nightclubs. Morbid, yet festive.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/neonGravedigger.png\"\n    }\n  },\n  hamsterWarlord: {\n    description: \"Hamster Warlord - Commands an army of squeaky, wheel loving rodents. Tiny, fluffy, unstoppable.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hamsterWarlord.png\"\n    }\n  },\n  balloonNecromancer: {\n    description: \"Balloon Necromancer – Summons the dead with squeaky inflatables and helium whispers.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/balloonNecromancer.png\"\n    }\n  },\n  cockroachNegotiator: {\n    description: \"Cockroach Negotiator – Brokers peace treaties with indestructible insects over crumbs of power.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cockroachNegotiator.png\"\n    }\n  },\n  cyborgCellist: {\n    description: \"Cyborg Cellist – Performs haunting symphonies on titanium strings while sparks fly from the bow.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cyborgCellist.png\"\n    }\n  },\n  libraryCommando: {\n    description: \"Library Commando – Shushes enemies with militant silence and overdue-book fines.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/libraryCommando.png\"\n    }\n  },\n  doomDJ: {\n    description: \"Doom DJ – Spins tracks that summon thunder, collapse buildings, and start dance-offs with the void.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/doomDJ.png\"\n    }\n  },\n  duckPainter: {\n    description: \"Duck Painter – Covers the wasteland in murals of ducks that seem to stare back a little too knowingly.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duckPainter.png\"\n    }\n  },\n  glitterButcher: {\n    description: \"Glitter Butcher – Leaves every battlefield sparkling, fabulous, and disturbingly sticky.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glitterButcher.png\"\n    }\n  },\n  gnocchiNomad: {\n    description: \"Gnocchi Nomad – Wanders deserts with pockets full of potato pasta, feeding the hungry and confusing the rest.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/gnocchiNomad.png\"\n    }\n  },\n  lavaLifeguard: {\n    description: \"Lava Lifeguard – Blows a whistle at volcanoes and dives into magma to save screaming skeletons.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/lavaLifeguard.png\"\n    }\n  },\n  marshmallowGeneral: {\n    description: \"Marshmallow General – Commands gooey troops that roast enemies alive, slowly and deliciously.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/marshmallowGeneral.png\"\n    }\n  },\n  animalMime: {\n    description: \"Animal Mime – Mimics beasts so convincingly that predators applaud, then eat the audience.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/animalMime.png\"\n    }\n  },\n  molotovMixologist: {\n    description: \"Molotov Mixologist – Crafts cocktails that light up the night, garnished with chaos and a twist of lime.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/molotovMixologist.png\"\n    }\n  },\n  origamiDetective: {\n    description: \"Origami Detective – Folds clues into cranes, swans, and confessions that solve themselves.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/origamiDetective.png\"\n    }\n  },\n  radioactivePhilosopher: {\n    description: \"Radioactive Philosopher – Glows in the dark while pondering whether fallout has meaning.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/radioactivePhilosopher.png\"\n    }\n  },\n  receiptGolem: {\n    description: \"Receipt Golem – Born from endless shopping slips, remembers every purchase, judges all of them.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/receiptGolem.png\"\n    }\n  },\n  squirrelTamer: {\n    description: \"Squirrel Tamer – Bends armies of twitchy rodents to their will with acorn diplomacy.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/squirrelTamer.png\"\n    }\n  },\n  apocalypseConspiracyTheorist: {\n    description: \"Apocalypse Conspiracy Theorist – Knew it all along, explains it with 48 corkboards and zero evidence.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/apocalypseConspiracyTheorist.png\"\n    }\n  },\n  yodelMechanic: {\n    description: \"Yodel Mechanic – Fixes broken engines by singing so loud pistons weep oil in gratitude.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/yodelMechanic.png\"\n    }\n  },\n  travelAgentOfTerror: {\n    description: \"Travel Agent of Terror – Books scenic vacations to sinkholes, haunted malls, and endless bureaucracy lines.\",\n    image: {\n      uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/travelAgentOfTerror.png\"\n    }\n  }\n};\nexport default function App() {\n  const [isTitleVisible, setIsTitleVisible] = useState(true);\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  const [mode, setMode] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [quizQuestions, setQuizQuestions] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const [exitWarningVisible, setExitWarningVisible] = useState(false);\n  const scrollY = useRef(new Animated.Value(400)).current;\n  const [quizSound, setQuizSound] = useState(null);\n  const [creditsSound, setCreditsSound] = useState(null);\n  const [titleSound, setTitleSound] = useState(null);\n  const [secretSound, setSecretSound] = useState(null);\n  const [secretResultSound, setSecretResultSound] = useState(null);\n  const [contentHeight, setContentHeight] = useState(0);\n  const [secretClicks, setSecretClicks] = useState(0);\n  const [secretUnlocked, setSecretUnlocked] = useState(false);\n  const [secretBoxTaps, setSecretBoxTaps] = useState([false, false, false, false]);\n  const [secretStage, setSecretStage] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  const screenHeight = Dimensions.get(\"window\").height;\n  const [creditsOffsetY, setCreditsOffsetY] = useState(0);\n  const flicker = useRef(new Animated.Value(1)).current;\n  const jitterX = useRef(new Animated.Value(0)).current;\n  const [showAccessOverlay, setShowAccessOverlay] = useState(false);\n  const overlayOpacity = useRef(new Animated.Value(0)).current;\n  const screenOpacity = useRef(new Animated.Value(0)).current;\n  const previousModeRef = useRef(null);\n  useEffect(() => {\n    if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\n      previousModeRef.current = mode;\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (mode === \"secret\") {\n      setShowAccessOverlay(true);\n      Animated.parallel([Animated.sequence([Animated.timing(flicker, {\n        toValue: 0.3,\n        duration: 70,\n        useNativeDriver: true\n      }), Animated.timing(flicker, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true\n      }), Animated.timing(flicker, {\n        toValue: 0.6,\n        duration: 60,\n        useNativeDriver: true\n      }), Animated.timing(flicker, {\n        toValue: 1,\n        duration: 120,\n        useNativeDriver: true\n      })]), Animated.sequence([Animated.timing(jitterX, {\n        toValue: -10,\n        duration: 80,\n        useNativeDriver: true\n      }), Animated.timing(jitterX, {\n        toValue: 12,\n        duration: 100,\n        useNativeDriver: true\n      }), Animated.timing(jitterX, {\n        toValue: -6,\n        duration: 70,\n        useNativeDriver: true\n      }), Animated.timing(jitterX, {\n        toValue: 0,\n        duration: 120,\n        useNativeDriver: true\n      })])]).start();\n      Animated.sequence([Animated.timing(overlayOpacity, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: true\n      }), Animated.delay(600), Animated.timing(overlayOpacity, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: true\n      }), Animated.timing(screenOpacity, {\n        toValue: 1,\n        duration: 600,\n        useNativeDriver: true\n      })]).start(() => {\n        setShowAccessOverlay(false);\n      });\n    }\n  }, [mode]);\n  const toggleMute = async () => {\n    const newMuted = !isMuted;\n    setIsMuted(newMuted);\n    const allSounds = [titleSound, quizSound, creditsSound];\n    for (let s of allSounds) {\n      if (!s) continue;\n      const status = await s.getStatusAsync();\n      if (!status.isLoaded) continue;\n      if (newMuted) {\n        if (status.isPlaying) await s.pauseAsync();\n      } else {\n        if (!status.isPlaying) await s.playAsync();\n      }\n    }\n  };\n  const MuteButton = () => _jsxDEV(TouchableOpacity, {\n    onPress: toggleMute,\n    style: {\n      position: \"absolute\",\n      bottom: 20,\n      left: 20,\n      width: 60,\n      height: 50,\n      zIndex: 1000,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: [_jsxDEV(View, {\n      style: {\n        width: 0,\n        height: 0,\n        borderTopWidth: 12,\n        borderBottomWidth: 12,\n        borderRightWidth: 20,\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\",\n        borderRightColor: \"#00FF00\",\n        position: \"absolute\",\n        left: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1044,\n      columnNumber: 5\n    }, this), !isMuted && _jsxDEV(_Fragment, {\n      children: [_jsxDEV(View, {\n        style: {\n          width: 2,\n          height: 6,\n          backgroundColor: \"#00FF00\",\n          position: \"absolute\",\n          left: 34,\n          top: 22\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          width: 2,\n          height: 10,\n          backgroundColor: \"#00FF00\",\n          position: \"absolute\",\n          left: 40,\n          top: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1068,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          width: 2,\n          height: 14,\n          backgroundColor: \"#00FF00\",\n          position: \"absolute\",\n          left: 46,\n          top: 18\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), isMuted && _jsxDEV(_Fragment, {\n      children: [_jsxDEV(View, {\n        style: {\n          width: 35,\n          height: 2,\n          backgroundColor: \"#FF0000\",\n          position: \"absolute\",\n          transform: [{\n            rotate: \"45deg\"\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        style: {\n          width: 35,\n          height: 2,\n          backgroundColor: \"#FF0000\",\n          position: \"absolute\",\n          transform: [{\n            rotate: \"-45deg\"\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1030,\n    columnNumber: 3\n  }, this);\n  const SecretProgressBar = ({\n    currentSecretIndex,\n    onComplete\n  }) => {\n    const [progress, setProgress] = useState(0);\n    const handlePress = () => {\n      if (currentSecretIndex !== 2) return;\n      if (progress < 5) {\n        const newProgress = progress + 1;\n        setProgress(newProgress);\n        if (newProgress === 5) {\n          onComplete();\n        }\n      }\n    };\n    return _jsxDEV(TouchableOpacity, {\n      activeOpacity: currentSecretIndex === 2 ? 0.8 : 1,\n      onPress: handlePress,\n      style: styles.secretProgressContainer,\n      children: _jsxDEV(View, {\n        style: styles.secretProgressBackground,\n        children: [_jsxDEV(View, {\n          style: [styles.secretProgressFill, {\n            flex: progress\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: {\n            flex: 5 - progress\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1135,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 5\n    }, this);\n  };\n  const confirmQuit = () => {\n    setExitWarningVisible(true);\n  };\n  async function playTitleMusic() {\n    if (titleSound) {\n      const status = await titleSound.getStatusAsync();\n      if (!status.isPlaying) {\n        await titleSound.playAsync();\n      }\n      return;\n    }\n    const {\n      sound\n    } = await Audio.Sound.createAsync(require('./assets/music/TLPR.mp3'), {\n      isLooping: true,\n      shouldPlay: true\n    });\n    setTitleSound(sound);\n    await sound.playAsync();\n  }\n  async function playQuizMusic() {\n    const {\n      sound\n    } = await Audio.Sound.createAsync(require('./assets/music/LPME.mp3'), {\n      isLooping: true,\n      shouldPlay: true\n    });\n    setQuizSound(sound);\n    await sound.playAsync();\n  }\n  async function playCreditsMusic() {\n    const {\n      sound\n    } = await Audio.Sound.createAsync(require('./assets/music/TLCKMD.mp3'), {\n      isLooping: true,\n      shouldPlay: true\n    });\n    setCreditsSound(sound);\n    await sound.playAsync();\n  }\n  async function playSecretMusic() {\n    const {\n      sound\n    } = await Audio.Sound.createAsync(require(\"./assets/music/TLTV.mp3\"), {\n      isLooping: true,\n      shouldPlay: true\n    });\n    setSecretSound(sound);\n    await sound.playAsync();\n  }\n  async function playSecretResultMusic() {\n    const {\n      sound\n    } = await Audio.Sound.createAsync(require('./assets/music/TLA.mp3'), {\n      isLooping: true,\n      shouldPlay: true\n    });\n    setSecretResultSound(sound);\n    await sound.playAsync();\n  }\n  async function stopAllMusic() {\n    if (titleSound) {\n      await titleSound.stopAsync();\n      await titleSound.unloadAsync();\n      setTitleSound(null);\n    }\n    if (quizSound) {\n      await quizSound.stopAsync();\n      await quizSound.unloadAsync();\n      setQuizSound(null);\n    }\n    if (creditsSound) {\n      await creditsSound.stopAsync();\n      await creditsSound.unloadAsync();\n      setCreditsSound(null);\n    }\n    if (secretSound) {\n      await secretSound.stopAsync();\n      await secretSound.unloadAsync();\n      setSecretSound(null);\n    }\n    if (secretResultSound) {\n      await secretResultSound.stopAsync();\n      await secretResultSound.unloadAsync();\n      setSecretResultSound(null);\n    }\n  }\n  useEffect(() => {\n    let isMounted = true;\n    const handleMusic = async () => {\n      if (!isMounted) return;\n      let desiredTrack = null;\n      if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\n        desiredTrack = \"quiz\";\n      } else if (mode === \"credits\") {\n        desiredTrack = \"credits\";\n      } else if (mode === \"secret\" && secretStage < 4) {\n        desiredTrack = \"secret\";\n      } else if (mode === \"secret\" && secretStage === 4) {\n        desiredTrack = \"secretResult\";\n      } else if (mode === null) {\n        desiredTrack = \"title\";\n      }\n      if (desiredTrack !== \"title\" && titleSound) {\n        await titleSound.stopAsync();\n        await titleSound.unloadAsync();\n        setTitleSound(null);\n      }\n      if (desiredTrack !== \"quiz\" && quizSound) {\n        await quizSound.stopAsync();\n        await quizSound.unloadAsync();\n        setQuizSound(null);\n      }\n      if (desiredTrack !== \"credits\" && creditsSound) {\n        await creditsSound.stopAsync();\n        await creditsSound.unloadAsync();\n        setCreditsSound(null);\n      }\n      if (desiredTrack !== \"secret\" && secretSound) {\n        await secretSound.stopAsync();\n        await secretSound.unloadAsync();\n        setSecretSound(null);\n      }\n      if (desiredTrack !== \"secretResult\" && secretResultSound) {\n        await secretResultSound.stopAsync();\n        await secretResultSound.unloadAsync();\n        setSecretResultSound(null);\n      }\n      if (isMuted) return;\n      if (desiredTrack === \"title\" && !titleSound) await playTitleMusic();else if (desiredTrack === \"quiz\" && !quizSound) await playQuizMusic();else if (desiredTrack === \"credits\" && !creditsSound) await playCreditsMusic();else if (desiredTrack === \"secret\" && !secretSound) await playSecretMusic();else if (desiredTrack === \"secretResult\" && !secretResultSound) await playSecretResultMusic();\n    };\n    handleMusic();\n    return () => {\n      isMounted = false;\n    };\n  }, [mode, isMuted, secretStage]);\n  useEffect(() => {\n    if (mode === \"credits\" && contentHeight > 0) {\n      const screenHeight = Dimensions.get(\"window\").height;\n      scrollY.setValue(screenHeight - contentHeight - creditsOffsetY);\n      const distance = contentHeight + screenHeight;\n      const speed = 50;\n      const duration = distance / speed * 1000;\n      Animated.timing(scrollY, {\n        toValue: -contentHeight,\n        duration: duration,\n        easing: Easing.linear,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [mode, contentHeight, creditsOffsetY]);\n  useEffect(() => {\n    if (mode) {\n      let num = mode === 'basic' ? 10 : mode === 'advanced' ? 20 : 30;\n      setQuizQuestions(getRandomQuestions(num));\n    }\n  }, [mode]);\n  const getRandomQuestions = num => {\n    const copy = [...allQuestions];\n    for (let i = copy.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [copy[i], copy[j]] = [copy[j], copy[i]];\n    }\n    return copy.slice(0, num);\n  };\n  const handleAnswer = value => {\n    const newAnswers = [...answers, value];\n    setAnswers(newAnswers);\n    if (currentQuestion + 1 < quizQuestions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  const restartQuiz = () => {\n    setCurrentQuestion(0);\n    setAnswers([]);\n    setMode(null);\n    setShowResult(false);\n  };\n  const calculateResult = () => {\n    const tally = {};\n    answers.forEach(val => {\n      tally[val] = (tally[val] || 0) + 1;\n    });\n    return Object.entries(tally).sort((a, b) => b[1] - a[1])[0][0];\n  };\n  if (!fontsLoaded) {\n    return _jsxDEV(AppLoading, {\n      startAsync: getFonts,\n      onFinish: () => setFontsLoaded(true),\n      onError: console.warn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1366,\n      columnNumber: 12\n    }, this);\n  }\n  if (isTitleVisible) {\n    return _jsxDEV(TitleScreen, {\n      onStart: () => setIsTitleVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1371,\n      columnNumber: 12\n    }, this);\n  }\n  if (mode === \"credits\") {\n    return _jsxDEV(View, {\n      style: {\n        flex: 1,\n        backgroundColor: '#000'\n      },\n      children: _jsxDEV(ScrollView, {\n        contentContainerStyle: [styles.fullScreenContainer, {\n          flexGrow: 1,\n          justifyContent: 'space-between',\n          paddingBottom: 40\n        }],\n        children: [_jsxDEV(View, {\n          style: styles.headerWrapper,\n          children: _jsxDEV(Text, {\n            style: styles.header,\n            children: \"CREDITS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1390,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1389,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: styles.creditsContainer,\n          onLayout: e => {\n            const offsetY = e.nativeEvent.layout.y;\n            setCreditsOffsetY(offsetY);\n          },\n          children: _jsxDEV(Animated.View, {\n            style: {\n              transform: [{\n                translateY: scrollY\n              }]\n            },\n            children: _jsxDEV(View, {\n              onLayout: e => setContentHeight(e.nativeEvent.layout.height),\n              style: styles.creditsInner,\n              children: _jsxDEV(Text, {\n                style: styles.creditsText,\n                children: \"DEVELOPED BY\\nDboss212121\\n\\nARTWORK\\nAI\\n\\nMUSIC\\nTrevor Lentz - Ascend\\nTrevor Lentz - Can't Keep Me down\\nTrevor Lentz - Pixel River\\nTrevor Lentz - This Sky of Mine\\nTrevor Lentz - The Void\\nLenny Pixels - Mother Board Encore - 8bit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1406,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 11\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.button,\n          onPress: () => setMode(null),\n          children: _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1415,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1414,\n          columnNumber: 9\n        }, this), _jsxDEV(MuteButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 5\n    }, this);\n  }\n  if (!mode) {\n    return _jsxDEV(View, {\n      style: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"CHOOSE YOUR APOCALYPSE QUIZ MODE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1430,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('basic'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"BASIC (10 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1431,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('advanced'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"ADVANCED (20 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('full'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"FULL EVALUATION (30 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1433,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.creditsButton,\n        onPress: () => setMode(\"credits\"),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Credits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1434,\n        columnNumber: 9\n      }, this), _jsxDEV(MuteButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1437,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1429,\n      columnNumber: 7\n    }, this);\n  }\n  if (showResult) {\n    const role = calculateResult();\n    return _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"YOUR APOCALYPSE CAREER IS:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1448,\n        columnNumber: 9\n      }, this), _jsxDEV(Image, {\n        source: roles[role].image,\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.resultText,\n        children: roles[role].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: restartQuiz,\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"HOME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1451,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1447,\n      columnNumber: 7\n    }, this);\n  }\n  if (mode === \"secret\" && secretStage === 1) {\n    const handleBoxPress = index => {\n      const next = [...secretBoxTaps];\n      next[index] = true;\n      setSecretBoxTaps(next);\n      if (next.every(Boolean)) setSecretStage(2);\n    };\n    const handleSecretAnswer = value => {\n      const newAnswers = [...answers, value];\n      setAnswers(newAnswers);\n      if (currentQuestion + 1 < quizQuestions.length) {\n        setCurrentQuestion(currentQuestion + 1);\n        setMode(previousModeRef.current);\n      } else {\n        setShowResult(true);\n        setSecretStage(0);\n        setMode(previousModeRef.current);\n      }\n    };\n    return _jsxDEV(Animated.View, {\n      style: {\n        flex: 1,\n        opacity: flicker,\n        transform: [{\n          translateX: jitterX\n        }]\n      },\n      children: [showAccessOverlay && _jsxDEV(Animated.View, {\n        style: [styles.accessOverlay, {\n          opacity: overlayOpacity\n        }],\n        children: [_jsxDEV(Text, {\n          style: styles.accessText,\n          children: \"OVERRIDE PROTOCOL ENGAGED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1484,\n          columnNumber: 9\n        }, this), _jsxDEV(Text, {\n          style: styles.accessText,\n          children: \"ACCESS GRANTED: \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1483,\n        columnNumber: 7\n      }, this), _jsxDEV(Animated.View, {\n        style: {\n          flex: 1,\n          opacity: screenOpacity\n        },\n        children: _jsxDEV(ScrollView, {\n          contentContainerStyle: styles.fullScreenContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.header,\n            children: \"THE AIR GOES QUIET. WHAT DO YOU DO?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1493,\n            columnNumber: 7\n          }, this), _jsxDEV(Image, {\n            source: {\n              uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/thedoor.png\"\n            },\n            style: styles.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 7\n          }, this), [{\n            text: \"Hold your breath and wait\",\n            value: \"doomDJ\"\n          }, {\n            text: \"Signal your crew to regroup\",\n            value: \"mutantHRManager\"\n          }, {\n            text: \"Sprint toward the sound\",\n            value: \"screamerScout\"\n          }, {\n            text: \"Hum back at the horizon\",\n            value: \"trashOracle\"\n          }].map((opt, i) => _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: () => handleSecretAnswer(opt.value),\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: opt.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1509,\n              columnNumber: 11\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1504,\n            columnNumber: 9\n          }, this)), _jsxDEV(View, {\n            pointerEvents: \"box-none\",\n            style: styles.secretOverlay,\n            children: [0, 1, 2, 3].map(i => _jsxDEV(TouchableOpacity, {\n              onPress: () => handleBoxPress(i),\n              style: [styles.cornerBox, i === 0 && styles.tl, i === 1 && styles.tr, i === 2 && styles.bl, i === 3 && styles.br, secretBoxTaps[i] && styles.cornerBoxActive]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1516,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1514,\n            columnNumber: 7\n          }, this), _jsxDEV(SecretProgressBar, {\n            currentSecretIndex: -1,\n            onComplete: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1532,\n            columnNumber: 7\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: () => setMode(previousModeRef.current),\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"QUIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1538,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1534,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1490,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1481,\n      columnNumber: 3\n    }, this);\n  }\n  if (mode === \"secret\" && secretStage === 2) {\n    const handleSecretAnswer = value => {\n      const newAnswers = [...answers, value];\n      setAnswers(newAnswers);\n      if (currentQuestion + 1 < quizQuestions.length) {\n        setCurrentQuestion(currentQuestion + 1);\n        setMode(previousModeRef.current);\n      } else {\n        setShowResult(true);\n        setMode(previousModeRef.current);\n      }\n    };\n    return _jsxDEV(View, {\n      style: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"THE HORIZON SHIFTS. WHAT'S YOUR MOVE?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 7\n      }, this), _jsxDEV(Image, {\n        source: {\n          uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/secretroom.png\"\n        },\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1564,\n        columnNumber: 7\n      }, this), [{\n        text: \"Step cautiously forward\",\n        value: \"doomDJ\"\n      }, {\n        text: \"Observe silently\",\n        value: \"mutantHRManager\"\n      }, {\n        text: \"Run toward the light\",\n        value: \"screamerScout\"\n      }, {\n        text: \"Call out a strange sound\",\n        value: \"trashOracle\"\n      }].map((opt, i) => _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => handleSecretAnswer(opt.value),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: opt.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1580,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1575,\n        columnNumber: 9\n      }, this)), _jsxDEV(View, {\n        pointerEvents: \"box-none\",\n        style: styles.secretOverlay,\n        children: [0, 1, 2, 3].map(i => _jsxDEV(View, {\n          style: [styles.cornerBox, i === 0 && styles.tl, i === 1 && styles.tr, i === 2 && styles.bl, i === 3 && styles.br]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1587,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1585,\n        columnNumber: 7\n      }, this), _jsxDEV(SecretProgressBar, {\n        currentSecretIndex: -1,\n        onComplete: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 7\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setSecretStage(3),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1608,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1562,\n      columnNumber: 5\n    }, this);\n  }\n  if (mode === \"secret\" && secretStage === 3) {\n    const handleSecretAnswer = value => {\n      const newAnswers = [...answers, value];\n      setAnswers(newAnswers);\n      if (currentQuestion + 1 < quizQuestions.length) {\n        setCurrentQuestion(currentQuestion + 1);\n        setMode(previousModeRef.current);\n      } else {\n        setShowResult(true);\n        setMode(previousModeRef.current);\n      }\n    };\n    const handleProgressComplete = () => {\n      setSecretStage(4);\n    };\n    return _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"A STRANGE ENERGY SURROUNDS YOU. WHAT DO YOU DO?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1636,\n        columnNumber: 7\n      }, this), _jsxDEV(Image, {\n        source: {\n          uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/agents.png\"\n        },\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1637,\n        columnNumber: 7\n      }, this), [{\n        text: \"Step boldly forward\",\n        value: \"doomDJ\"\n      }, {\n        text: \"Wait and watch\",\n        value: \"mutantHRManager\"\n      }, {\n        text: \"Leap toward the source\",\n        value: \"screamerScout\"\n      }, {\n        text: \"Whisper a strange chant\",\n        value: \"trashOracle\"\n      }].map((opt, i) => _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => handleSecretAnswer(opt.value),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: opt.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1653,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 9\n      }, this)), _jsxDEV(View, {\n        pointerEvents: \"box-none\",\n        style: styles.secretOverlay,\n        children: [0, 1, 2, 3].map(i => _jsxDEV(TouchableOpacity, {\n          onPress: () => {},\n          style: [styles.cornerBox, i === 0 && styles.tl, i === 1 && styles.tr, i === 2 && styles.bl, i === 3 && styles.br]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1660,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1658,\n        columnNumber: 7\n      }, this), _jsxDEV(SecretProgressBar, {\n        currentSecretIndex: 2,\n        onComplete: handleProgressComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1675,\n        columnNumber: 7\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode(previousModeRef.current),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Quit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1679,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1678,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1635,\n      columnNumber: 5\n    }, this);\n  }\n  if (mode === \"secret\" && secretStage === 4) {\n    return _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"🏆 YOU BEAT MY APP 🏆\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1689,\n        columnNumber: 7\n      }, this), _jsxDEV(Image, {\n        source: {\n          uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/utopia.png\"\n        },\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1690,\n        columnNumber: 7\n      }, this), _jsxDEV(Text, {\n        style: styles.creditsText,\n        children: \"Against all odds, you found the hidden path and conquered it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1696,\n        columnNumber: 7\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => {\n          setMode(null);\n          setSecretStage(1);\n          setSecretBoxTaps([false, false, false, false]);\n          setSecretProgress(0);\n          setCurrentQuestion(0);\n          setAnswers([]);\n          setShowResult(false);\n          setProgress(0);\n        },\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"BACK TO QUIZ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1700,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1688,\n      columnNumber: 5\n    }, this);\n  }\n  if (!mode) {\n    return _jsxDEV(View, {\n      style: styles.fullScreenContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.header,\n        children: \"CHOOSE YOUR APOCALYPSE QUIZ MODE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1723,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('basic'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"BASIC (10 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1724,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1724,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('advanced'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"ADVANCED (20 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1725,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1725,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: () => setMode('full'),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"FULL EVALUATION (30 Qs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1726,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1726,\n        columnNumber: 9\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.creditsButton,\n        onPress: () => setMode(\"credits\"),\n        children: _jsxDEV(Text, {\n          style: styles.buttonText,\n          children: \"Credits\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1727,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1722,\n      columnNumber: 7\n    }, this);\n  }\n  const q = quizQuestions[currentQuestion] ?? {};\n  const progress = Math.round(currentQuestion / quizQuestions.length * 100);\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.fullScreenContainer,\n    children: [_jsxDEV(Text, {\n      style: styles.header,\n      children: q.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1738,\n      columnNumber: 5\n    }, this), q.image && _jsxDEV(TouchableOpacity, {\n      onPress: () => {\n        const newCount = secretClicks + 1;\n        setSecretClicks(newCount);\n        if (newCount >= 5) {\n          setSecretUnlocked(true);\n          setMode(\"secret\");\n          setSecretClicks(0);\n        }\n      },\n      children: _jsxDEV(Image, {\n        source: {\n          uri: q.image.uri\n        },\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1752,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1740,\n      columnNumber: 3\n    }, this), q.options && q.options.map((opt, index) => _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: () => handleAnswer(opt.value),\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: opt.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1759,\n      columnNumber: 7\n    }, this)), _jsxDEV(View, {\n      style: styles.progressContainer,\n      children: _jsxDEV(View, {\n        style: [styles.progressBar, {\n          width: `${progress}%`\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 5\n    }, this), !showResult && _jsxDEV(TouchableOpacity, {\n      style: styles.button,\n      onPress: () => setExitWarningVisible(true),\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: \"QUIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1770,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1769,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      transparent: true,\n      visible: exitWarningVisible,\n      animationType: \"fade\",\n      onRequestClose: () => setExitWarningVisible(false),\n      children: _jsxDEV(View, {\n        style: styles.modalOverlay,\n        children: _jsxDEV(View, {\n          style: styles.modalContent,\n          children: [_jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"ARE YOU SURE YOU WANT TO QUIT AND LOSE ALL PROGRESS?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1783,\n            columnNumber: 11\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: () => setExitWarningVisible(false),\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"CANCEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1785,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1784,\n            columnNumber: 11\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.button,\n            onPress: () => {\n              setExitWarningVisible(false);\n              setCurrentQuestion(0);\n              setAnswers([]);\n              setQuizQuestions([]);\n              setShowResult(false);\n              setMode(null);\n            },\n            children: _jsxDEV(Text, {\n              style: styles.buttonText,\n              children: \"YES, QUIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1787,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1782,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1781,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1775,\n      columnNumber: 5\n    }, this), _jsxDEV(MuteButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1802,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1737,\n    columnNumber: 3\n  }, this);\n}\nconst styles = StyleSheet.create({\n  fullScreenContainer: {\n    flexGrow: 1,\n    minHeight: Dimensions.get('window').height,\n    backgroundColor: '#000',\n    paddingTop: 60,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    marginHorizontal: 'auto',\n    position: 'relative'\n  },\n  header: {\n    fontFamily: 'press-start',\n    fontSize: 20,\n    lineHeight: 28,\n    textAlign: 'center',\n    color: '#00ff00',\n    marginBottom: 16,\n    paddingHorizontal: 12,\n    width: '100%',\n    maxWidth: 500,\n    alignSelf: 'center',\n    flexShrink: 1\n  },\n  button: {\n    backgroundColor: '#000',\n    borderColor: '#00ff00',\n    borderWidth: 2,\n    padding: 12,\n    marginTop: 16,\n    width: '80%'\n  },\n  buttonText: {\n    color: '#00ff00',\n    fontFamily: 'press-start',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  resultText: {\n    color: '#0ff',\n    fontSize: 12,\n    fontFamily: 'press-start',\n    textAlign: 'center',\n    marginVertical: 20\n  },\n  progressContainer: {\n    width: '80%',\n    height: 12,\n    backgroundColor: '#333',\n    borderColor: '#00ff00',\n    borderWidth: 2,\n    marginTop: 16\n  },\n  progressBar: {\n    height: '100%',\n    backgroundColor: '#00ff00'\n  },\n  image: {\n    width: 200,\n    height: 200,\n    resizeMode: 'contain',\n    marginBottom: 16,\n    borderColor: '#00eeff',\n    borderWidth: 2\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontFamily: 'press-start',\n    fontSize: 32,\n    color: 'red',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  subtitle: {\n    fontFamily: 'press-start',\n    fontSize: 16,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  tap: {\n    fontFamily: 'press-start',\n    fontSize: 14,\n    color: 'lime',\n    marginTop: 50,\n    textAlign: 'center'\n  },\n  titelHeader: {\n    fontFamily: 'press-start',\n    fontSize: 24,\n    color: 'lime'\n  },\n  titleScreenContainer: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  titleText: {\n    fontFamily: 'press-start',\n    fontSize: 28,\n    color: '#00ff00',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  subtitleText: {\n    fontFamily: 'press-start',\n    fontSize: 14,\n    color: '#00ff00',\n    textAlign: 'center',\n    marginBottom: 40\n  },\n  tapToStart: {\n    fontFamily: 'press-start',\n    fontSize: 12,\n    color: '#00ff00',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modalContent: {\n    backgroundColor: \"#222\",\n    padding: 20,\n    borderRadius: 10,\n    width: \"80%\",\n    alignItems: \"center\"\n  },\n  modalText: {\n    color: \"#fff\",\n    fontSize: 18,\n    marginBottom: 20,\n    textAlign: \"center\"\n  },\n  scrollContainer: {\n    padding: 20,\n    alignItems: \"center\"\n  },\n  creditItem: {\n    fontSize: 16,\n    color: \"white\",\n    marginBottom: 10,\n    textAlign: \"center\"\n  },\n  creditsButton: {\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n    paddingVertical: 8,\n    paddingHorizontal: 14,\n    backgroundColor: \"#333\",\n    borderRadius: 8\n  },\n  creditsText: {\n    fontSize: 20,\n    color: '#33bbff',\n    textAlign: 'center',\n    lineHeight: 28,\n    fontFamily: 'press-start'\n  },\n  secretOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    maxHeight: '100%',\n    zIndex: 10\n  },\n  cornerBox: {\n    position: \"absolute\",\n    width: 26,\n    height: 26,\n    borderWidth: 2,\n    borderColor: \"#00ff00\",\n    borderRadius: 6,\n    backgroundColor: \"transparent\",\n    opacity: 0.65\n  },\n  cornerBoxActive: {\n    opacity: 1,\n    backgroundColor: \"rgba(0,255,0,0.12)\"\n  },\n  tl: {\n    top: 12,\n    left: 12\n  },\n  tr: {\n    top: 12,\n    right: 12\n  },\n  bl: {\n    bottom: 12,\n    left: 12\n  },\n  br: {\n    bottom: 12,\n    right: 12\n  },\n  secretProgressContainer: {\n    marginVertical: 12,\n    width: '90%',\n    alignSelf: 'center'\n  },\n  secretProgressBackground: {\n    flexDirection: 'row',\n    height: 20,\n    backgroundColor: '#001133',\n    borderColor: '#33bbff',\n    borderWidth: 2,\n    borderRadius: 8,\n    shadowColor: '#33bbff',\n    shadowOpacity: 0.8,\n    shadowRadius: 8,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    overflow: 'hidden'\n  },\n  secretProgressFill: {\n    backgroundColor: '#00ccff',\n    borderRightWidth: 1,\n    borderRightColor: '#003366'\n  },\n  headerWrapper: {\n    width: '100%',\n    maxWidth: 500,\n    alignSelf: 'center',\n    paddingHorizontal: 12\n  },\n  creditsContainer: {\n    overflow: 'hidden',\n    width: '100%',\n    maxWidth: 500,\n    marginHorizontal: 'auto',\n    height: 300,\n    alignSelf: 'center'\n  },\n  creditsInner: {\n    margin: 0,\n    padding: 0,\n    width: '100%',\n    maxWidth: 500,\n    alignSelf: 'center'\n  },\n  accessOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 999\n  },\n  accessText: {\n    color: '#0ff',\n    fontSize: 18,\n    fontFamily: 'monospace',\n    letterSpacing: 2,\n    textAlign: 'center',\n    marginVertical: 4\n  }\n});","map":{"version":3,"names":["Audio","AppLoading","Font","useEffect","useState","useRef","ScrollView","StyleSheet","Text","TouchableOpacity","View","Dimensions","Image","Animated","Easing","Modal","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","getFonts","loadAsync","require","TitleScreen","onStart","fadeAnim","Value","pulseAnim","timing","toValue","duration","useNativeDriver","easing","ease","start","loop","sequence","style","styles","titleScreenContainer","children","opacity","titleText","fileName","_jsxFileName","lineNumber","columnNumber","subtitleText","onPress","tapToStart","allQuestions","question","image","uri","alt","options","text","value","roles","trashOracle","description","mutantHRManager","screamerScout","bureaucracyGhoul","kaleChampion","fogMechanic","skeletonBarista","neonGravedigger","hamsterWarlord","balloonNecromancer","cockroachNegotiator","cyborgCellist","libraryCommando","doomDJ","duckPainter","glitterButcher","gnocchiNomad","lavaLifeguard","marshmallowGeneral","animalMime","molotovMixologist","origamiDetective","radioactivePhilosopher","receiptGolem","squirrelTamer","apocalypseConspiracyTheorist","yodelMechanic","travelAgentOfTerror","App","isTitleVisible","setIsTitleVisible","fontsLoaded","setFontsLoaded","mode","setMode","currentQuestion","setCurrentQuestion","answers","setAnswers","quizQuestions","setQuizQuestions","showResult","setShowResult","exitWarningVisible","setExitWarningVisible","scrollY","current","quizSound","setQuizSound","creditsSound","setCreditsSound","titleSound","setTitleSound","secretSound","setSecretSound","secretResultSound","setSecretResultSound","contentHeight","setContentHeight","secretClicks","setSecretClicks","secretUnlocked","setSecretUnlocked","secretBoxTaps","setSecretBoxTaps","secretStage","setSecretStage","isMuted","setIsMuted","screenHeight","get","height","creditsOffsetY","setCreditsOffsetY","flicker","jitterX","showAccessOverlay","setShowAccessOverlay","overlayOpacity","screenOpacity","previousModeRef","parallel","delay","toggleMute","newMuted","allSounds","s","status","getStatusAsync","isLoaded","isPlaying","pauseAsync","playAsync","MuteButton","position","bottom","left","width","zIndex","justifyContent","alignItems","borderTopWidth","borderBottomWidth","borderRightWidth","borderTopColor","borderBottomColor","borderRightColor","backgroundColor","top","transform","rotate","SecretProgressBar","currentSecretIndex","onComplete","progress","setProgress","handlePress","newProgress","activeOpacity","secretProgressContainer","secretProgressBackground","secretProgressFill","flex","confirmQuit","playTitleMusic","sound","Sound","createAsync","isLooping","shouldPlay","playQuizMusic","playCreditsMusic","playSecretMusic","playSecretResultMusic","stopAllMusic","stopAsync","unloadAsync","isMounted","handleMusic","desiredTrack","setValue","distance","speed","linear","num","getRandomQuestions","copy","i","length","j","Math","floor","random","slice","handleAnswer","newAnswers","restartQuiz","calculateResult","tally","forEach","val","Object","entries","sort","a","b","startAsync","onFinish","onError","console","warn","contentContainerStyle","fullScreenContainer","flexGrow","paddingBottom","headerWrapper","header","creditsContainer","onLayout","e","offsetY","nativeEvent","layout","y","translateY","creditsInner","creditsText","button","buttonText","creditsButton","role","source","resultText","handleBoxPress","index","next","every","Boolean","handleSecretAnswer","translateX","accessOverlay","accessText","map","opt","pointerEvents","secretOverlay","cornerBox","tl","tr","bl","br","cornerBoxActive","handleProgressComplete","setSecretProgress","q","round","newCount","progressContainer","progressBar","transparent","visible","animationType","onRequestClose","modalOverlay","modalContent","create","minHeight","paddingTop","paddingHorizontal","marginHorizontal","fontFamily","fontSize","lineHeight","textAlign","color","marginBottom","maxWidth","alignSelf","flexShrink","borderColor","borderWidth","padding","marginTop","marginVertical","resizeMode","container","title","subtitle","tap","titelHeader","borderRadius","modalText","scrollContainer","creditItem","right","paddingVertical","maxHeight","flexDirection","shadowColor","shadowOpacity","shadowRadius","shadowOffset","overflow","margin","letterSpacing"],"sources":["C:/QuizApp/ApocalypseQuiz/App.js"],"sourcesContent":["// App.js\r\n\r\nimport { Audio } from 'expo-av';\r\nimport AppLoading from 'expo-app-loading';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View, Dimensions, Image, Animated, Easing, Modal } from 'react-native';\r\nimport { Alert } from 'react-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'press-start': require('./assets/fonts/PressStart2P-Regular.ttf'),\r\n});\r\n\r\n// =======================\r\n// TITLE SCREEN COMPONENT\r\n// =======================\r\nconst TitleScreen = ({ onStart }) => {\r\n  const fadeAnim = useState(new Animated.Value(0))[0];   // fade for title/subtitle\r\n  const pulseAnim = useState(new Animated.Value(0))[0];  // pulse for \"tap to start\"\r\n\r\n  useEffect(() => {\r\n    // Fade in title/subtitle\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 1,\r\n      duration: 2000,\r\n      useNativeDriver: true,\r\n      easing: Easing.ease,\r\n    }).start(() => {\r\n      // Start pulsing after fade-in completes\r\n      Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1,\r\n            duration: 800,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 0.3,\r\n            duration: 800,\r\n            useNativeDriver: true,\r\n          }),\r\n        ])\r\n      ).start();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.titleScreenContainer}>\r\n      <Animated.View style={{ opacity: fadeAnim }}>\r\n        <Text style={styles.titleText}>WELCOME TO THE APOCALYPSE QUIZ</Text>\r\n        <Text style={styles.subtitleText}>\r\n          Find out how you survive the apocalypse\r\n        </Text>\r\n      </Animated.View>\r\n\r\n      <Animated.View style={{ opacity: pulseAnim }}>\r\n        <TouchableOpacity onPress={onStart}>\r\n          <Text style={styles.tapToStart}>TAP TO START</Text>\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst allQuestions = [\r\n{\r\n  question: \"THE WORLD JUST ENDED. WHAT'S YOUR FIRST MOVE?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/mushroomcloud.png\",\r\n    alt: \"A rising mushroom cloud casting an eerie glow over ruins\" \r\n  },\r\n  options: [\r\n  { text: 'Build a barricade out of canned beans', value: 'receiptGolem' },\r\n  { text: 'Climb a microwave tower to search for signal', value: 'doomDJ' },\r\n  { text: 'Loot everything that isn’t on fire', value: 'glitterButcher' },\r\n  { text: 'Meditate and accept the void', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A STRANGE DEVICE HUMMING IN THE RUBBLE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/buzzingmachine.png\",\r\n    alt: \"A broken, buzzing machine with faint glowing wires\" \r\n  },\r\n  options: [\r\n  { text: 'Reverse-engineer it into a toaster', value: 'cyborgCellist' },\r\n  { text: 'Smash it immediately. No risks.', value: 'molotovMixologist' },\r\n  { text: 'Lick it and chant softly', value: 'balloonNecromancer' },\r\n  { text: 'Turn it into a weapon', value: 'libraryCommando' },\r\n  ]\r\n},\r\n{\r\n  question: \"A MUTANT RAT ARMY APPROACHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ratarmyresized.png\",\r\n    alt: \"A swarm of oversized glowing-eyed rats charging forward\" \r\n  },\r\n  options: [\r\n  { text: 'Negotiate. Even rats need HR', value: 'cockroachNegotiator' },\r\n  { text: 'Screech louder to establish dominance', value: 'screamerScout' },\r\n  { text: 'Summon the spirits of sewer ancestors', value: 'trashOracle' },\r\n  { text: 'Organize a neighborhood defense grid', value: 'bureaucracyGhoul' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGER OFFERS YOU A GLOWING MUSHROOM. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glowingmushroom.png\",\r\n    alt: \"A strange bioluminescent mushroom glowing with green light\" \r\n  },\r\n  options: [\r\n  { text: 'Accept it and name it Greg', value: 'duckPainter' },\r\n  { text: 'Decline and file a report', value: 'kaleChampion' },\r\n  { text: 'Run away with it and laugh', value: 'hamsterWarlord' },\r\n  { text: 'Inspect it for medicinal use', value: 'marshmallowGeneral' },\r\n  ]\r\n}, \r\n{\r\n  question: \"YOUR WEAPON OF CHOICE IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\r\n    alt: \"A pile of improvised weapons scattered across a cracked floor\" \r\n  },\r\n  options: [\r\n  { text: 'Clipboard with sharpened corners', value: 'bureaucracyGhoul' },\r\n  { text: 'Healing salve with a punch', value: 'mutantHRManager' },\r\n  { text: 'Nail bat covered in stickers', value: 'glitterButcher' },\r\n  { text: 'Cursed ukulele', value: 'doomDJ' },\r\n  ]\r\n}, \r\n{\r\n  question: \"THE APOCALYPSE HAS TV AGAIN. YOUR SHOW?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/tv.png\",\r\n    alt: \"A cracked old television flickering with static\" \r\n  },\r\n  options: [\r\n  { text: '“Disaster Diaries: Planning the Panic”', value: 'apocalypseConspiracyTheorist' },\r\n  { text: '“Survivor Support Circle”', value: 'mutantHRManager' },\r\n  { text: '“Cooking with Roadkill”', value: 'gnocchiNomad' },\r\n  { text: '“Whispers from the Ceiling Fan”', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"HOW DO YOU START YOUR APOCALYPSE MORNING?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/sunrise.png\",\r\n    alt: \"A fiery sunrise breaking over a ruined wasteland\" \r\n  },\r\n  options: [\r\n  { text: 'Inventory and affirmations', value: 'receiptGolem' },\r\n  { text: 'Stretch, share, and hydrate', value: 'marshmallowGeneral' },\r\n  { text: 'Scream into the mist', value: 'screamerScout' },\r\n  { text: 'Sip tea with a ghost', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU’RE INVITED TO A WASTELAND PARTY. YOUR GIFT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/party.png\",\r\n    alt: \"A flickering bonfire surrounded by scavenged party decorations\" \r\n  },\r\n  options: [\r\n  { text: 'A tactical punch bowl', value: 'molotovMixologist' },\r\n  { text: 'A box of shared memories', value: 'libraryCommando' },\r\n  { text: 'A bag of teeth and glitter', value: 'glitterButcher' },\r\n  { text: 'A crystal that buzzes when stared at', value: 'radioactivePhilosopher' },\r\n  ]\r\n}, \r\n{\r\n  question: \"YOU FIND A FUNCTIONAL VEHICLE. IT RUNS ON:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vehicle.png\",\r\n    alt: \"A rusted vehicle with strange tubes and glowing fuel tanks\" \r\n  },\r\n  options: [\r\n  { text: 'Dried fruit and accountability', value: 'kaleChampion' },\r\n  { text: 'Feelings and essential oils', value: 'mutantHRManager' },\r\n  { text: 'Gremlin screams', value: 'hamsterWarlord' },\r\n  { text: 'Dreams of the old world', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"A GIANT ROBOT WANTS TO JOIN YOUR CREW. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/robot.png\",\r\n    alt: \"A towering robot covered in dents and scavenged armor\" \r\n  },\r\n  options: [\r\n  { text: 'Assign it as logistics coordinator', value: 'libraryCommando' },\r\n  { text: 'Offer emotional calibration training', value: 'mutantHRManager' },\r\n  { text: 'Paint flames on its chest', value: 'duckPainter' },\r\n  { text: 'Ask if it dreams of rusting sheep', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU CHECK INTO THE LAST HOTEL ON EARTH. THE COMPLIMENTARY ITEM IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hotel.png\",\r\n    alt: \"A crumbling hotel lobby with dusty chandeliers\" \r\n  },\r\n  options: [\r\n  { text: 'A keycard made from scrap metal', value: 'receiptGolem' },\r\n  { text: 'A bed stuffed with old newspapers', value: 'marshmallowGeneral' },\r\n  { text: 'A minibar full of mystery meat', value: 'gnocchiNomad' },\r\n  { text: 'A lamp that whispers bedtime stories', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A LEGENDARY WEAPON IN THE RUINS. IT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\r\n    alt: \"An ominous weapon glinting in the rubble\" \r\n  },\r\n  options: [\r\n  { text: 'A sword made of melted road signs', value: 'doomDJ' },\r\n  { text: 'A crossbow that fires angry beetles', value: 'squirrelTamer' },\r\n  { text: 'A bat wrapped in barbed wire and rumors', value: 'glitterButcher' },\r\n  { text: 'A gun that shoots tiny holograms of itself', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR ENEMY FINALLY FALLS INTO YOUR TRAP. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/trap.png\",\r\n    alt: \"A menacing pit trap surrounded by makeshift spikes\" \r\n  },\r\n  options: [\r\n  { text: 'Deliver a speech so epic it becomes legend', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Make them clean your entire camp with a toothbrush', value: 'libraryCommando' },\r\n  { text: 'Release a swarm of weaponized crows', value: 'animalMime' },\r\n  { text: 'Erase them from every photo… retroactively', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"A DERELICT BOAT WASHES ASHORE. YOUR FIRST MOVE IS TO:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/boat.png\" },\r\n  alt: \"Tactical belt with pouches\",\r\n  options: [\r\n  { text: 'Restore it into a seaworthy escape vessel', value: 'travelAgentOfTerror' },\r\n  { text: 'Turn it into a floating community hub', value: 'mutantHRManager' },\r\n  { text: 'Strip it for parts before anyone else can', value: 'glitterButcher' },\r\n  { text: 'Sail it inland somehow, just to confuse people', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER AN ABANDONED POOL IN THE WASTELAND. YOUR PLAN IS TO:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/pool.png\" },\r\n  alt: \"Derelict pool\",\r\n  options: [\r\n  { text: 'Fill it with clean water for the community', value: 'marshmallowGeneral' },\r\n  { text: 'Grow crops in it using the deep basin', value: 'kaleChampion' },\r\n  { text: 'Stock it with mutant fish for later snacking', value: 'gnocchiNomad' },\r\n  { text: 'Turn it into an ominous art installation', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A TACTICAL BELT WITH MYSTERIOUS POUCHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/belt.png\",\r\n    alt: \"A rugged tactical belt with oddly glowing pouches\" \r\n  },\r\n  options: [\r\n  { text: 'Organize survival gear with military precision', value: 'libraryCommando' },\r\n  { text: 'Fill it with snacks for the whole squad', value: 'marshmallowGeneral' },\r\n  { text: 'Cram it full of stolen trinkets and bones', value: 'glitterButcher' },\r\n  { text: 'Discover one pouch contains a portal to nowhere', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"CHOOSE YOUR WASTELAND COMPANION ANIMAL:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/pet.png\",\r\n    alt: \"A scrappy animal companion ready for chaos\" \r\n  },\r\n  options: [\r\n  { text: 'A battle-hardened goat', value: 'hamsterWarlord' },\r\n  { text: 'A one-eyed therapy pigeon', value: 'mutantHRManager' },\r\n  { text: 'A hairless raccoon with trust issues', value: 'animalMime' },\r\n  { text: 'A telepathic lizard that speaks in riddles', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGER APPROACHES YOUR CAMP. YOU DECIDE TO:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/stranger.png\",\r\n    alt: \"A mysterious figure standing at the edge of your campfire light\" \r\n  },\r\n  options: [\r\n  { text: 'Offer them a seat and negotiate terms', value: 'cockroachNegotiator' },\r\n  { text: 'Share a meal and learn their story', value: 'mutantHRManager' },\r\n  { text: 'Circle behind them and take their boots', value: 'glitterButcher' },\r\n  { text: 'Whisper to them in a language you just made up', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU’RE ENROLLED IN THE LAST POST-APOCALYPTIC COLLEGE. YOUR MAJOR IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/college.png\",\r\n    alt: \"A dilapidated college building with banners of odd symbols\" \r\n  },\r\n  options: [\r\n  { text: 'Survival Strategy and Bartering', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Mutant Relations and Counseling', value: 'mutantHRManager' },\r\n  { text: 'Scavenging 101: Chaos Management', value: 'animalMime' },\r\n  { text: 'Cryptic Arts and Oddities', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE NEW ECONOMY, YOUR CURRENCY FEATURES:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/money.png\",\r\n    alt: \"Crumpled bills with bizarre illustrations and symbols\" \r\n  },\r\n  options: [\r\n  { text: 'A heroic figure with a duct-taped weapon', value: 'doomDJ' },\r\n  { text: 'A pair of hands shaking over a campfire', value: 'cockroachNegotiator' },\r\n  { text: 'A snarling rat wearing a crown', value: 'squirrelTamer' },\r\n  { text: 'An eye that seems to follow you everywhere', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"IT’S TIME FOR A DUEL. WHAT IS YOUR SECRET WEAPON OF CHOICE?:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duel.png\",\r\n    alt: \"A dusty dueling arena with strange improvised weapons\" \r\n  },\r\n  options: [\r\n  { text: 'A sharpened broom handle', value: 'libraryCommando' },\r\n  { text: 'An aggressively worded letter', value: 'bureaucracyGhoul' },\r\n  { text: 'Two angry raccoons tied together', value: 'animalMime' },\r\n  { text: 'A spoon that whispers battle strategies', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"WHAT’S YOUR MEAL PLAN?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/meal.png\",\r\n    alt: \"A questionable apocalypse meal served on a rusty plate\" \r\n  },\r\n  options: [\r\n  { text: \"Scavenge for expired granola bars\", value: \"gnocchiNomad\" },\r\n  { text: \"Hunt mutant squirrels\", value: \"squirrelTamer\" },\r\n  { text: \"Barter socks for canned spaghetti\", value: \"receiptGolem\" },\r\n  { text: \"Grow mushrooms in a toilet tank\", value: \"kaleChampion\" }\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR BARRICADE IS THE LAST LINE OF DEFENSE AGAINST:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/barricade.png\",\r\n    alt: \"Makeshift wooden barricade stacked with junkyard debris\" \r\n  },\r\n  options: [\r\n  { text: 'A horde of caffeinated squirrels', value: 'squirrelTamer' },\r\n  { text: 'Door-to-door apocalypse salesmen', value: 'travelAgentOfTerror' },\r\n  { text: 'A river of hot cheese', value: 'glitterButcher' },\r\n  { text: 'Time-traveling versions of yourself', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR GANG FLAG PROUDLY DISPLAYS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/flag.png\",\r\n    alt: \"Tattered gang flag waving in the radioactive wind\" \r\n  },\r\n  options: [\r\n  { text: 'A possum holding a sword and a grudge', value: 'hamsterWarlord' },\r\n  { text: 'Three raccoons in a trench coat flipping pancakes', value: 'animalMime' },\r\n  { text: 'A screaming cactus wearing sunglasses', value: 'duckPainter' },\r\n  { text: 'An eldritch sandwich that whispers your debts', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR KARAOKE PERFORMANCE TONIGHT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/karaoke.png\",\r\n    alt: \"A lone microphone glowing under a flickering neon light\" \r\n  },\r\n  options: [\r\n  { text: 'Screaming the Pokémon theme while being chased by a goose', value: 'screamerScout' },\r\n  { text: 'Interpretive dance to whale sounds in full medieval armor', value: 'yodelMechanic' },\r\n  { text: 'Yodeling “Bohemian Rhapsody” while holding a suspicious ham', value: 'doomDJ' },\r\n  { text: 'Whisper-rapping the Bee Movie script in a smoky jazz bar', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\nquestion: \"A STRANGE LIGHT APPEARS IN THE SKY. WHAT DO YOU DO?\",\r\nimage: { \r\n  uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/light.png\",\r\n  alt: \"Mysterious glowing light hovering in the night sky\" },\r\n  options: [\r\n  { text: 'Point at it and yell “same” until it goes away', value: 'doomDJ' },\r\n  { text: 'Start selling tickets for the “End of the World Viewing Party”', value: 'travelAgentOfTerror' },\r\n  { text: 'Challenge it to a rap battle… and lose', value: 'animalMime' },\r\n  { text: 'Offer it a sandwich as a peace treaty', value: 'radioactivePhilosopher' },\r\n],\r\n},\r\n{\r\n  question: \"YOU HAVE A SMALL THUMB DRIVE FULL OF THE MOST IMPORTANT DATA FROM THE BEFORE TIMES. IT CONTAINS:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/data.png\" },\r\n  alt: \"Data drive\",\r\n  options: [\r\n  { text: 'Hundreds of cat photos', value: 'receiptGolem' },\r\n  { text: 'Recipes for different napalm flavors', value: 'molotovMixologist' },\r\n  { text: 'Complete gibberish', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'The script for every Jim Carrey movie', value: 'libraryCommando' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU STUMBLE UPON A MYSTERIOUS PORTAL. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/portal.png\",\r\n    alt: \"A swirling portal shimmering with unknown energy\" \r\n  },\r\n  options: [\r\n  { text: 'Step through confidently', value: 'doomDJ' },\r\n  { text: 'Set up a research tent', value: 'origamiDetective' },\r\n  { text: 'Throw a rock in first', value: 'animalMime' },\r\n  { text: 'Whisper a warning to the void', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND AN ABANDONED AMUSEMENT PARK. YOUR PLAN IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/park.png\",\r\n    alt: \"Rusty rides and eerie carnival lights\" \r\n  },\r\n  options: [\r\n  { text: 'Turn it into a fortress', value: 'travelAgentOfTerror' },\r\n  { text: 'Organize a scavenger hunt', value: 'libraryCommando' },\r\n  { text: 'Ride everything at full speed', value: 'hamsterWarlord' },\r\n  { text: 'Meditate in the funhouse mirrors', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER A TALKING TOASTER. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toaster.png\",\r\n    alt: \"A sentient toaster blinking like it has secrets\" \r\n  },\r\n  options: [\r\n  { text: 'Make it your tactical advisor', value: 'doomDJ' },\r\n  { text: 'Teach it to make meals for the group', value: 'marshmallowGeneral' },\r\n  { text: 'Chase it around screaming', value: 'screamerScout' },\r\n  { text: 'Ask it about the meaning of toast', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU COME ACROSS A GIANT PILE OF SOCKS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socks.png\",\r\n    alt: \"A mountain of mismatched, dusty socks\" \r\n  },\r\n  options: [\r\n  { text: 'Sort them by usefulness', value: 'receiptGolem' },\r\n  { text: 'Distribute them evenly to survivors', value: 'mutantHRManager' },\r\n  { text: 'Build a sock fort', value: 'glitterButcher' },\r\n  { text: 'Wear them all at once for enlightenment', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A MYSTERIOUS FOG ROLLS IN. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fog.png\",\r\n    alt: \"Thick fog swallowing the landscape\" \r\n  },\r\n  options: [\r\n  { text: 'Set up sentries and stay alert', value: 'fogMechanic' },\r\n  { text: 'Use it to cover a supply run', value: 'travelAgentOfTerror' },\r\n  { text: 'Run screaming into it', value: 'screamerScout' },\r\n  { text: 'Breathe deeply and commune with spirits', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A STRANGE MUSICAL INSTRUMENT. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/instrument.png\",\r\n    alt: \"An odd instrument with glowing strings\" \r\n  },\r\n  options: [\r\n  { text: 'Lead a rally with it', value: 'doomDJ' },\r\n  { text: 'Play calming tunes for the group', value: 'cyborgCellist' },\r\n  { text: 'Smash it loudly', value: 'molotovMixologist' },\r\n  { text: 'Listen for cosmic messages', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU SPOT A HOVERING DRONE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/drone.png\",\r\n    alt: \"A small drone hovering and scanning the area\" \r\n  },\r\n  options: [\r\n  { text: 'Hack it to serve your team', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Follow it to discover resources', value: 'origamiDetective' },\r\n  { text: 'Shoot it with a slingshot', value: 'animalMime' },\r\n  { text: 'Bow respectfully', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A MYSTERIOUS CHEST IN THE DESERT. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chest.png\",\r\n    alt: \"An old chest half-buried in sand\" \r\n  },\r\n  options: [\r\n  { text: 'Open it carefully and catalog contents', value: 'receiptGolem' },\r\n  { text: 'Share the loot with allies', value: 'mutantHRManager' },\r\n  { text: 'Kick it open violently', value: 'glitterButcher' },\r\n  { text: 'Whisper secrets before opening', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU ENCOUNTER A HACKER WITH STRANGE TACTICS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hacker.png\",\r\n    alt: \"A hooded figure surrounded by floating code\" \r\n  },\r\n  options: [\r\n  { text: 'Recruit them for strategy', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Learn their techniques', value: 'origamiDetective' },\r\n  { text: 'Mess with their system', value: 'animalMime' },\r\n  { text: 'Ask cryptic questions', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU STUMBLE UPON A FLOATING ISLAND. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/floatingisland.png\",\r\n    alt: \"A small island hovering mysteriously above the ground\" \r\n  },\r\n  options: [\r\n  { text: 'Build a base atop it', value: 'neonGravedigger' },\r\n  { text: 'Explore it for resources', value: 'travelAgentOfTerror' },\r\n  { text: 'Jump off it recklessly', value: 'hamsterWarlord' },\r\n  { text: 'Meditate on its floating mystery', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A GLOWING RUBBER DUCK. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duck.png\",\r\n    alt: \"A neon rubber duck floating in a puddle\" \r\n  },\r\n  options: [\r\n  { text: 'Make it the team mascot', value: 'duckPainter' },\r\n  { text: 'Use it as a morale booster', value: 'mutantHRManager' },\r\n  { text: 'Squish it repeatedly', value: 'hamsterWarlord' },\r\n  { text: 'Ask it for stock tips', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A GIANT JELLO MONSTER APPROACHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/jello.png\",\r\n    alt: \"A wobbling, translucent gelatinous creature\" \r\n  },\r\n  options: [\r\n  { text: 'Negotiate a treaty', value: 'cockroachNegotiator' },\r\n  { text: 'Feed it spare snacks', value: 'marshmallowGeneral' },\r\n  { text: 'Punch it repeatedly', value: 'molotovMixologist' },\r\n  { text: 'Dance with it to the music', value: 'doomDJ' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER A HAT THAT GIVES STRANGE POWERS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/magichat.png\",\r\n    alt: \"A tall hat glowing with arcane energy\" \r\n  },\r\n  options: [\r\n  { text: 'Wear it and lead', value: 'neonGravedigger' },\r\n  { text: 'Use it to help friends', value: 'mutantHRManager' },\r\n  { text: 'Throw it into a fire', value: 'molotovMixologist' },\r\n  { text: 'Ask it philosophical questions', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A PILE OF MYSTICAL TOAST. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toast.png\",\r\n    alt: \"Slices of glowing toast stacked in an odd pattern\" \r\n  },\r\n  options: [\r\n  { text: 'Distribute it fairly', value: 'receiptGolem' },\r\n  { text: 'Offer it to hungry survivors', value: 'marshmallowGeneral' },\r\n  { text: 'Eat it in one bite', value: 'gnocchiNomad' },\r\n  { text: 'Use it to predict the future', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGE TUNNEL OF STUFFED ANIMALS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socktunnel.png\",\r\n    alt: \"A twisting tunnel made entirely of socks\" \r\n  },\r\n  options: [\r\n  { text: 'Map it for safe passage', value: 'travelAgentOfTerror' },\r\n  { text: 'Use it to smuggle supplies', value: 'libraryCommando' },\r\n  { text: 'Roll through it screaming', value: 'screamerScout' },\r\n  { text: 'Meditate inside it', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A ROBOT BUTTERFLY. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/butterfly.png\",\r\n    alt: \"A giant frowning butterfly perched on a rock\" \r\n  },\r\n  options: [\r\n  { text: 'Make it your adviser', value: 'cyborgCellist' },\r\n  { text: 'Cheer it up with gifts', value: 'mutantHRManager' },\r\n  { text: 'Swat it angrily', value: 'animalMime' },\r\n  { text: 'Have a philosophical debate', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A FLOATING ICE CREAM CONE BEGS FOR HELP. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/icecream.png\",\r\n    alt: \"A hovering ice cream cone with pleading eyes\" \r\n  },\r\n  options: [\r\n  { text: 'Rescue it carefully', value: 'lavaLifeguard' },\r\n  { text: 'Share it with friends', value: 'marshmallowGeneral' },\r\n  { text: 'Eat it immediately', value: 'gnocchiNomad' },\r\n  { text: 'Ask it about the universe', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A MYSTICAL BROOM. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/broom.png\",\r\n    alt: \"A broom glowing faintly and hovering slightly\" \r\n  },\r\n  options: [\r\n  { text: 'Use it to lead operations', value: 'libraryCommando' },\r\n  { text: 'Clean the camp efficiently', value: 'marshmallowGeneral' },\r\n  { text: 'Swing it wildly', value: 'molotovMixologist' },\r\n  { text: 'Ask it to tell stories', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A TALKING ROCK OFFERS YOU ADVICE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/rock.png\",\r\n    alt: \"A small rock with a mouth and tiny eyes\" \r\n  },\r\n  options: [\r\n  { text: 'Listen carefully', value: 'receiptGolem' },\r\n  { text: 'Take notes', value: 'libraryCommando' },\r\n  { text: 'Ignore it and throw it', value: 'animalMime' },\r\n  { text: 'Ask it riddles back', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A GIANT SLIPPERY BANANA. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/banana.png\",\r\n    alt: \"A massive banana sliding down a hill\" \r\n  },\r\n  options: [\r\n  { text: 'Use it to create a trap', value: 'cockroachNegotiator' },\r\n  { text: 'Share it with the squad', value: 'marshmallowGeneral' },\r\n  { text: 'Slip on it dramatically', value: 'hamsterWarlord' },\r\n  { text: 'Meditate while balancing on it', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A UNICORN DEMANDS PAYMENT IN GLITTER. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/unicorn.png\",\r\n    alt: \"A unicorn glaring, its horn glowing like a credit card machine\" \r\n  },\r\n  options: [\r\n  { text: 'Offer your entire savings account of rainbows', value: 'glitterButcher' },\r\n  { text: 'Split the glitter bill with your party', value: 'mutantHRManager' },\r\n  { text: 'Eat the glitter before anyone can pay', value: 'gnocchiNomad' },\r\n  { text: 'Ask if the horn also accepts interpretive dance', value: 'duckPainter' },\r\n  ]\r\n},\r\n{ \r\n  question: \"BIGFOOT APPLIES FOR A JOB AS YOUR ROOMMATE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bigfoot.png\",\r\n    alt: \"Bigfoot holding a poorly written resume and a coffee mug\" \r\n  },\r\n  options: [\r\n  { text: 'Conduct a formal roommate interview', value: 'bureaucracyGhoul' },\r\n  { text: 'Help him polish his resume', value: 'mutantHRManager' },\r\n  { text: 'Challenge him to wrestle for the room', value: 'hamsterWarlord' },\r\n  { text: 'Ask if he has references from cryptids or clouds', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A CHUPACABRA OPENS A TACO TRUCK. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chupacabra.png\",\r\n    alt: \"A chupacabra wearing an apron, handing out tacos suspiciously\" \r\n  },\r\n  options: [\r\n  { text: 'Help write a strict business plan', value: 'bureaucracyGhoul' },\r\n  { text: 'Pass out free samples to friends', value: 'marshmallowGeneral' },\r\n  { text: 'Bite the tacos before customers can order', value: 'gnocchiNomad' },\r\n  { text: 'Ask if the salsa is made of moonlight and goats', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"ZOMBIES INVITE YOU TO THEIR BOOK CLUB. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/zombies.png\",\r\n    alt: \"A group of zombies politely holding hardcover novels\" \r\n  },\r\n  options: [\r\n  { text: 'Lead the discussion on “Brains: A Memoir”', value: 'doomDJ' },\r\n  { text: 'Bring snacks that aren’t brains', value: 'marshmallowGeneral' },\r\n  { text: 'Eat the book before the meeting starts', value: 'animalMime' },\r\n  { text: 'Insist the only valid book is one written by worms', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A VAMPIRE WANTS TO START A PODCAST. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vampire.png\",\r\n    alt: \"A vampire adjusting a microphone, avoiding its reflection in the pop filter\" \r\n  },\r\n  options: [\r\n  { text: 'Offer to be the co-host and manage scheduling', value: 'doomDJ' },\r\n  { text: 'Handle the editing and moral support', value: 'mutantHRManager' },\r\n  { text: 'Interrupt every episode with blood-slurping ASMR', value: 'skeletonBarista' },\r\n  { text: 'Ask if the podcast only streams at midnight', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"NESSIE EMAILS YOU A LINK TO THEIR NEW MIXTAPE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/nessie.jpg\",\r\n    alt: \"The Loch Ness monster wearing headphones, bobbing its head to beats\" \r\n  },\r\n  options: [\r\n  { text: 'Promote the mixtape aggressively online', value: 'doomDJ' },\r\n  { text: 'Add it to a shared playlist for friends', value: 'mutantHRManager' },\r\n  { text: 'Slam-dance into the nearest lake', value: 'hamsterWarlord' },\r\n  { text: 'Ask if the beats were recorded under the moon with kelp', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"GODZILLA APPEARS WITH A CLIPBOARD AND A SURVEY. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/godzilla.png\",\r\n    alt: \"Godzilla politely adjusting glasses while holding a clipboard\" \r\n  },\r\n  options: [\r\n  { text: 'Lead the survey as if you are the mayor of ruins', value: 'bureaucracyGhoul' },\r\n  { text: 'Help tally up skyscraper satisfaction scores', value: 'receiptGolem' },\r\n  { text: 'Eat the clipboard before any questions are asked', value: 'animalMime' },\r\n  { text: 'Ask if destruction counts as “strongly agree” or “neutral”', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A TRIBE OF TALKING CHEESE DEMANDS REPRESENTATION. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cheese.png\",\r\n    alt: \"A group of cheddar and brie wearing ceremonial robes, chanting\" \r\n  },\r\n  options: [\r\n  { text: 'Organize their cheese council with parliamentary rules', value: 'bureaucracyGhoul' },\r\n  { text: 'Translate their dairy hymns for outsiders', value: 'mutantHRManager' },\r\n  { text: 'Gnaw on the elders during negotiations', value: 'gnocchiNomad' },\r\n  { text: 'Ask if lactose intolerance is considered heresy', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"IN A CEMETERY, A GHOST OFFERS YOU A BROKEN LAWN CHAIR. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ghost.png\",\r\n    alt: \"A translucent ghost politely holding out a cracked lawn chair among gravestones\" \r\n  },\r\n  options: [\r\n  { text: 'Sit with solemn dignity and declare yourself king of the graveyard', value: 'neonGravedigger' },\r\n  { text: 'Invite the ghost to sit while you applaud respectfully', value: 'mutantHRManager' },\r\n  { text: 'Break the chair further and start a midnight wrestling match with shadows', value: 'hamsterWarlord' },\r\n  { text: 'Ask the chair if it remembers its tree-life before death', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE DESERT, YOU FIND A TREASURE CHEST HALF-BURIED IN DUNES. IT HUMS A COUNTRY SONG. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/treasure.png\",\r\n    alt: \"A weathered treasure chest jutting from golden sand under a blazing sun, faint musical notes rising from it\" \r\n  },\r\n  options: [\r\n  { text: 'Climb atop it and proclaim yourself Sheriff of Sand Dollars', value: 'travelAgentOfTerror' },\r\n  { text: 'Fan the chest with palm fronds and whisper “you’re doing great, buddy”', value: 'marshmallowGeneral' },\r\n  { text: 'Punch the dunes until a scorpion agrees to fight in your honor', value: 'animalMime' },\r\n  { text: 'Ask the chest whether it prefers tumbleweeds or tax audits', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE RUINS OF A FORMER LASER TAG ARENA, YOU FIND A BOMB DISGUISED AS A VENDING MACHINE. IT WHISPERS YOUR CHILDHOOD NICKNAME. YOU:\",\r\n  image: {\r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/defuse.png\",\r\n    alt: \"A dusty vending machine with exposed wires and blinking lights, surrounded by cracked neon walls and scorched arcade carpet\"\r\n  },\r\n  options: [\r\n    { text: \"Insert a coupon for ‘One Free Existential Crisis’ and wait for it to vend enlightenment\", \"value\": \"couponSaboteur\" },\r\n    { text: \"Challenge the bomb to a staring contest and lose dramatically\", \"value\": \"eyeballDiplomat\" },\r\n    { text: \"Recite the alphabet backwards while juggling expired batteries\", \"value\": \"entropyEntertainer\" },\r\n    { text: \"Offer it a friendship bracelet made of spaghetti and hope for detente\", \"value\": \"noodleNegotiator\" }\r\n  ]\r\n}\r\n\r\n  // Add more questions in same format...\r\n];\r\nconst roles = {\r\n  trashOracle: {\r\n    description: 'Trash Oracle - Reads the future in garbage. Mysterious and oddly accurate.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/Oracle.png\" },\r\n  },\r\n  mutantHRManager: {\r\n    description: 'Mutant HR Manager - Resolves conflict with tasers and empathy.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/MutantHR.png\" },\r\n  },\r\n  screamerScout: {\r\n    description: 'Screamer Scout - Screams first, thinks later. Often right.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/dancer.png\" },\r\n  },\r\n  bureaucracyGhoul: {\r\n    description: \"Bureaucracy Ghoul - Feeds on paperwork and thrives in long lines. Stamps documents with sinister precision.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bureaucracyGhoul.png\" },\r\n  },\r\n  kaleChampion: {\r\n    description: \"Kale Champion - Armored in leafy resilience. Bitter, righteous, and impossible to wilt.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/kaleChampion.png\" },\r\n  },\r\n  fogMechanic: {\r\n    description: \"Fog Mechanic - Fixes broken mists and tunes eerie atmospheres. Works only at dawn.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fogMechanic.png\" },\r\n  },\r\n  skeletonBarista: {\r\n    description: \"Skeleton Barista - Serves bone-dry lattes. Milk froth screams faintly.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/skeletonBarista.png\" },\r\n  },\r\n  neonGravedigger: {\r\n    description: \"Neon Gravedigger - Digs glowing graves that double as nightclubs. Morbid, yet festive.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/neonGravedigger.png\" },\r\n  },\r\n  hamsterWarlord: {\r\n    description: \"Hamster Warlord - Commands an army of squeaky, wheel loving rodents. Tiny, fluffy, unstoppable.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hamsterWarlord.png\" },\r\n  },\r\n  balloonNecromancer: {\r\n    description: \"Balloon Necromancer – Summons the dead with squeaky inflatables and helium whispers.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/balloonNecromancer.png\" },\r\n  },\r\n  cockroachNegotiator: {\r\n    description: \"Cockroach Negotiator – Brokers peace treaties with indestructible insects over crumbs of power.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cockroachNegotiator.png\" },\r\n  },\r\n  cyborgCellist: {\r\n    description: \"Cyborg Cellist – Performs haunting symphonies on titanium strings while sparks fly from the bow.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cyborgCellist.png\" },\r\n  },\r\n  libraryCommando: {\r\n    description: \"Library Commando – Shushes enemies with militant silence and overdue-book fines.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/libraryCommando.png\" },\r\n  },\r\n  doomDJ: {\r\n    description: \"Doom DJ – Spins tracks that summon thunder, collapse buildings, and start dance-offs with the void.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/doomDJ.png\" },\r\n  },\r\n  duckPainter: {\r\n    description: \"Duck Painter – Covers the wasteland in murals of ducks that seem to stare back a little too knowingly.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duckPainter.png\" },\r\n  },\r\n  glitterButcher: {\r\n    description: \"Glitter Butcher – Leaves every battlefield sparkling, fabulous, and disturbingly sticky.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glitterButcher.png\" },\r\n  },\r\n  gnocchiNomad: {\r\n    description: \"Gnocchi Nomad – Wanders deserts with pockets full of potato pasta, feeding the hungry and confusing the rest.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/gnocchiNomad.png\" },\r\n  },\r\n  lavaLifeguard: {\r\n    description: \"Lava Lifeguard – Blows a whistle at volcanoes and dives into magma to save screaming skeletons.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/lavaLifeguard.png\" },\r\n  },\r\n  marshmallowGeneral: {\r\n    description: \"Marshmallow General – Commands gooey troops that roast enemies alive, slowly and deliciously.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/marshmallowGeneral.png\" },\r\n  },\r\n  animalMime: {\r\n    description: \"Animal Mime – Mimics beasts so convincingly that predators applaud, then eat the audience.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/animalMime.png\" },\r\n  },\r\n  molotovMixologist: {\r\n    description: \"Molotov Mixologist – Crafts cocktails that light up the night, garnished with chaos and a twist of lime.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/molotovMixologist.png\" },\r\n  },\r\n  origamiDetective: {\r\n    description: \"Origami Detective – Folds clues into cranes, swans, and confessions that solve themselves.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/origamiDetective.png\" },\r\n  },\r\n  radioactivePhilosopher: {\r\n    description: \"Radioactive Philosopher – Glows in the dark while pondering whether fallout has meaning.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/radioactivePhilosopher.png\" },\r\n  },\r\n  receiptGolem: {\r\n    description: \"Receipt Golem – Born from endless shopping slips, remembers every purchase, judges all of them.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/receiptGolem.png\" },\r\n  },\r\n  squirrelTamer: {\r\n    description: \"Squirrel Tamer – Bends armies of twitchy rodents to their will with acorn diplomacy.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/squirrelTamer.png\" },\r\n  },\r\n  apocalypseConspiracyTheorist: {\r\n    description: \"Apocalypse Conspiracy Theorist – Knew it all along, explains it with 48 corkboards and zero evidence.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/apocalypseConspiracyTheorist.png\" },\r\n  },\r\n  yodelMechanic: {\r\n    description: \"Yodel Mechanic – Fixes broken engines by singing so loud pistons weep oil in gratitude.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/yodelMechanic.png\" },\r\n  },\r\n  travelAgentOfTerror: {\r\n    description: \"Travel Agent of Terror – Books scenic vacations to sinkholes, haunted malls, and endless bureaucracy lines.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/travelAgentOfTerror.png\" },\r\n  },\r\n\r\n};\r\n\r\n// =======================\r\n// MAIN APP COMPONENT\r\n// =======================\r\nexport default function App() {\r\n  const [isTitleVisible, setIsTitleVisible] = useState(true); // <-- NEW\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [mode, setMode] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [quizQuestions, setQuizQuestions] = useState([]);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [exitWarningVisible, setExitWarningVisible] = useState(false);\r\n  const scrollY = useRef(new Animated.Value(400)).current; // start lower\r\n  const [quizSound, setQuizSound] = useState(null);\r\n  const [creditsSound, setCreditsSound] = useState(null);\r\n  const [titleSound, setTitleSound] = useState(null); // title/menu music\r\n  const [secretSound, setSecretSound] = useState(null);\r\n  const [secretResultSound, setSecretResultSound] = useState(null);\r\n  const [contentHeight, setContentHeight] = useState(0);\r\n  const [secretClicks, setSecretClicks] = useState(0);\r\n  const [secretUnlocked, setSecretUnlocked] = useState(false);\r\n  const [secretBoxTaps, setSecretBoxTaps] = useState([false, false, false, false]);\r\n  const [secretStage, setSecretStage] = useState(1); // 1 = first page, 2 = second page\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const screenHeight = Dimensions.get(\"window\").height;\r\n  const [creditsOffsetY, setCreditsOffsetY] = useState(0);\r\n  const flicker = useRef(new Animated.Value(1)).current;\r\n  const jitterX = useRef(new Animated.Value(0)).current;       // horizontal shift\r\n  const [showAccessOverlay, setShowAccessOverlay] = useState(false);\r\n  const overlayOpacity = useRef(new Animated.Value(0)).current; // text fade\r\n  const screenOpacity = useRef(new Animated.Value(0)).current;  // secret screen fade\r\n\r\nconst previousModeRef = useRef(null);\r\n\r\nuseEffect(() => {\r\n  if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\r\n    previousModeRef.current = mode; // store last quiz mode\r\n  }\r\n}, [mode]);\r\n\r\n//Flicker effect for secret\r\n\r\nuseEffect(() => {\r\n  if (mode === \"secret\") {\r\n    setShowAccessOverlay(true);\r\n\r\n    // Start flicker + jitter\r\n    Animated.parallel([\r\n      Animated.sequence([\r\n        Animated.timing(flicker, { toValue: 0.3, duration: 70, useNativeDriver: true }),\r\n        Animated.timing(flicker, { toValue: 1, duration: 100, useNativeDriver: true }),\r\n        Animated.timing(flicker, { toValue: 0.6, duration: 60, useNativeDriver: true }),\r\n        Animated.timing(flicker, { toValue: 1, duration: 120, useNativeDriver: true }),\r\n      ]),\r\n      Animated.sequence([\r\n        Animated.timing(jitterX, { toValue: -10, duration: 80, useNativeDriver: true }),\r\n        Animated.timing(jitterX, { toValue: 12, duration: 100, useNativeDriver: true }),\r\n        Animated.timing(jitterX, { toValue: -6, duration: 70, useNativeDriver: true }),\r\n        Animated.timing(jitterX, { toValue: 0, duration: 120, useNativeDriver: true }),\r\n      ]),\r\n    ]).start();\r\n\r\n    // Fade in overlay text\r\n    Animated.sequence([\r\n      Animated.timing(overlayOpacity, { toValue: 1, duration: 500, useNativeDriver: true }),\r\n      Animated.delay(600),\r\n      Animated.timing(overlayOpacity, { toValue: 0, duration: 500, useNativeDriver: true }),\r\n      Animated.timing(screenOpacity, { toValue: 1, duration: 600, useNativeDriver: true }),\r\n    ]).start(() => {\r\n      setShowAccessOverlay(false);\r\n    });\r\n  }\r\n}, [mode]);\r\n\r\n  // --- music pause/resume on mute ---\r\nconst toggleMute = async () => {\r\n  const newMuted = !isMuted; // compute new state\r\n  setIsMuted(newMuted);\r\n\r\n  const allSounds = [titleSound, quizSound, creditsSound];\r\n  for (let s of allSounds) {\r\n    if (!s) continue;\r\n\r\n    const status = await s.getStatusAsync();\r\n    if (!status.isLoaded) continue;\r\n\r\n    if (newMuted) {\r\n      // pause if muted\r\n      if (status.isPlaying) await s.pauseAsync();\r\n    } else {\r\n      // resume if unmuted\r\n      if (!status.isPlaying) await s.playAsync();\r\n    }\r\n  }\r\n};\r\n\r\n  // --- universal mute button ---\r\nconst MuteButton = () => (\r\n  <TouchableOpacity\r\n    onPress={toggleMute}\r\n    style={{\r\n      position: \"absolute\",\r\n      bottom: 20,\r\n      left: 20,\r\n      width: 60,\r\n      height: 50,\r\n      zIndex: 1000,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    {/* Retro speaker triangle pointing left */}\r\n    <View style={{\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 12,\r\n      borderBottomWidth: 12,\r\n      borderRightWidth: 20,\r\n      borderTopColor: \"transparent\",\r\n      borderBottomColor: \"transparent\",\r\n      borderRightColor: \"#00FF00\",\r\n      position: \"absolute\",\r\n      left: 10,\r\n    }} />\r\n\r\n    {/* Sound waves (centered vertically on triangle, with slight gap) */}\r\n    {!isMuted && (\r\n      <>\r\n        <View style={{\r\n          width: 2,\r\n          height: 6,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 34,\r\n          top: 22, // shifted down\r\n        }} />\r\n        <View style={{\r\n          width: 2,\r\n          height: 10,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 40,\r\n          top: 20,\r\n        }} />\r\n        <View style={{\r\n          width: 2,\r\n          height: 14,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 46,\r\n          top: 18,\r\n        }} />\r\n      </>\r\n    )}\r\n\r\n    {/* Two red lines forming an X when muted */}\r\n    {isMuted && (\r\n      <>\r\n        <View style={{\r\n          width: 35,\r\n          height: 2,\r\n          backgroundColor: \"#FF0000\",\r\n          position: \"absolute\",\r\n          transform: [{ rotate: \"45deg\" }],\r\n        }} />\r\n        <View style={{\r\n          width: 35,\r\n          height: 2,\r\n          backgroundColor: \"#FF0000\",\r\n          position: \"absolute\",\r\n          transform: [{ rotate: \"-45deg\" }],\r\n        }} />\r\n      </>\r\n    )}\r\n  </TouchableOpacity>\r\n);\r\n\r\n\r\n\r\n// =======================\r\n// SECRET PROGRESS BAR COMPONENT\r\n// =======================\r\nconst SecretProgressBar = ({ currentSecretIndex, onComplete }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handlePress = () => {\r\n    // Only clickable on the 3rd secret question (index 2)\r\n    if (currentSecretIndex !== 2) return;\r\n    if (progress < 5) {\r\n      const newProgress = progress + 1;\r\n      setProgress(newProgress);\r\n      if (newProgress === 5) {\r\n        onComplete(); // trigger secret win\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={currentSecretIndex === 2 ? 0.8 : 1}\r\n      onPress={handlePress}\r\n      style={styles.secretProgressContainer}\r\n    >\r\n      <View style={styles.secretProgressBackground}>\r\n        <View style={[styles.secretProgressFill, { flex: progress }]} />\r\n        <View style={{ flex: 5 - progress }} />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\nconst confirmQuit = () => {\r\n  setExitWarningVisible(true);\r\n};\r\n\r\n// play title/menu music\r\nasync function playTitleMusic() {\r\n  if (titleSound) {\r\n    // Already exists, just resume if paused\r\n    const status = await titleSound.getStatusAsync();\r\n    if (!status.isPlaying) {\r\n      await titleSound.playAsync();\r\n    }\r\n    return;\r\n  }\r\n\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLPR.mp3'),\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setTitleSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// helper: play quiz music\r\nasync function playQuizMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/LPME.mp3'),\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setQuizSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// helper: play credits music\r\nasync function playCreditsMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLCKMD.mp3'), // 👈 add your credits song here\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setCreditsSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\nasync function playSecretMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require(\"./assets/music/TLTV.mp3\"), // replace with your actual file\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setSecretSound(sound);\r\n  await sound.playAsync();\r\n}\r\n// helper: play secret result music\r\nasync function playSecretResultMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLA.mp3'), // 👈 put your file in /assets/music\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setSecretResultSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// clean up function\r\nasync function stopAllMusic() {\r\n  if (titleSound) {\r\n    await titleSound.stopAsync();\r\n    await titleSound.unloadAsync();\r\n    setTitleSound(null);\r\n  }\r\n  if (quizSound) {\r\n    await quizSound.stopAsync();\r\n    await quizSound.unloadAsync();\r\n    setQuizSound(null);\r\n  }\r\n  if (creditsSound) {\r\n    await creditsSound.stopAsync();\r\n    await creditsSound.unloadAsync();\r\n    setCreditsSound(null);\r\n  }\r\n  if (secretSound) {\r\n    await secretSound.stopAsync();\r\n    await secretSound.unloadAsync();\r\n    setSecretSound(null);\r\n  }\r\n  if (secretResultSound) {\r\n    await secretResultSound.stopAsync();\r\n    await secretResultSound.unloadAsync();\r\n    setSecretResultSound(null);\r\n  }\r\n}\r\n\r\n// music control effect\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  const handleMusic = async () => {\r\n    if (!isMounted) return;\r\n\r\n    // Decide what music should play\r\n    let desiredTrack = null;\r\n    if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\r\n      desiredTrack = \"quiz\";\r\n    } else if (mode === \"credits\") {\r\n      desiredTrack = \"credits\";\r\n    } else if (mode === \"secret\" && secretStage < 4) {\r\n      desiredTrack = \"secret\"; // secret levels 1–3\r\n    } else if (mode === \"secret\" && secretStage === 4) {\r\n      desiredTrack = \"secretResult\"; // secret result\r\n    } else if (mode === null) {\r\n      desiredTrack = \"title\";\r\n    }\r\n\r\n    // Stop anything that is playing but isn’t desired\r\n    if (desiredTrack !== \"title\" && titleSound) {\r\n      await titleSound.stopAsync();\r\n      await titleSound.unloadAsync();\r\n      setTitleSound(null);\r\n    }\r\n    if (desiredTrack !== \"quiz\" && quizSound) {\r\n      await quizSound.stopAsync();\r\n      await quizSound.unloadAsync();\r\n      setQuizSound(null);\r\n    }\r\n    if (desiredTrack !== \"credits\" && creditsSound) {\r\n      await creditsSound.stopAsync();\r\n      await creditsSound.unloadAsync();\r\n      setCreditsSound(null);\r\n    }\r\n    if (desiredTrack !== \"secret\" && secretSound) {\r\n      await secretSound.stopAsync();\r\n      await secretSound.unloadAsync();\r\n      setSecretSound(null);\r\n    }\r\n    if (desiredTrack !== \"secretResult\" && secretResultSound) {\r\n      await secretResultSound.stopAsync();\r\n      await secretResultSound.unloadAsync();\r\n      setSecretResultSound(null);\r\n    }\r\n\r\n    // Start the desired track if not muted\r\n    if (isMuted) return; // <--- skip starting music if muted\r\n\r\n    if (desiredTrack === \"title\" && !titleSound) await playTitleMusic();\r\n    else if (desiredTrack === \"quiz\" && !quizSound) await playQuizMusic();\r\n    else if (desiredTrack === \"credits\" && !creditsSound) await playCreditsMusic();\r\n    else if (desiredTrack === \"secret\" && !secretSound) await playSecretMusic();\r\n    else if (desiredTrack === \"secretResult\" && !secretResultSound) await playSecretResultMusic();\r\n  };\r\n\r\n  handleMusic();\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [mode, isMuted, secretStage]);\r\n\r\n// Credit Effects\r\nuseEffect(() => {\r\n  if (mode === \"credits\" && contentHeight > 0) {\r\n    const screenHeight = Dimensions.get(\"window\").height;\r\n\r\n    // Start just below the visible credits block\r\n    scrollY.setValue(screenHeight - contentHeight - creditsOffsetY);\r\n\r\n    const distance = contentHeight + screenHeight;\r\n    const speed = 50;\r\n    const duration = (distance / speed) * 1000;\r\n\r\n    Animated.timing(scrollY, {\r\n      toValue: -contentHeight,\r\n      duration: duration,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }\r\n}, [mode, contentHeight, creditsOffsetY]);\r\n\r\n  useEffect(() => {\r\n    if (mode) {\r\n      let num = mode === 'basic' ? 10 : mode === 'advanced' ? 20 : 30;\r\n      setQuizQuestions(getRandomQuestions(num));\r\n    }\r\n  }, [mode]);\r\n\r\nconst getRandomQuestions = (num) => {\r\n  const copy = [...allQuestions];\r\n\r\n  // Fisher–Yates shuffle\r\n  for (let i = copy.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [copy[i], copy[j]] = [copy[j], copy[i]];\r\n  }\r\n\r\n  // Only take as many as needed\r\n  return copy.slice(0, num);\r\n};\r\n\r\n  const handleAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setAnswers([]);\r\n    setMode(null);\r\n    setShowResult(false);\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    const tally = {};\r\n    answers.forEach(val => {\r\n      tally[val] = (tally[val] || 0) + 1;\r\n    });\r\n    return Object.entries(tally).sort((a, b) => b[1] - a[1])[0][0];\r\n  };\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading startAsync={getFonts} onFinish={() => setFontsLoaded(true)} onError={console.warn} />;\r\n  }\r\n\r\n// ===== Title Screen before anything =====\r\n  if (isTitleVisible) {\r\n    return <TitleScreen onStart={() => setIsTitleVisible(false)} />;\r\n  }\r\n\r\n// ===== Credits Screen =====\r\nif (mode === \"credits\") {\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#000' }}>\r\n      <ScrollView\r\n        contentContainerStyle={[\r\n          styles.fullScreenContainer,\r\n          {\r\n            flexGrow: 1,\r\n            justifyContent: 'space-between', // 👈 pushes content to top and bottom\r\n            paddingBottom: 40, // 👈 optional: adds breathing room below Back button\r\n          },\r\n        ]}\r\n      >\r\n        {/* Header */}\r\n        <View style={styles.headerWrapper}>\r\n          <Text style={styles.header}>CREDITS</Text>\r\n        </View>\r\n\r\n        {/* Animated Credits Block */}\r\n          <View\r\n            style={styles.creditsContainer}\r\n            onLayout={(e) => {\r\n              const offsetY = e.nativeEvent.layout.y;\r\n              setCreditsOffsetY(offsetY);\r\n            }}\r\n          >\r\n            <Animated.View style={{ transform: [{ translateY: scrollY }] }}>\r\n              <View\r\n                onLayout={(e) => setContentHeight(e.nativeEvent.layout.height)}\r\n                style={styles.creditsInner}\r\n              >\r\n                <Text style={styles.creditsText}>\r\n                  {\"DEVELOPED BY\\nDboss212121\\n\\nARTWORK\\nAI\\n\\nMUSIC\\nTrevor Lentz - Ascend\\nTrevor Lentz - Can't Keep Me down\\nTrevor Lentz - Pixel River\\nTrevor Lentz - This Sky of Mine\\nTrevor Lentz - The Void\\nLenny Pixels - Mother Board Encore - 8bit\"}\r\n                </Text>\r\n              </View>\r\n            </Animated.View>\r\n          </View>\r\n\r\n        {/* Back Button */}\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode(null)}>\r\n          <Text style={styles.buttonText}>Back</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* Mute Button */}\r\n        <MuteButton />\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n  // ===== Mode Selection =====\r\n  if (!mode) {\r\n    return (\r\n      <View style={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>CHOOSE YOUR APOCALYPSE QUIZ MODE</Text>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('basic')}><Text style={styles.buttonText}>BASIC (10 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('advanced')}><Text style={styles.buttonText}>ADVANCED (20 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('full')}><Text style={styles.buttonText}>FULL EVALUATION (30 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.creditsButton} onPress={() => setMode(\"credits\")}><Text style={styles.buttonText}>Credits</Text></TouchableOpacity>\r\n\r\n    {/* --- Universal Mute Button --- */}\r\n    <MuteButton />\r\n\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ===== Results Screen =====\r\n  if (showResult) {\r\n    const role = calculateResult();\r\n    return (\r\n      <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>YOUR APOCALYPSE CAREER IS:</Text>\r\n        <Image source={roles[role].image} style={styles.image} />\r\n        <Text style={styles.resultText}>{roles[role].description}</Text>\r\n        <TouchableOpacity style={styles.button} onPress={restartQuiz}><Text style={styles.buttonText}>HOME</Text></TouchableOpacity>\r\n      </ScrollView>\r\n    );\r\n  }\r\n  \r\n// ===== Secret Screen (Stage 1) =====\r\nif (mode === \"secret\" && secretStage === 1) {\r\n  const handleBoxPress = (index) => {\r\n    const next = [...secretBoxTaps];\r\n    next[index] = true;\r\n    setSecretBoxTaps(next);\r\n    if (next.every(Boolean)) setSecretStage(2);\r\n  };\r\n\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setSecretStage(0);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  // Instead of returning here, render inside main component JSX\r\nreturn (\r\n  <Animated.View style={{ flex: 1, opacity: flicker, transform: [{ translateX: jitterX }] }}>\r\n    {showAccessOverlay && (\r\n      <Animated.View style={[styles.accessOverlay, { opacity: overlayOpacity }]}>\r\n        <Text style={styles.accessText}>OVERRIDE PROTOCOL ENGAGED</Text>\r\n        <Text style={styles.accessText}>ACCESS GRANTED: ████████</Text>\r\n      </Animated.View>\r\n    )}\r\n\r\n    <Animated.View style={{ flex: 1, opacity: screenOpacity }}>\r\n      <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n\r\n\r\n      <Text style={styles.header}>{\"THE AIR GOES QUIET. WHAT DO YOU DO?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/thedoor.png\" }}\r\n        style={styles.image}\r\n      />\r\n      {[\r\n        { text: \"Hold your breath and wait\", value: \"doomDJ\" },\r\n        { text: \"Signal your crew to regroup\", value: \"mutantHRManager\" },\r\n        { text: \"Sprint toward the sound\", value: \"screamerScout\" },\r\n        { text: \"Hum back at the horizon\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Invisible corner “decor” boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <TouchableOpacity\r\n            key={i}\r\n            onPress={() => handleBoxPress(i)}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n              secretBoxTaps[i] && styles.cornerBoxActive,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* SECRET PROGRESS BAR (static in Stage 1) */}\r\n      <SecretProgressBar currentSecretIndex={-1} onComplete={() => {}} />\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => setMode(previousModeRef.current)}\r\n      >\r\n        <Text style={styles.buttonText}>QUIT</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n     </Animated.View>\r\n  </Animated.View>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 2) =====\r\nif (mode === \"secret\" && secretStage === 2) {\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"THE HORIZON SHIFTS. WHAT'S YOUR MOVE?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/secretroom.png\" }}\r\n        style={styles.image}\r\n      />\r\n\r\n      {[\r\n        { text: \"Step cautiously forward\", value: \"doomDJ\" },\r\n        { text: \"Observe silently\", value: \"mutantHRManager\" },\r\n        { text: \"Run toward the light\", value: \"screamerScout\" },\r\n        { text: \"Call out a strange sound\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Corner aesthetic boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <View\r\n            key={i}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* Secret progress bar (static) */}\r\n      <SecretProgressBar currentSecretIndex={-1} onComplete={() => {}} />\r\n\r\n      {/* \"Leave\" button advances to secretStage 3 */}\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => setSecretStage(3)}\r\n      >\r\n        <Text style={styles.buttonText}>Leave</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 3) =====\r\nif (mode === \"secret\" && secretStage === 3) {\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  const handleProgressComplete = () => {\r\n    // Show secret final results page\r\n    setSecretStage(4); // stage 4 = secret results page\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"A STRANGE ENERGY SURROUNDS YOU. WHAT DO YOU DO?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/agents.png\" }}\r\n        style={styles.image}\r\n      />\r\n\r\n      {[\r\n        { text: \"Step boldly forward\", value: \"doomDJ\" },\r\n        { text: \"Wait and watch\", value: \"mutantHRManager\" },\r\n        { text: \"Leap toward the source\", value: \"screamerScout\" },\r\n        { text: \"Whisper a strange chant\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Corner aesthetic boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <TouchableOpacity\r\n            key={i}\r\n            onPress={() => {}}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* Secret progress bar (interactive) */}\r\n      <SecretProgressBar currentSecretIndex={2} onComplete={handleProgressComplete} />\r\n\r\n      {/* Normal \"Quit\" button */}\r\n      <TouchableOpacity style={styles.button} onPress={() => setMode(previousModeRef.current)}>\r\n        <Text style={styles.buttonText}>Quit</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 4 - Final Results) =====\r\nif (mode === \"secret\" && secretStage === 4) {\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"🏆 YOU BEAT MY APP 🏆\"}</Text>\r\n      <Image\r\n        source={{\r\n          uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/utopia.png\",\r\n        }}\r\n        style={styles.image}\r\n      />\r\n      <Text style={styles.creditsText}>\r\n        {\"Against all odds, you found the hidden path and conquered it.\"}\r\n      </Text>\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          setMode(null);    // back to mode select\r\n          setSecretStage(1);    // reset secret stages\r\n          setSecretBoxTaps([false, false, false, false]);\r\n          setSecretProgress(0); // reset progress bar\r\n          setCurrentQuestion(0);\r\n          setAnswers([]);\r\n          setShowResult(false);\r\n          setProgress(0);\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>BACK TO QUIZ</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n  // ===== Mode Selection =====\r\n  if (!mode) {\r\n    return (\r\n      <View style={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>CHOOSE YOUR APOCALYPSE QUIZ MODE</Text>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('basic')}><Text style={styles.buttonText}>BASIC (10 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('advanced')}><Text style={styles.buttonText}>ADVANCED (20 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('full')}><Text style={styles.buttonText}>FULL EVALUATION (30 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.creditsButton} onPress={() => setMode(\"credits\")}><Text style={styles.buttonText}>Credits</Text></TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ===== Quiz Screen =====\r\n  const q = quizQuestions[currentQuestion] ?? {};\r\n  const progress = Math.round(((currentQuestion) / quizQuestions.length) * 100);\r\n\r\nreturn (\r\n  <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n    <Text style={styles.header}>{q.question}</Text>\r\n{q.image && (\r\n  <TouchableOpacity\r\n    onPress={() => {\r\n      const newCount = secretClicks + 1;\r\n      setSecretClicks(newCount);\r\n\r\n      if (newCount >= 5) {\r\n        setSecretUnlocked(true);\r\n        setMode(\"secret\"); // 👈 trigger secret mode\r\n        setSecretClicks(0); // optional reset\r\n      }\r\n    }}\r\n  >\r\n    <Image \r\n      source={{ uri: q.image.uri }} \r\n      style={styles.image} \r\n    />  \r\n    </TouchableOpacity>\r\n)}\r\n    {q.options && q.options.map((opt, index) => (\r\n      <TouchableOpacity key={index} style={styles.button} onPress={() => handleAnswer(opt.value)}>\r\n        <Text style={styles.buttonText}>{opt.text}</Text>\r\n      </TouchableOpacity>\r\n    ))}\r\n\r\n    <View style={styles.progressContainer}>\r\n      <View style={[styles.progressBar, { width: `${progress}%` }]}></View>\r\n    </View>\r\n\r\n    {!showResult && (\r\n      <TouchableOpacity style={styles.button} onPress={() => setExitWarningVisible(true)}>\r\n        <Text style={styles.buttonText}>QUIT</Text>\r\n      </TouchableOpacity>\r\n    )}\r\n\r\n    {/* Exit Warning Modal */}\r\n    <Modal\r\n      transparent={true}\r\n      visible={exitWarningVisible}\r\n      animationType=\"fade\"\r\n      onRequestClose={() => setExitWarningVisible(false)}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.buttonText}>ARE YOU SURE YOU WANT TO QUIT AND LOSE ALL PROGRESS?</Text>\r\n          <TouchableOpacity style={styles.button} onPress={() => setExitWarningVisible(false)}>\r\n            <Text style={styles.buttonText}>CANCEL</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={() => {\r\n            setExitWarningVisible(false);\r\n            setCurrentQuestion(0);\r\n            setAnswers([]);\r\n            setQuizQuestions([]);\r\n            setShowResult(false);\r\n            setMode(null);\r\n          }}>\r\n            <Text style={styles.buttonText}>YES, QUIT</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n\r\n        {/* --- Universal Mute Button --- */}\r\n    <MuteButton />\r\n\r\n  </ScrollView>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  fullScreenContainer: {\r\n    flexGrow: 1,\r\n    minHeight: Dimensions.get('window').height,\r\n    backgroundColor: '#000',\r\n    paddingTop: 60,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start', // 👈 prevents layout stretch\r\n    width: '100%',\r\n    marginHorizontal: 'auto',\r\n    position: 'relative',\r\n  },\r\n  header: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 20,\r\n    lineHeight: 28,\r\n    textAlign: 'center',\r\n    color: '#00ff00',\r\n    marginBottom: 16,\r\n    paddingHorizontal: 12,\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    alignSelf: 'center',\r\n    flexShrink: 1,\r\n  },\r\n  button: {\r\n    backgroundColor: '#000',\r\n    borderColor: '#00ff00',\r\n    borderWidth: 2,\r\n    padding: 12,\r\n    marginTop: 16,\r\n    width: '80%',\r\n  },\r\n  buttonText: {\r\n    color: '#00ff00',\r\n    fontFamily: 'press-start',\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  resultText: {\r\n    color: '#0ff',\r\n    fontSize: 12,\r\n    fontFamily: 'press-start',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  progressContainer: {\r\n    width: '80%',\r\n    height: 12,\r\n    backgroundColor: '#333',\r\n    borderColor: '#00ff00',\r\n    borderWidth: 2,\r\n    marginTop: 16,\r\n  },\r\n  progressBar: {\r\n    height: '100%',\r\n    backgroundColor: '#00ff00',\r\n  },\r\n  image: {\r\n  width: 200,\r\n  height: 200,\r\n  resizeMode: 'contain',\r\n  marginBottom: 16,\r\n  borderColor: '#00eeff',\r\n  borderWidth: 2,\r\n},\r\ncontainer: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 32,\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 16,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  tap: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 14,\r\n    color: 'lime',\r\n    marginTop: 50,\r\n    textAlign: 'center',\r\n  },\r\n  titelHeader: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 24,\r\n    color: 'lime',\r\n  },\r\n  titleScreenContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#000',        // black background\r\n    alignItems: 'center',\r\n    justifyContent: 'center',       // centers content vertically and horizontally\r\n    paddingHorizontal: 20,\r\n  },\r\n  titleText: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 28,                   // big text\r\n    color: '#00ff00',               // neon green\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  subtitleText: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 14,\r\n    color: '#00ff00',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  tapToStart: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 12,\r\n    color: '#00ff00',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  modalOverlay: {\r\n  flex: 1,\r\n  backgroundColor: \"rgba(0,0,0,0.7)\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n},\r\nmodalContent: {\r\n  backgroundColor: \"#222\",\r\n  padding: 20,\r\n  borderRadius: 10,\r\n  width: \"80%\",\r\n  alignItems: \"center\",\r\n},\r\nmodalText: {\r\n  color: \"#fff\",\r\n  fontSize: 18,\r\n  marginBottom: 20,\r\n  textAlign: \"center\",\r\n},\r\nscrollContainer: {\r\n  padding: 20,\r\n  alignItems: \"center\",\r\n},\r\ncreditItem: {\r\n  fontSize: 16,\r\n  color: \"white\",\r\n  marginBottom: 10,\r\n  textAlign: \"center\",\r\n},\r\ncreditsButton: {\r\n  position: \"absolute\",\r\n  bottom: 20,\r\n  right: 20,\r\n  paddingVertical: 8,\r\n  paddingHorizontal: 14,\r\n  backgroundColor: \"#333\", // dark background\r\n  borderRadius: 8,\r\n},\r\ncreditsText: {\r\n  fontSize: 20,\r\n  color: '#33bbff',\r\n  textAlign: 'center',\r\n  lineHeight: 28,\r\n    fontFamily: 'press-start',\r\n},\r\n\r\nsecretOverlay: {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n  zIndex: 10,\r\n},\r\n\r\ncornerBox: {\r\n  position: \"absolute\",\r\n  width: 26,\r\n  height: 26,\r\n  borderWidth: 2,\r\n  borderColor: \"#00ff00\",\r\n  borderRadius: 6,\r\n  backgroundColor: \"transparent\",   // looks like UI chrome\r\n  opacity: 0.65,                     // subtle so it feels decorative\r\n},\r\n\r\ncornerBoxActive: {\r\n  opacity: 1,\r\n  backgroundColor: \"rgba(0,255,0,0.12)\", // tiny feedback when tapped\r\n},\r\n\r\ntl: { top: 12, left: 12 },\r\ntr: { top: 12, right: 12 },\r\nbl: { bottom: 12, left: 12 },\r\nbr: { bottom: 12, right: 12 },\r\n\r\nsecretProgressContainer: {\r\n  marginVertical: 12,\r\n  width: '90%',\r\n  alignSelf: 'center',\r\n},\r\nsecretProgressBackground: {\r\n  flexDirection: 'row',\r\n  height: 20,\r\n  backgroundColor: '#001133',\r\n  borderColor: '#33bbff',\r\n  borderWidth: 2,\r\n  borderRadius: 8,\r\n  shadowColor: '#33bbff',\r\n  shadowOpacity: 0.8,\r\n  shadowRadius: 8,\r\n  shadowOffset: { width: 0, height: 0 },\r\n  overflow: 'hidden',\r\n},\r\nsecretProgressFill: {\r\n  backgroundColor: '#00ccff',\r\n  borderRightWidth: 1,\r\n  borderRightColor: '#003366',\r\n},\r\n\r\nheaderWrapper: {\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  alignSelf: 'center',\r\n  paddingHorizontal: 12,\r\n},\r\n\r\ncreditsContainer: {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  marginHorizontal: 'auto',\r\n  height: 300,\r\n  alignSelf: 'center',\r\n},\r\n\r\ncreditsInner: {\r\n  margin: 0,\r\n  padding: 0,\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  alignSelf: 'center',\r\n},\r\n\r\naccessOverlay: {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  backgroundColor: 'black',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  zIndex: 999,\r\n},\r\n\r\naccessText: {\r\n  color: '#0ff',\r\n  fontSize: 18,\r\n  fontFamily: 'monospace',\r\n  letterSpacing: 2,\r\n  textAlign: 'center',\r\n  marginVertical: 4,\r\n},\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}