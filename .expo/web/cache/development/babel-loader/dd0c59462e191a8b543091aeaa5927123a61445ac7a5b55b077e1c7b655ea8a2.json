{"ast":null,"code":"import React from 'react';\nimport NativeAppLoading from './AppLoadingNativeWrapper';\nclass AppLoading extends React.Component {\n  _isMounted = false;\n  componentDidMount() {\n    console.warn(`expo-app-loading is deprecated in favor of expo-splash-screen: use SplashScreen.preventAutoHideAsync() and SplashScreen.hideAsync() instead. https://docs.expo.dev/versions/latest/sdk/splash-screen/`);\n    this._isMounted = true;\n    this.startLoadingAppResourcesAsync().catch(error => {\n      console.error(`AppLoading threw an unexpected error when loading:\\n${error}`);\n    });\n  }\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  async startLoadingAppResourcesAsync() {\n    if (!('startAsync' in this.props)) {\n      return;\n    }\n    if (!('onFinish' in this.props)) {\n      throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n    }\n    if (!('onError' in this.props)) {\n      throw new Error('AppLoading onError prop is required if startAsync is provided');\n    }\n    try {\n      await this.props.startAsync();\n    } catch (e) {\n      if (!this._isMounted) {\n        return;\n      }\n      this.props.onError(e);\n    } finally {\n      if (!this._isMounted) {\n        return;\n      }\n      this.props.onFinish();\n    }\n  }\n  render() {\n    return React.createElement(NativeAppLoading, Object.assign({}, this.props));\n  }\n}\nexport default AppLoading;","map":{"version":3,"names":["React","NativeAppLoading","AppLoading","Component","_isMounted","componentDidMount","console","warn","startLoadingAppResourcesAsync","catch","error","componentWillUnmount","props","Error","startAsync","e","onError","onFinish","render","createElement","Object","assign"],"sources":["C:\\QuizApp\\ApocalypseQuiz\\node_modules\\expo-app-loading\\src\\AppLoading.tsx"],"sourcesContent":["import React from 'react';\n\nimport { AppLoadingProps } from './AppLoading.types';\nimport NativeAppLoading from './AppLoadingNativeWrapper';\n\nclass AppLoading extends React.Component<AppLoadingProps> {\n  _isMounted: boolean = false;\n\n  componentDidMount() {\n    console.warn(\n      `expo-app-loading is deprecated in favor of expo-splash-screen: use SplashScreen.preventAutoHideAsync() and SplashScreen.hideAsync() instead. https://docs.expo.dev/versions/latest/sdk/splash-screen/`\n    );\n    this._isMounted = true;\n\n    this.startLoadingAppResourcesAsync().catch((error) => {\n      console.error(`AppLoading threw an unexpected error when loading:\\n${error}`);\n    });\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  private async startLoadingAppResourcesAsync() {\n    if (!('startAsync' in this.props)) {\n      return;\n    }\n\n    if (!('onFinish' in this.props)) {\n      throw new Error('AppLoading onFinish prop is required if startAsync is provided');\n    }\n\n    if (!('onError' in this.props)) {\n      throw new Error('AppLoading onError prop is required if startAsync is provided');\n    }\n\n    try {\n      await this.props.startAsync();\n    } catch (e) {\n      if (!this._isMounted) {\n        return;\n      }\n      this.props.onError(e);\n    } finally {\n      if (!this._isMounted) {\n        return;\n      }\n      // If we get to this point then we know that either there was no error, or the error was handled.\n      this.props.onFinish();\n    }\n  }\n\n  render() {\n    return <NativeAppLoading {...this.props} />;\n  }\n}\n\nexport default AppLoading;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,gBAAgB,MAAM,2BAA2B;AAExD,MAAMC,UAAW,SAAQF,KAAK,CAACG,SAA0B;EACvDC,UAAU,GAAY,KAAK;EAE3BC,iBAAiBA,CAAA;IACfC,OAAO,CAACC,IAAI,CACV,uMAAuM,CACxM;IACD,IAAI,CAACH,UAAU,GAAG,IAAI;IAEtB,IAAI,CAACI,6BAA6B,EAAE,CAACC,KAAK,CAAEC,KAAK,IAAI;MACnDJ,OAAO,CAACI,KAAK,CAAC,uDAAuDA,KAAK,EAAE,CAAC;IAC/E,CAAC,CAAC;EACJ;EAEAC,oBAAoBA,CAAA;IAClB,IAAI,CAACP,UAAU,GAAG,KAAK;EACzB;EAEQ,MAAMI,6BAA6BA,CAAA;IACzC,IAAI,EAAE,YAAY,IAAI,IAAI,CAACI,KAAK,CAAC,EAAE;MACjC;;IAGF,IAAI,EAAE,UAAU,IAAI,IAAI,CAACA,KAAK,CAAC,EAAE;MAC/B,MAAM,IAAIC,KAAK,CAAC,gEAAgE,CAAC;;IAGnF,IAAI,EAAE,SAAS,IAAI,IAAI,CAACD,KAAK,CAAC,EAAE;MAC9B,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;;IAGlF,IAAI;MACF,MAAM,IAAI,CAACD,KAAK,CAACE,UAAU,EAAE;KAC9B,CAAC,OAAOC,CAAC,EAAE;MACV,IAAI,CAAC,IAAI,CAACX,UAAU,EAAE;QACpB;;MAEF,IAAI,CAACQ,KAAK,CAACI,OAAO,CAACD,CAAC,CAAC;KACtB,SAAS;MACR,IAAI,CAAC,IAAI,CAACX,UAAU,EAAE;QACpB;;MAGF,IAAI,CAACQ,KAAK,CAACK,QAAQ,EAAE;;EAEzB;EAEAC,MAAMA,CAAA;IACJ,OAAOlB,KAAA,CAAAmB,aAAA,CAAClB,gBAAgB,EAAAmB,MAAA,CAAAC,MAAA,KAAK,IAAI,CAACT,KAAK,EAAI;EAC7C;;AAGF,eAAeV,UAAU","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}