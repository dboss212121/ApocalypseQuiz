{"ast":null,"code":"import{UnavailabilityError}from'expo-modules-core';import ExpoSplashScreen from'./ExpoSplashScreen';export async function preventAutoHideAsync(){if(!ExpoSplashScreen.preventAutoHideAsync){throw new UnavailabilityError('expo-splash-screen','preventAutoHideAsync');}return await ExpoSplashScreen.preventAutoHideAsync();}export async function hideAsync(){if(!ExpoSplashScreen.hideAsync){throw new UnavailabilityError('expo-splash-screen','hideAsync');}return await ExpoSplashScreen.hideAsync();}export function hide(){console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');hideAsync();}export function preventAutoHide(){console.warn('SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()');preventAutoHideAsync();}","map":{"version":3,"names":["UnavailabilityError","ExpoSplashScreen","preventAutoHideAsync","hideAsync","hide","console","warn","preventAutoHide"],"sources":["C:\\QuizApp\\ApocalypseQuiz\\node_modules\\expo-splash-screen\\src\\SplashScreen.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoSplashScreen from './ExpoSplashScreen';\n\n// @needsAudit\n/**\n * Makes the native splash screen (configured in `app.json`) remain visible until `hideAsync` is called.\n *\n * > **Important note**: It is recommended to call this in global scope without awaiting, rather than\n * > inside React components or hooks, because otherwise this might be called too late,\n * > when the splash screen is already hidden.\n *\n * @example\n * ```ts\n * import * as SplashScreen from 'expo-splash-screen';\n *\n * SplashScreen.preventAutoHideAsync();\n *\n * export default function App() {\n *  // ...\n * }\n * ```\n */\nexport async function preventAutoHideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.preventAutoHideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'preventAutoHideAsync');\n  }\n  return await ExpoSplashScreen.preventAutoHideAsync();\n}\n\n// @needsAudit\n/**\n * Hides the native splash screen immediately. Be careful to ensure that your app has content ready\n * to display when you hide the splash screen, or you may see a blank screen briefly. See the\n * [\"Usage\"](#usage) section for an example.\n */\nexport async function hideAsync(): Promise<boolean> {\n  if (!ExpoSplashScreen.hideAsync) {\n    throw new UnavailabilityError('expo-splash-screen', 'hideAsync');\n  }\n  return await ExpoSplashScreen.hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.hideAsync()` instead\n * @ignore\n */\nexport function hide(): void {\n  console.warn('SplashScreen.hide() is deprecated in favour of SplashScreen.hideAsync()');\n  hideAsync();\n}\n\n/**\n * @deprecated Use `SplashScreen.preventAutoHideAsync()` instead\n * @ignore\n */\nexport function preventAutoHide(): void {\n  console.warn(\n    'SplashScreen.preventAutoHide() is deprecated in favour of SplashScreen.preventAutoHideAsync()'\n  );\n  preventAutoHideAsync();\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CAqBjD,MAAO,eAAe,CAAAC,oBAAoBA,CAAA,EACxC,GAAI,CAACD,gBAAgB,CAACC,oBAAoB,CAAE,CAC1C,KAAM,IAAI,CAAAF,mBAAmB,CAAC,oBAAoB,CAAE,sBAAsB,CAAC,C,CAE7E,MAAO,MAAM,CAAAC,gBAAgB,CAACC,oBAAoB,EAAE,CACtD,CAQA,MAAO,eAAe,CAAAC,SAASA,CAAA,EAC7B,GAAI,CAACF,gBAAgB,CAACE,SAAS,CAAE,CAC/B,KAAM,IAAI,CAAAH,mBAAmB,CAAC,oBAAoB,CAAE,WAAW,CAAC,C,CAElE,MAAO,MAAM,CAAAC,gBAAgB,CAACE,SAAS,EAAE,CAC3C,CAMA,MAAM,SAAU,CAAAC,IAAIA,CAAA,EAClBC,OAAO,CAACC,IAAI,CAAC,yEAAyE,CAAC,CACvFH,SAAS,EAAE,CACb,CAMA,MAAM,SAAU,CAAAI,eAAeA,CAAA,EAC7BF,OAAO,CAACC,IAAI,CACV,+FAA+F,CAChG,CACDJ,oBAAoB,EAAE,CACxB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}