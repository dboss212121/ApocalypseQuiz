{"version":3,"file":"static/js/main.d2d498ac.js","mappings":"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","sources":["App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// App.js\r\n\r\nimport { Audio } from 'expo-av';\r\nimport AppLoading from 'expo-app-loading';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View, Dimensions, Image, Animated, Easing, Modal } from 'react-native';\r\nimport { Alert } from 'react-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'press-start': require('./assets/fonts/PressStart2P-Regular.ttf'),\r\n});\r\n\r\n// =======================\r\n// TITLE SCREEN COMPONENT\r\n// =======================\r\nconst TitleScreen = ({ onStart }) => {\r\n  const fadeAnim = useState(new Animated.Value(0))[0];   // fade for title/subtitle\r\n  const pulseAnim = useState(new Animated.Value(0))[0];  // pulse for \"tap to start\"\r\n\r\n  useEffect(() => {\r\n    // Fade in title/subtitle\r\n    Animated.timing(fadeAnim, {\r\n      toValue: 1,\r\n      duration: 2000,\r\n      useNativeDriver: true,\r\n      easing: Easing.ease,\r\n    }).start(() => {\r\n      // Start pulsing after fade-in completes\r\n      Animated.loop(\r\n        Animated.sequence([\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 1,\r\n            duration: 800,\r\n            useNativeDriver: true,\r\n          }),\r\n          Animated.timing(pulseAnim, {\r\n            toValue: 0.3,\r\n            duration: 800,\r\n            useNativeDriver: true,\r\n          }),\r\n        ])\r\n      ).start();\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.titleScreenContainer}>\r\n      <Animated.View style={{ opacity: fadeAnim }}>\r\n        <Text style={styles.titleText}>WELCOME TO THE APOCALYPSE QUIZ</Text>\r\n        <Text style={styles.subtitleText}>\r\n          Find out how you survive the apocalypse\r\n        </Text>\r\n      </Animated.View>\r\n\r\n      <Animated.View style={{ opacity: pulseAnim }}>\r\n        <TouchableOpacity onPress={onStart}>\r\n          <Text style={styles.tapToStart}>TAP TO START</Text>\r\n        </TouchableOpacity>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst allQuestions = [\r\n{\r\n  question: \"THE WORLD JUST ENDED. WHAT'S YOUR FIRST MOVE?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/mushroomcloud.png\",\r\n    alt: \"A rising mushroom cloud casting an eerie glow over ruins\" \r\n  },\r\n  options: [\r\n  { text: 'Build a barricade out of canned beans', value: 'receiptGolem' },\r\n  { text: 'Climb a microwave tower to search for signal', value: 'doomDJ' },\r\n  { text: 'Loot everything that isn’t on fire', value: 'glitterButcher' },\r\n  { text: 'Meditate and accept the void', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A STRANGE DEVICE HUMMING IN THE RUBBLE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/buzzingmachine.png\",\r\n    alt: \"A broken, buzzing machine with faint glowing wires\" \r\n  },\r\n  options: [\r\n  { text: 'Reverse-engineer it into a toaster', value: 'cyborgCellist' },\r\n  { text: 'Smash it immediately. No risks.', value: 'molotovMixologist' },\r\n  { text: 'Lick it and chant softly', value: 'balloonNecromancer' },\r\n  { text: 'Turn it into a weapon', value: 'libraryCommando' },\r\n  ]\r\n},\r\n{\r\n  question: \"A MUTANT RAT ARMY APPROACHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ratarmyresized.png\",\r\n    alt: \"A swarm of oversized glowing-eyed rats charging forward\" \r\n  },\r\n  options: [\r\n  { text: 'Negotiate. Even rats need HR', value: 'cockroachNegotiator' },\r\n  { text: 'Screech louder to establish dominance', value: 'screamerScout' },\r\n  { text: 'Summon the spirits of sewer ancestors', value: 'trashOracle' },\r\n  { text: 'Organize a neighborhood defense grid', value: 'bureaucracyGhoul' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGER OFFERS YOU A GLOWING MUSHROOM. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glowingmushroom.png\",\r\n    alt: \"A strange bioluminescent mushroom glowing with green light\" \r\n  },\r\n  options: [\r\n  { text: 'Accept it and name it Greg', value: 'duckPainter' },\r\n  { text: 'Decline and file a report', value: 'kaleChampion' },\r\n  { text: 'Run away with it and laugh', value: 'hamsterWarlord' },\r\n  { text: 'Inspect it for medicinal use', value: 'marshmallowGeneral' },\r\n  ]\r\n}, \r\n{\r\n  question: \"YOUR WEAPON OF CHOICE IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\r\n    alt: \"A pile of improvised weapons scattered across a cracked floor\" \r\n  },\r\n  options: [\r\n  { text: 'Clipboard with sharpened corners', value: 'bureaucracyGhoul' },\r\n  { text: 'Healing salve with a punch', value: 'mutantHRManager' },\r\n  { text: 'Nail bat covered in stickers', value: 'glitterButcher' },\r\n  { text: 'Cursed ukulele', value: 'doomDJ' },\r\n  ]\r\n}, \r\n{\r\n  question: \"THE APOCALYPSE HAS TV AGAIN. YOUR SHOW?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/tv.png\",\r\n    alt: \"A cracked old television flickering with static\" \r\n  },\r\n  options: [\r\n  { text: '“Disaster Diaries: Planning the Panic”', value: 'apocalypseConspiracyTheorist' },\r\n  { text: '“Survivor Support Circle”', value: 'mutantHRManager' },\r\n  { text: '“Cooking with Roadkill”', value: 'gnocchiNomad' },\r\n  { text: '“Whispers from the Ceiling Fan”', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"HOW DO YOU START YOUR APOCALYPSE MORNING?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/sunrise.png\",\r\n    alt: \"A fiery sunrise breaking over a ruined wasteland\" \r\n  },\r\n  options: [\r\n  { text: 'Inventory and affirmations', value: 'receiptGolem' },\r\n  { text: 'Stretch, share, and hydrate', value: 'marshmallowGeneral' },\r\n  { text: 'Scream into the mist', value: 'screamerScout' },\r\n  { text: 'Sip tea with a ghost', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU’RE INVITED TO A WASTELAND PARTY. YOUR GIFT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/party.png\",\r\n    alt: \"A flickering bonfire surrounded by scavenged party decorations\" \r\n  },\r\n  options: [\r\n  { text: 'A tactical punch bowl', value: 'molotovMixologist' },\r\n  { text: 'A box of shared memories', value: 'libraryCommando' },\r\n  { text: 'A bag of teeth and glitter', value: 'glitterButcher' },\r\n  { text: 'A crystal that buzzes when stared at', value: 'radioactivePhilosopher' },\r\n  ]\r\n}, \r\n{\r\n  question: \"YOU FIND A FUNCTIONAL VEHICLE. IT RUNS ON:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vehicle.png\",\r\n    alt: \"A rusted vehicle with strange tubes and glowing fuel tanks\" \r\n  },\r\n  options: [\r\n  { text: 'Dried fruit and accountability', value: 'kaleChampion' },\r\n  { text: 'Feelings and essential oils', value: 'mutantHRManager' },\r\n  { text: 'Gremlin screams', value: 'hamsterWarlord' },\r\n  { text: 'Dreams of the old world', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"A GIANT ROBOT WANTS TO JOIN YOUR CREW. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/robot.png\",\r\n    alt: \"A towering robot covered in dents and scavenged armor\" \r\n  },\r\n  options: [\r\n  { text: 'Assign it as logistics coordinator', value: 'libraryCommando' },\r\n  { text: 'Offer emotional calibration training', value: 'mutantHRManager' },\r\n  { text: 'Paint flames on its chest', value: 'duckPainter' },\r\n  { text: 'Ask if it dreams of rusting sheep', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU CHECK INTO THE LAST HOTEL ON EARTH. THE COMPLIMENTARY ITEM IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hotel.png\",\r\n    alt: \"A crumbling hotel lobby with dusty chandeliers\" \r\n  },\r\n  options: [\r\n  { text: 'A keycard made from scrap metal', value: 'receiptGolem' },\r\n  { text: 'A bed stuffed with old newspapers', value: 'marshmallowGeneral' },\r\n  { text: 'A minibar full of mystery meat', value: 'gnocchiNomad' },\r\n  { text: 'A lamp that whispers bedtime stories', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A LEGENDARY WEAPON IN THE RUINS. IT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/weapon.png\",\r\n    alt: \"An ominous weapon glinting in the rubble\" \r\n  },\r\n  options: [\r\n  { text: 'A sword made of melted road signs', value: 'doomDJ' },\r\n  { text: 'A crossbow that fires angry beetles', value: 'squirrelTamer' },\r\n  { text: 'A bat wrapped in barbed wire and rumors', value: 'glitterButcher' },\r\n  { text: 'A gun that shoots tiny holograms of itself', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR ENEMY FINALLY FALLS INTO YOUR TRAP. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/trap.png\",\r\n    alt: \"A menacing pit trap surrounded by makeshift spikes\" \r\n  },\r\n  options: [\r\n  { text: 'Deliver a speech so epic it becomes legend', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Make them clean your entire camp with a toothbrush', value: 'libraryCommando' },\r\n  { text: 'Release a swarm of weaponized crows', value: 'animalMime' },\r\n  { text: 'Erase them from every photo… retroactively', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"A DERELICT BOAT WASHES ASHORE. YOUR FIRST MOVE IS TO:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/boat.png\" },\r\n  alt: \"Tactical belt with pouches\",\r\n  options: [\r\n  { text: 'Restore it into a seaworthy escape vessel', value: 'travelAgentOfTerror' },\r\n  { text: 'Turn it into a floating community hub', value: 'mutantHRManager' },\r\n  { text: 'Strip it for parts before anyone else can', value: 'glitterButcher' },\r\n  { text: 'Sail it inland somehow, just to confuse people', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER AN ABANDONED POOL IN THE WASTELAND. YOUR PLAN IS TO:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/pool.png\" },\r\n  alt: \"Derelict pool\",\r\n  options: [\r\n  { text: 'Fill it with clean water for the community', value: 'marshmallowGeneral' },\r\n  { text: 'Grow crops in it using the deep basin', value: 'kaleChampion' },\r\n  { text: 'Stock it with mutant fish for later snacking', value: 'gnocchiNomad' },\r\n  { text: 'Turn it into an ominous art installation', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A TACTICAL BELT WITH MYSTERIOUS POUCHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/belt.png\",\r\n    alt: \"A rugged tactical belt with oddly glowing pouches\" \r\n  },\r\n  options: [\r\n  { text: 'Organize survival gear with military precision', value: 'libraryCommando' },\r\n  { text: 'Fill it with snacks for the whole squad', value: 'marshmallowGeneral' },\r\n  { text: 'Cram it full of stolen trinkets and bones', value: 'glitterButcher' },\r\n  { text: 'Discover one pouch contains a portal to nowhere', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"CHOOSE YOUR WASTELAND COMPANION ANIMAL:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/pet.png\",\r\n    alt: \"A scrappy animal companion ready for chaos\" \r\n  },\r\n  options: [\r\n  { text: 'A battle-hardened goat', value: 'hamsterWarlord' },\r\n  { text: 'A one-eyed therapy pigeon', value: 'mutantHRManager' },\r\n  { text: 'A hairless raccoon with trust issues', value: 'animalMime' },\r\n  { text: 'A telepathic lizard that speaks in riddles', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGER APPROACHES YOUR CAMP. YOU DECIDE TO:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/stranger.png\",\r\n    alt: \"A mysterious figure standing at the edge of your campfire light\" \r\n  },\r\n  options: [\r\n  { text: 'Offer them a seat and negotiate terms', value: 'cockroachNegotiator' },\r\n  { text: 'Share a meal and learn their story', value: 'mutantHRManager' },\r\n  { text: 'Circle behind them and take their boots', value: 'glitterButcher' },\r\n  { text: 'Whisper to them in a language you just made up', value: 'duckPainter' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU’RE ENROLLED IN THE LAST POST-APOCALYPTIC COLLEGE. YOUR MAJOR IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/college.png\",\r\n    alt: \"A dilapidated college building with banners of odd symbols\" \r\n  },\r\n  options: [\r\n  { text: 'Survival Strategy and Bartering', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Mutant Relations and Counseling', value: 'mutantHRManager' },\r\n  { text: 'Scavenging 101: Chaos Management', value: 'animalMime' },\r\n  { text: 'Cryptic Arts and Oddities', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE NEW ECONOMY, YOUR CURRENCY FEATURES:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/money.png\",\r\n    alt: \"Crumpled bills with bizarre illustrations and symbols\" \r\n  },\r\n  options: [\r\n  { text: 'A heroic figure with a duct-taped weapon', value: 'doomDJ' },\r\n  { text: 'A pair of hands shaking over a campfire', value: 'cockroachNegotiator' },\r\n  { text: 'A snarling rat wearing a crown', value: 'squirrelTamer' },\r\n  { text: 'An eye that seems to follow you everywhere', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"IT’S TIME FOR A DUEL. WHAT IS YOUR SECRET WEAPON OF CHOICE?:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duel.png\",\r\n    alt: \"A dusty dueling arena with strange improvised weapons\" \r\n  },\r\n  options: [\r\n  { text: 'A sharpened broom handle', value: 'libraryCommando' },\r\n  { text: 'An aggressively worded letter', value: 'bureaucracyGhoul' },\r\n  { text: 'Two angry raccoons tied together', value: 'animalMime' },\r\n  { text: 'A spoon that whispers battle strategies', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\n  question: \"WHAT’S YOUR MEAL PLAN?\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/meal.png\",\r\n    alt: \"A questionable apocalypse meal served on a rusty plate\" \r\n  },\r\n  options: [\r\n  { text: \"Scavenge for expired granola bars\", value: \"gnocchiNomad\" },\r\n  { text: \"Hunt mutant squirrels\", value: \"squirrelTamer\" },\r\n  { text: \"Barter socks for canned spaghetti\", value: \"receiptGolem\" },\r\n  { text: \"Grow mushrooms in a toilet tank\", value: \"kaleChampion\" }\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR BARRICADE IS THE LAST LINE OF DEFENSE AGAINST:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/barricade.png\",\r\n    alt: \"Makeshift wooden barricade stacked with junkyard debris\" \r\n  },\r\n  options: [\r\n  { text: 'A horde of caffeinated squirrels', value: 'squirrelTamer' },\r\n  { text: 'Door-to-door apocalypse salesmen', value: 'travelAgentOfTerror' },\r\n  { text: 'A river of hot cheese', value: 'glitterButcher' },\r\n  { text: 'Time-traveling versions of yourself', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR GANG FLAG PROUDLY DISPLAYS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/flag.png\",\r\n    alt: \"Tattered gang flag waving in the radioactive wind\" \r\n  },\r\n  options: [\r\n  { text: 'A possum holding a sword and a grudge', value: 'hamsterWarlord' },\r\n  { text: 'Three raccoons in a trench coat flipping pancakes', value: 'animalMime' },\r\n  { text: 'A screaming cactus wearing sunglasses', value: 'duckPainter' },\r\n  { text: 'An eldritch sandwich that whispers your debts', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOUR KARAOKE PERFORMANCE TONIGHT IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/karaoke.png\",\r\n    alt: \"A lone microphone glowing under a flickering neon light\" \r\n  },\r\n  options: [\r\n  { text: 'Screaming the Pokémon theme while being chased by a goose', value: 'screamerScout' },\r\n  { text: 'Interpretive dance to whale sounds in full medieval armor', value: 'yodelMechanic' },\r\n  { text: 'Yodeling “Bohemian Rhapsody” while holding a suspicious ham', value: 'doomDJ' },\r\n  { text: 'Whisper-rapping the Bee Movie script in a smoky jazz bar', value: 'origamiDetective' },\r\n  ]\r\n},\r\n{\r\nquestion: \"A STRANGE LIGHT APPEARS IN THE SKY. WHAT DO YOU DO?\",\r\nimage: { \r\n  uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/light.png\",\r\n  alt: \"Mysterious glowing light hovering in the night sky\" },\r\n  options: [\r\n  { text: 'Point at it and yell “same” until it goes away', value: 'doomDJ' },\r\n  { text: 'Start selling tickets for the “End of the World Viewing Party”', value: 'travelAgentOfTerror' },\r\n  { text: 'Challenge it to a rap battle… and lose', value: 'animalMime' },\r\n  { text: 'Offer it a sandwich as a peace treaty', value: 'radioactivePhilosopher' },\r\n],\r\n},\r\n{\r\n  question: \"YOU HAVE A SMALL THUMB DRIVE FULL OF THE MOST IMPORTANT DATA FROM THE BEFORE TIMES. IT CONTAINS:\",\r\n  image: { uri: \"https://raw.github.com/dboss212121/ApocalypseQuiz/main/assets/images/data.png\" },\r\n  alt: \"Data drive\",\r\n  options: [\r\n  { text: 'Hundreds of cat photos', value: 'receiptGolem' },\r\n  { text: 'Recipes for different napalm flavors', value: 'molotovMixologist' },\r\n  { text: 'Complete gibberish', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'The script for every Jim Carrey movie', value: 'libraryCommando' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU STUMBLE UPON A MYSTERIOUS PORTAL. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/portal.png\",\r\n    alt: \"A swirling portal shimmering with unknown energy\" \r\n  },\r\n  options: [\r\n  { text: 'Step through confidently', value: 'doomDJ' },\r\n  { text: 'Set up a research tent', value: 'origamiDetective' },\r\n  { text: 'Throw a rock in first', value: 'animalMime' },\r\n  { text: 'Whisper a warning to the void', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND AN ABANDONED AMUSEMENT PARK. YOUR PLAN IS:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/park.png\",\r\n    alt: \"Rusty rides and eerie carnival lights\" \r\n  },\r\n  options: [\r\n  { text: 'Turn it into a fortress', value: 'travelAgentOfTerror' },\r\n  { text: 'Organize a scavenger hunt', value: 'libraryCommando' },\r\n  { text: 'Ride everything at full speed', value: 'hamsterWarlord' },\r\n  { text: 'Meditate in the funhouse mirrors', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER A TALKING TOASTER. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toaster.png\",\r\n    alt: \"A sentient toaster blinking like it has secrets\" \r\n  },\r\n  options: [\r\n  { text: 'Make it your tactical advisor', value: 'doomDJ' },\r\n  { text: 'Teach it to make meals for the group', value: 'marshmallowGeneral' },\r\n  { text: 'Chase it around screaming', value: 'screamerScout' },\r\n  { text: 'Ask it about the meaning of toast', value: 'skeletonBarista' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU COME ACROSS A GIANT PILE OF SOCKS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socks.png\",\r\n    alt: \"A mountain of mismatched, dusty socks\" \r\n  },\r\n  options: [\r\n  { text: 'Sort them by usefulness', value: 'receiptGolem' },\r\n  { text: 'Distribute them evenly to survivors', value: 'mutantHRManager' },\r\n  { text: 'Build a sock fort', value: 'glitterButcher' },\r\n  { text: 'Wear them all at once for enlightenment', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A MYSTERIOUS FOG ROLLS IN. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fog.png\",\r\n    alt: \"Thick fog swallowing the landscape\" \r\n  },\r\n  options: [\r\n  { text: 'Set up sentries and stay alert', value: 'fogMechanic' },\r\n  { text: 'Use it to cover a supply run', value: 'travelAgentOfTerror' },\r\n  { text: 'Run screaming into it', value: 'screamerScout' },\r\n  { text: 'Breathe deeply and commune with spirits', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A STRANGE MUSICAL INSTRUMENT. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/instrument.png\",\r\n    alt: \"An odd instrument with glowing strings\" \r\n  },\r\n  options: [\r\n  { text: 'Lead a rally with it', value: 'doomDJ' },\r\n  { text: 'Play calming tunes for the group', value: 'cyborgCellist' },\r\n  { text: 'Smash it loudly', value: 'molotovMixologist' },\r\n  { text: 'Listen for cosmic messages', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU SPOT A HOVERING DRONE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/drone.png\",\r\n    alt: \"A small drone hovering and scanning the area\" \r\n  },\r\n  options: [\r\n  { text: 'Hack it to serve your team', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Follow it to discover resources', value: 'origamiDetective' },\r\n  { text: 'Shoot it with a slingshot', value: 'animalMime' },\r\n  { text: 'Bow respectfully', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A MYSTERIOUS CHEST IN THE DESERT. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chest.png\",\r\n    alt: \"An old chest half-buried in sand\" \r\n  },\r\n  options: [\r\n  { text: 'Open it carefully and catalog contents', value: 'receiptGolem' },\r\n  { text: 'Share the loot with allies', value: 'mutantHRManager' },\r\n  { text: 'Kick it open violently', value: 'glitterButcher' },\r\n  { text: 'Whisper secrets before opening', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU ENCOUNTER A HACKER WITH STRANGE TACTICS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hacker.png\",\r\n    alt: \"A hooded figure surrounded by floating code\" \r\n  },\r\n  options: [\r\n  { text: 'Recruit them for strategy', value: 'apocalypseConspiracyTheorist' },\r\n  { text: 'Learn their techniques', value: 'origamiDetective' },\r\n  { text: 'Mess with their system', value: 'animalMime' },\r\n  { text: 'Ask cryptic questions', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU STUMBLE UPON A FLOATING ISLAND. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/floatingisland.png\",\r\n    alt: \"A small island hovering mysteriously above the ground\" \r\n  },\r\n  options: [\r\n  { text: 'Build a base atop it', value: 'neonGravedigger' },\r\n  { text: 'Explore it for resources', value: 'travelAgentOfTerror' },\r\n  { text: 'Jump off it recklessly', value: 'hamsterWarlord' },\r\n  { text: 'Meditate on its floating mystery', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A GLOWING RUBBER DUCK. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duck.png\",\r\n    alt: \"A neon rubber duck floating in a puddle\" \r\n  },\r\n  options: [\r\n  { text: 'Make it the team mascot', value: 'duckPainter' },\r\n  { text: 'Use it as a morale booster', value: 'mutantHRManager' },\r\n  { text: 'Squish it repeatedly', value: 'hamsterWarlord' },\r\n  { text: 'Ask it for stock tips', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A GIANT JELLO MONSTER APPROACHES. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/jello.png\",\r\n    alt: \"A wobbling, translucent gelatinous creature\" \r\n  },\r\n  options: [\r\n  { text: 'Negotiate a treaty', value: 'cockroachNegotiator' },\r\n  { text: 'Feed it spare snacks', value: 'marshmallowGeneral' },\r\n  { text: 'Punch it repeatedly', value: 'molotovMixologist' },\r\n  { text: 'Dance with it to the music', value: 'doomDJ' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU DISCOVER A HAT THAT GIVES STRANGE POWERS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/magichat.png\",\r\n    alt: \"A tall hat glowing with arcane energy\" \r\n  },\r\n  options: [\r\n  { text: 'Wear it and lead', value: 'neonGravedigger' },\r\n  { text: 'Use it to help friends', value: 'mutantHRManager' },\r\n  { text: 'Throw it into a fire', value: 'molotovMixologist' },\r\n  { text: 'Ask it philosophical questions', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A PILE OF MYSTICAL TOAST. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/toast.png\",\r\n    alt: \"Slices of glowing toast stacked in an odd pattern\" \r\n  },\r\n  options: [\r\n  { text: 'Distribute it fairly', value: 'receiptGolem' },\r\n  { text: 'Offer it to hungry survivors', value: 'marshmallowGeneral' },\r\n  { text: 'Eat it in one bite', value: 'gnocchiNomad' },\r\n  { text: 'Use it to predict the future', value: 'trashOracle' },\r\n  ]\r\n},\r\n{\r\n  question: \"A STRANGE TUNNEL OF STUFFED ANIMALS. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/socktunnel.png\",\r\n    alt: \"A twisting tunnel made entirely of socks\" \r\n  },\r\n  options: [\r\n  { text: 'Map it for safe passage', value: 'travelAgentOfTerror' },\r\n  { text: 'Use it to smuggle supplies', value: 'libraryCommando' },\r\n  { text: 'Roll through it screaming', value: 'screamerScout' },\r\n  { text: 'Meditate inside it', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A ROBOT BUTTERFLY. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/butterfly.png\",\r\n    alt: \"A giant frowning butterfly perched on a rock\" \r\n  },\r\n  options: [\r\n  { text: 'Make it your adviser', value: 'cyborgCellist' },\r\n  { text: 'Cheer it up with gifts', value: 'mutantHRManager' },\r\n  { text: 'Swat it angrily', value: 'animalMime' },\r\n  { text: 'Have a philosophical debate', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A FLOATING ICE CREAM CONE BEGS FOR HELP. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/icecream.png\",\r\n    alt: \"A hovering ice cream cone with pleading eyes\" \r\n  },\r\n  options: [\r\n  { text: 'Rescue it carefully', value: 'lavaLifeguard' },\r\n  { text: 'Share it with friends', value: 'marshmallowGeneral' },\r\n  { text: 'Eat it immediately', value: 'gnocchiNomad' },\r\n  { text: 'Ask it about the universe', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A MYSTICAL BROOM. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/broom.png\",\r\n    alt: \"A broom glowing faintly and hovering slightly\" \r\n  },\r\n  options: [\r\n  { text: 'Use it to lead operations', value: 'libraryCommando' },\r\n  { text: 'Clean the camp efficiently', value: 'marshmallowGeneral' },\r\n  { text: 'Swing it wildly', value: 'molotovMixologist' },\r\n  { text: 'Ask it to tell stories', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"A TALKING ROCK OFFERS YOU ADVICE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/rock.png\",\r\n    alt: \"A small rock with a mouth and tiny eyes\" \r\n  },\r\n  options: [\r\n  { text: 'Listen carefully', value: 'receiptGolem' },\r\n  { text: 'Take notes', value: 'libraryCommando' },\r\n  { text: 'Ignore it and throw it', value: 'animalMime' },\r\n  { text: 'Ask it riddles back', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"YOU FIND A GIANT SLIPPERY BANANA. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/banana.png\",\r\n    alt: \"A massive banana sliding down a hill\" \r\n  },\r\n  options: [\r\n  { text: 'Use it to create a trap', value: 'cockroachNegotiator' },\r\n  { text: 'Share it with the squad', value: 'marshmallowGeneral' },\r\n  { text: 'Slip on it dramatically', value: 'hamsterWarlord' },\r\n  { text: 'Meditate while balancing on it', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A UNICORN DEMANDS PAYMENT IN GLITTER. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/unicorn.png\",\r\n    alt: \"A unicorn glaring, its horn glowing like a credit card machine\" \r\n  },\r\n  options: [\r\n  { text: 'Offer your entire savings account of rainbows', value: 'glitterButcher' },\r\n  { text: 'Split the glitter bill with your party', value: 'mutantHRManager' },\r\n  { text: 'Eat the glitter before anyone can pay', value: 'gnocchiNomad' },\r\n  { text: 'Ask if the horn also accepts interpretive dance', value: 'duckPainter' },\r\n  ]\r\n},\r\n{ \r\n  question: \"BIGFOOT APPLIES FOR A JOB AS YOUR ROOMMATE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bigfoot.png\",\r\n    alt: \"Bigfoot holding a poorly written resume and a coffee mug\" \r\n  },\r\n  options: [\r\n  { text: 'Conduct a formal roommate interview', value: 'bureaucracyGhoul' },\r\n  { text: 'Help him polish his resume', value: 'mutantHRManager' },\r\n  { text: 'Challenge him to wrestle for the room', value: 'hamsterWarlord' },\r\n  { text: 'Ask if he has references from cryptids or clouds', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A CHUPACABRA OPENS A TACO TRUCK. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/chupacabra.png\",\r\n    alt: \"A chupacabra wearing an apron, handing out tacos suspiciously\" \r\n  },\r\n  options: [\r\n  { text: 'Help write a strict business plan', value: 'bureaucracyGhoul' },\r\n  { text: 'Pass out free samples to friends', value: 'marshmallowGeneral' },\r\n  { text: 'Bite the tacos before customers can order', value: 'gnocchiNomad' },\r\n  { text: 'Ask if the salsa is made of moonlight and goats', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"ZOMBIES INVITE YOU TO THEIR BOOK CLUB. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/zombies.png\",\r\n    alt: \"A group of zombies politely holding hardcover novels\" \r\n  },\r\n  options: [\r\n  { text: 'Lead the discussion on “Brains: A Memoir”', value: 'doomDJ' },\r\n  { text: 'Bring snacks that aren’t brains', value: 'marshmallowGeneral' },\r\n  { text: 'Eat the book before the meeting starts', value: 'animalMime' },\r\n  { text: 'Insist the only valid book is one written by worms', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A VAMPIRE WANTS TO START A PODCAST. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/vampire.png\",\r\n    alt: \"A vampire adjusting a microphone, avoiding its reflection in the pop filter\" \r\n  },\r\n  options: [\r\n  { text: 'Offer to be the co-host and manage scheduling', value: 'doomDJ' },\r\n  { text: 'Handle the editing and moral support', value: 'mutantHRManager' },\r\n  { text: 'Interrupt every episode with blood-slurping ASMR', value: 'skeletonBarista' },\r\n  { text: 'Ask if the podcast only streams at midnight', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"NESSIE EMAILS YOU A LINK TO THEIR NEW MIXTAPE. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/nessie.jpg\",\r\n    alt: \"The Loch Ness monster wearing headphones, bobbing its head to beats\" \r\n  },\r\n  options: [\r\n  { text: 'Promote the mixtape aggressively online', value: 'doomDJ' },\r\n  { text: 'Add it to a shared playlist for friends', value: 'mutantHRManager' },\r\n  { text: 'Slam-dance into the nearest lake', value: 'hamsterWarlord' },\r\n  { text: 'Ask if the beats were recorded under the moon with kelp', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"GODZILLA APPEARS WITH A CLIPBOARD AND A SURVEY. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/godzilla.png\",\r\n    alt: \"Godzilla politely adjusting glasses while holding a clipboard\" \r\n  },\r\n  options: [\r\n  { text: 'Lead the survey as if you are the mayor of ruins', value: 'bureaucracyGhoul' },\r\n  { text: 'Help tally up skyscraper satisfaction scores', value: 'receiptGolem' },\r\n  { text: 'Eat the clipboard before any questions are asked', value: 'animalMime' },\r\n  { text: 'Ask if destruction counts as “strongly agree” or “neutral”', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"A TRIBE OF TALKING CHEESE DEMANDS REPRESENTATION. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cheese.png\",\r\n    alt: \"A group of cheddar and brie wearing ceremonial robes, chanting\" \r\n  },\r\n  options: [\r\n  { text: 'Organize their cheese council with parliamentary rules', value: 'bureaucracyGhoul' },\r\n  { text: 'Translate their dairy hymns for outsiders', value: 'mutantHRManager' },\r\n  { text: 'Gnaw on the elders during negotiations', value: 'gnocchiNomad' },\r\n  { text: 'Ask if lactose intolerance is considered heresy', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{ \r\n  question: \"IN A CEMETERY, A GHOST OFFERS YOU A BROKEN LAWN CHAIR. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/ghost.png\",\r\n    alt: \"A translucent ghost politely holding out a cracked lawn chair among gravestones\" \r\n  },\r\n  options: [\r\n  { text: 'Sit with solemn dignity and declare yourself king of the graveyard', value: 'neonGravedigger' },\r\n  { text: 'Invite the ghost to sit while you applaud respectfully', value: 'mutantHRManager' },\r\n  { text: 'Break the chair further and start a midnight wrestling match with shadows', value: 'hamsterWarlord' },\r\n  { text: 'Ask the chair if it remembers its tree-life before death', value: 'radioactivePhilosopher' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE DESERT, YOU FIND A TREASURE CHEST HALF-BURIED IN DUNES. IT HUMS A COUNTRY SONG. YOU:\",\r\n  image: { \r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/treasure.png\",\r\n    alt: \"A weathered treasure chest jutting from golden sand under a blazing sun, faint musical notes rising from it\" \r\n  },\r\n  options: [\r\n  { text: 'Climb atop it and proclaim yourself Sheriff of Sand Dollars', value: 'travelAgentOfTerror' },\r\n  { text: 'Fan the chest with palm fronds and whisper “you’re doing great, buddy”', value: 'marshmallowGeneral' },\r\n  { text: 'Punch the dunes until a scorpion agrees to fight in your honor', value: 'animalMime' },\r\n  { text: 'Ask the chest whether it prefers tumbleweeds or tax audits', value: 'apocalypseConspiracyTheorist' },\r\n  ]\r\n},\r\n{\r\n  question: \"IN THE RUINS OF A FORMER LASER TAG ARENA, YOU FIND A BOMB DISGUISED AS A VENDING MACHINE. IT WHISPERS YOUR CHILDHOOD NICKNAME. YOU:\",\r\n  image: {\r\n    uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/defuse.png\",\r\n    alt: \"A dusty vending machine with exposed wires and blinking lights, surrounded by cracked neon walls and scorched arcade carpet\"\r\n  },\r\n  options: [\r\n    { text: \"Insert a coupon for ‘One Free Existential Crisis’ and wait for it to vend enlightenment\", \"value\": \"couponSaboteur\" },\r\n    { text: \"Challenge the bomb to a staring contest and lose dramatically\", \"value\": \"eyeballDiplomat\" },\r\n    { text: \"Recite the alphabet backwards while juggling expired batteries\", \"value\": \"entropyEntertainer\" },\r\n    { text: \"Offer it a friendship bracelet made of spaghetti and hope for detente\", \"value\": \"noodleNegotiator\" }\r\n  ]\r\n}\r\n\r\n  // Add more questions in same format...\r\n];\r\nconst roles = {\r\n  trashOracle: {\r\n    description: 'Trash Oracle - Reads the future in garbage. Mysterious and oddly accurate.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/Oracle.png\" },\r\n  },\r\n  mutantHRManager: {\r\n    description: 'Mutant HR Manager - Resolves conflict with tasers and empathy.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/MutantHR.png\" },\r\n  },\r\n  screamerScout: {\r\n    description: 'Screamer Scout - Screams first, thinks later. Often right.',\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/dancer.png\" },\r\n  },\r\n  bureaucracyGhoul: {\r\n    description: \"Bureaucracy Ghoul - Feeds on paperwork and thrives in long lines. Stamps documents with sinister precision.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/bureaucracyGhoul.png\" },\r\n  },\r\n  kaleChampion: {\r\n    description: \"Kale Champion - Armored in leafy resilience. Bitter, righteous, and impossible to wilt.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/kaleChampion.png\" },\r\n  },\r\n  fogMechanic: {\r\n    description: \"Fog Mechanic - Fixes broken mists and tunes eerie atmospheres. Works only at dawn.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/fogMechanic.png\" },\r\n  },\r\n  skeletonBarista: {\r\n    description: \"Skeleton Barista - Serves bone-dry lattes. Milk froth screams faintly.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/skeletonBarista.png\" },\r\n  },\r\n  neonGravedigger: {\r\n    description: \"Neon Gravedigger - Digs glowing graves that double as nightclubs. Morbid, yet festive.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/neonGravedigger.png\" },\r\n  },\r\n  hamsterWarlord: {\r\n    description: \"Hamster Warlord - Commands an army of squeaky, wheel loving rodents. Tiny, fluffy, unstoppable.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/hamsterWarlord.png\" },\r\n  },\r\n  balloonNecromancer: {\r\n    description: \"Balloon Necromancer – Summons the dead with squeaky inflatables and helium whispers.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/balloonNecromancer.png\" },\r\n  },\r\n  cockroachNegotiator: {\r\n    description: \"Cockroach Negotiator – Brokers peace treaties with indestructible insects over crumbs of power.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cockroachNegotiator.png\" },\r\n  },\r\n  cyborgCellist: {\r\n    description: \"Cyborg Cellist – Performs haunting symphonies on titanium strings while sparks fly from the bow.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/cyborgCellist.png\" },\r\n  },\r\n  libraryCommando: {\r\n    description: \"Library Commando – Shushes enemies with militant silence and overdue-book fines.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/libraryCommando.png\" },\r\n  },\r\n  doomDJ: {\r\n    description: \"Doom DJ – Spins tracks that summon thunder, collapse buildings, and start dance-offs with the void.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/doomDJ.png\" },\r\n  },\r\n  duckPainter: {\r\n    description: \"Duck Painter – Covers the wasteland in murals of ducks that seem to stare back a little too knowingly.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/duckPainter.png\" },\r\n  },\r\n  glitterButcher: {\r\n    description: \"Glitter Butcher – Leaves every battlefield sparkling, fabulous, and disturbingly sticky.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/glitterButcher.png\" },\r\n  },\r\n  gnocchiNomad: {\r\n    description: \"Gnocchi Nomad – Wanders deserts with pockets full of potato pasta, feeding the hungry and confusing the rest.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/gnocchiNomad.png\" },\r\n  },\r\n  lavaLifeguard: {\r\n    description: \"Lava Lifeguard – Blows a whistle at volcanoes and dives into magma to save screaming skeletons.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/lavaLifeguard.png\" },\r\n  },\r\n  marshmallowGeneral: {\r\n    description: \"Marshmallow General – Commands gooey troops that roast enemies alive, slowly and deliciously.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/marshmallowGeneral.png\" },\r\n  },\r\n  animalMime: {\r\n    description: \"Animal Mime – Mimics beasts so convincingly that predators applaud, then eat the audience.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/animalMime.png\" },\r\n  },\r\n  molotovMixologist: {\r\n    description: \"Molotov Mixologist – Crafts cocktails that light up the night, garnished with chaos and a twist of lime.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/molotovMixologist.png\" },\r\n  },\r\n  origamiDetective: {\r\n    description: \"Origami Detective – Folds clues into cranes, swans, and confessions that solve themselves.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/origamiDetective.png\" },\r\n  },\r\n  radioactivePhilosopher: {\r\n    description: \"Radioactive Philosopher – Glows in the dark while pondering whether fallout has meaning.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/radioactivePhilosopher.png\" },\r\n  },\r\n  receiptGolem: {\r\n    description: \"Receipt Golem – Born from endless shopping slips, remembers every purchase, judges all of them.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/receiptGolem.png\" },\r\n  },\r\n  squirrelTamer: {\r\n    description: \"Squirrel Tamer – Bends armies of twitchy rodents to their will with acorn diplomacy.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/squirrelTamer.png\" },\r\n  },\r\n  apocalypseConspiracyTheorist: {\r\n    description: \"Apocalypse Conspiracy Theorist – Knew it all along, explains it with 48 corkboards and zero evidence.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/apocalypseConspiracyTheorist.png\" },\r\n  },\r\n  yodelMechanic: {\r\n    description: \"Yodel Mechanic – Fixes broken engines by singing so loud pistons weep oil in gratitude.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/yodelMechanic.png\" },\r\n  },\r\n  travelAgentOfTerror: {\r\n    description: \"Travel Agent of Terror – Books scenic vacations to sinkholes, haunted malls, and endless bureaucracy lines.\",\r\n    image: { uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/travelAgentOfTerror.png\" },\r\n  },\r\n\r\n};\r\n\r\n// =======================\r\n// MAIN APP COMPONENT\r\n// =======================\r\nexport default function App() {\r\n  const [isTitleVisible, setIsTitleVisible] = useState(true); // <-- NEW\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n  const [mode, setMode] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [quizQuestions, setQuizQuestions] = useState([]);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [exitWarningVisible, setExitWarningVisible] = useState(false);\r\n  const scrollY = useRef(new Animated.Value(400)).current; // start lower\r\n  const [quizSound, setQuizSound] = useState(null);\r\n  const [creditsSound, setCreditsSound] = useState(null);\r\n  const [titleSound, setTitleSound] = useState(null); // title/menu music\r\n  const [secretSound, setSecretSound] = useState(null);\r\n  const [secretResultSound, setSecretResultSound] = useState(null);\r\n  const [contentHeight, setContentHeight] = useState(0);\r\n  const [secretClicks, setSecretClicks] = useState(0);\r\n  const [secretUnlocked, setSecretUnlocked] = useState(false);\r\n  const [secretBoxTaps, setSecretBoxTaps] = useState([false, false, false, false]);\r\n  const [secretStage, setSecretStage] = useState(1); // 1 = first page, 2 = second page\r\n  const [isMuted, setIsMuted] = useState(false);\r\n\r\nconst previousModeRef = useRef(null);\r\n\r\nuseEffect(() => {\r\n  if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\r\n    previousModeRef.current = mode; // store last quiz mode\r\n  }\r\n}, [mode]);\r\n\r\n  // --- music pause/resume on mute ---\r\nconst toggleMute = async () => {\r\n  const newMuted = !isMuted; // compute new state\r\n  setIsMuted(newMuted);\r\n\r\n  const allSounds = [titleSound, quizSound, creditsSound];\r\n  for (let s of allSounds) {\r\n    if (!s) continue;\r\n\r\n    const status = await s.getStatusAsync();\r\n    if (!status.isLoaded) continue;\r\n\r\n    if (newMuted) {\r\n      // pause if muted\r\n      if (status.isPlaying) await s.pauseAsync();\r\n    } else {\r\n      // resume if unmuted\r\n      if (!status.isPlaying) await s.playAsync();\r\n    }\r\n  }\r\n};\r\n\r\n  // --- universal mute button ---\r\nconst MuteButton = () => (\r\n  <TouchableOpacity\r\n    onPress={toggleMute}\r\n    style={{\r\n      position: \"absolute\",\r\n      bottom: 20,\r\n      left: 20,\r\n      width: 60,\r\n      height: 50,\r\n      zIndex: 1000,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    {/* Retro speaker triangle pointing left */}\r\n    <View style={{\r\n      width: 0,\r\n      height: 0,\r\n      borderTopWidth: 12,\r\n      borderBottomWidth: 12,\r\n      borderRightWidth: 20,\r\n      borderTopColor: \"transparent\",\r\n      borderBottomColor: \"transparent\",\r\n      borderRightColor: \"#00FF00\",\r\n      position: \"absolute\",\r\n      left: 10,\r\n    }} />\r\n\r\n    {/* Sound waves (centered vertically on triangle, with slight gap) */}\r\n    {!isMuted && (\r\n      <>\r\n        <View style={{\r\n          width: 2,\r\n          height: 6,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 34,\r\n          top: 22, // shifted down\r\n        }} />\r\n        <View style={{\r\n          width: 2,\r\n          height: 10,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 40,\r\n          top: 20,\r\n        }} />\r\n        <View style={{\r\n          width: 2,\r\n          height: 14,\r\n          backgroundColor: \"#00FF00\",\r\n          position: \"absolute\",\r\n          left: 46,\r\n          top: 18,\r\n        }} />\r\n      </>\r\n    )}\r\n\r\n    {/* Two red lines forming an X when muted */}\r\n    {isMuted && (\r\n      <>\r\n        <View style={{\r\n          width: 35,\r\n          height: 2,\r\n          backgroundColor: \"#FF0000\",\r\n          position: \"absolute\",\r\n          transform: [{ rotate: \"45deg\" }],\r\n        }} />\r\n        <View style={{\r\n          width: 35,\r\n          height: 2,\r\n          backgroundColor: \"#FF0000\",\r\n          position: \"absolute\",\r\n          transform: [{ rotate: \"-45deg\" }],\r\n        }} />\r\n      </>\r\n    )}\r\n  </TouchableOpacity>\r\n);\r\n\r\n\r\n\r\n// =======================\r\n// SECRET PROGRESS BAR COMPONENT\r\n// =======================\r\nconst SecretProgressBar = ({ currentSecretIndex, onComplete }) => {\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const handlePress = () => {\r\n    // Only clickable on the 3rd secret question (index 2)\r\n    if (currentSecretIndex !== 2) return;\r\n    if (progress < 5) {\r\n      const newProgress = progress + 1;\r\n      setProgress(newProgress);\r\n      if (newProgress === 5) {\r\n        onComplete(); // trigger secret win\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={currentSecretIndex === 2 ? 0.8 : 1}\r\n      onPress={handlePress}\r\n      style={styles.secretProgressContainer}\r\n    >\r\n      <View style={styles.secretProgressBackground}>\r\n        <View style={[styles.secretProgressFill, { flex: progress }]} />\r\n        <View style={{ flex: 5 - progress }} />\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\n\r\nconst confirmQuit = () => {\r\n  setExitWarningVisible(true);\r\n};\r\n\r\n// play title/menu music\r\nasync function playTitleMusic() {\r\n  if (titleSound) {\r\n    // Already exists, just resume if paused\r\n    const status = await titleSound.getStatusAsync();\r\n    if (!status.isPlaying) {\r\n      await titleSound.playAsync();\r\n    }\r\n    return;\r\n  }\r\n\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLPR.mp3'),\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setTitleSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// helper: play quiz music\r\nasync function playQuizMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/LPME.mp3'),\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setQuizSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// helper: play credits music\r\nasync function playCreditsMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLCKMD.mp3'), // 👈 add your credits song here\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setCreditsSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\nasync function playSecretMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require(\"./assets/music/TLTV.mp3\"), // replace with your actual file\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setSecretSound(sound);\r\n  await sound.playAsync();\r\n}\r\n// helper: play secret result music\r\nasync function playSecretResultMusic() {\r\n  const { sound } = await Audio.Sound.createAsync(\r\n    require('./assets/music/TLA.mp3'), // 👈 put your file in /assets/music\r\n    { isLooping: true, shouldPlay: true }\r\n  );\r\n  setSecretResultSound(sound);\r\n  await sound.playAsync();\r\n}\r\n\r\n// clean up function\r\nasync function stopAllMusic() {\r\n  if (titleSound) {\r\n    await titleSound.stopAsync();\r\n    await titleSound.unloadAsync();\r\n    setTitleSound(null);\r\n  }\r\n  if (quizSound) {\r\n    await quizSound.stopAsync();\r\n    await quizSound.unloadAsync();\r\n    setQuizSound(null);\r\n  }\r\n  if (creditsSound) {\r\n    await creditsSound.stopAsync();\r\n    await creditsSound.unloadAsync();\r\n    setCreditsSound(null);\r\n  }\r\n  if (secretSound) {\r\n    await secretSound.stopAsync();\r\n    await secretSound.unloadAsync();\r\n    setSecretSound(null);\r\n  }\r\n  if (secretResultSound) {\r\n    await secretResultSound.stopAsync();\r\n    await secretResultSound.unloadAsync();\r\n    setSecretResultSound(null);\r\n  }\r\n}\r\n\r\n// music control effect\r\nuseEffect(() => {\r\n  let isMounted = true;\r\n\r\n  const handleMusic = async () => {\r\n    if (!isMounted) return;\r\n\r\n    // Decide what music should play\r\n    let desiredTrack = null;\r\n    if (mode === \"basic\" || mode === \"advanced\" || mode === \"full\") {\r\n      desiredTrack = \"quiz\";\r\n    } else if (mode === \"credits\") {\r\n      desiredTrack = \"credits\";\r\n    } else if (mode === \"secret\" && secretStage < 4) {\r\n      desiredTrack = \"secret\"; // secret levels 1–3\r\n    } else if (mode === \"secret\" && secretStage === 4) {\r\n      desiredTrack = \"secretResult\"; // secret result\r\n    } else if (mode === null) {\r\n      desiredTrack = \"title\";\r\n    }\r\n\r\n    // Stop anything that is playing but isn’t desired\r\n    if (desiredTrack !== \"title\" && titleSound) {\r\n      await titleSound.stopAsync();\r\n      await titleSound.unloadAsync();\r\n      setTitleSound(null);\r\n    }\r\n    if (desiredTrack !== \"quiz\" && quizSound) {\r\n      await quizSound.stopAsync();\r\n      await quizSound.unloadAsync();\r\n      setQuizSound(null);\r\n    }\r\n    if (desiredTrack !== \"credits\" && creditsSound) {\r\n      await creditsSound.stopAsync();\r\n      await creditsSound.unloadAsync();\r\n      setCreditsSound(null);\r\n    }\r\n    if (desiredTrack !== \"secret\" && secretSound) {\r\n      await secretSound.stopAsync();\r\n      await secretSound.unloadAsync();\r\n      setSecretSound(null);\r\n    }\r\n    if (desiredTrack !== \"secretResult\" && secretResultSound) {\r\n      await secretResultSound.stopAsync();\r\n      await secretResultSound.unloadAsync();\r\n      setSecretResultSound(null);\r\n    }\r\n\r\n    // Start the desired track if not muted\r\n    if (isMuted) return; // <--- skip starting music if muted\r\n\r\n    if (desiredTrack === \"title\" && !titleSound) await playTitleMusic();\r\n    else if (desiredTrack === \"quiz\" && !quizSound) await playQuizMusic();\r\n    else if (desiredTrack === \"credits\" && !creditsSound) await playCreditsMusic();\r\n    else if (desiredTrack === \"secret\" && !secretSound) await playSecretMusic();\r\n    else if (desiredTrack === \"secretResult\" && !secretResultSound) await playSecretResultMusic();\r\n  };\r\n\r\n  handleMusic();\r\n\r\n  return () => {\r\n    isMounted = false;\r\n  };\r\n}, [mode, isMuted, secretStage]);\r\n\r\n// Credit Effects\r\nuseEffect(() => {\r\n  if (mode === \"credits\" && contentHeight > 0) {\r\n    const screenHeight = Dimensions.get(\"window\").height;\r\n\r\n    // Start just below the bottom edge\r\n    scrollY.setValue(screenHeight - contentHeight);\r\n\r\n    // total distance to travel (from bottom of screen to fully off top)\r\n    const distance = contentHeight + screenHeight;\r\n\r\n    // desired speed in pixels per second\r\n    const speed = 50; // 👈 adjust this value to make it faster/slower\r\n\r\n    // duration in ms = distance / speed * 1000\r\n    const duration = (distance / speed) * 1000;\r\n\r\n    Animated.timing(scrollY, {\r\n      toValue: -contentHeight,\r\n      duration: duration,\r\n      easing: Easing.linear,\r\n      useNativeDriver: true,\r\n    }).start();\r\n  }\r\n}, [mode, contentHeight]);\r\n\r\n  useEffect(() => {\r\n    if (mode) {\r\n      let num = mode === 'basic' ? 10 : mode === 'advanced' ? 20 : 30;\r\n      setQuizQuestions(getRandomQuestions(num));\r\n    }\r\n  }, [mode]);\r\n\r\nconst getRandomQuestions = (num) => {\r\n  const copy = [...allQuestions];\r\n\r\n  // Fisher–Yates shuffle\r\n  for (let i = copy.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [copy[i], copy[j]] = [copy[j], copy[i]];\r\n  }\r\n\r\n  // Only take as many as needed\r\n  return copy.slice(0, num);\r\n};\r\n\r\n  const handleAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  const restartQuiz = () => {\r\n    setCurrentQuestion(0);\r\n    setAnswers([]);\r\n    setMode(null);\r\n    setShowResult(false);\r\n  };\r\n\r\n  const calculateResult = () => {\r\n    const tally = {};\r\n    answers.forEach(val => {\r\n      tally[val] = (tally[val] || 0) + 1;\r\n    });\r\n    return Object.entries(tally).sort((a, b) => b[1] - a[1])[0][0];\r\n  };\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading startAsync={getFonts} onFinish={() => setFontsLoaded(true)} onError={console.warn} />;\r\n  }\r\n\r\n  // ===== Title Screen before anything =====\r\n  if (isTitleVisible) {\r\n    return <TitleScreen onStart={() => setIsTitleVisible(false)} />;\r\n  }\r\n\r\nif (mode === \"credits\") {\r\n  return (\r\n    <ScrollView contentContainerStyle={[styles.fullScreenContainer, { position: 'relative' }]}>\r\n      {/* Header */}\r\n      <View style={styles.headerWrapper}>\r\n        <Text style={styles.header}>CREDITS</Text>\r\n      </View>\r\n\r\n      {/* Animated Credits Block */}\r\n      <View style={styles.creditsContainer}>\r\n        <Animated.View style={{ transform: [{ translateY: scrollY }] }}>\r\n          <View\r\n            onLayout={(e) => setContentHeight(e.nativeEvent.layout.height)}\r\n            style={styles.creditsInner}\r\n          >\r\n            <Text style={styles.creditsText}>\r\n              {\"Developed by: You\\n\\nArt: Your Team\\n\\nSpecial Thanks: Players like you\\n\\nAnd anyone else you want to list...\"}\r\n            </Text>\r\n          </View>\r\n        </Animated.View>\r\n      </View>\r\n\r\n      {/* Back Button */}\r\n      <TouchableOpacity style={styles.button} onPress={() => setMode(null)}>\r\n        <Text style={styles.buttonText}>Back</Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* Mute Button */}\r\n      <MuteButton />\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n  // ===== Mode Selection =====\r\n  if (!mode) {\r\n    return (\r\n      <View style={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>CHOOSE YOUR APOCALYPSE QUIZ MODE</Text>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('basic')}><Text style={styles.buttonText}>BASIC (10 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('advanced')}><Text style={styles.buttonText}>ADVANCED (20 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('full')}><Text style={styles.buttonText}>FULL EVALUATION (30 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.creditsButton} onPress={() => setMode(\"credits\")}><Text style={styles.buttonText}>Credits</Text></TouchableOpacity>\r\n\r\n    {/* --- Universal Mute Button --- */}\r\n    <MuteButton />\r\n\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ===== Results Screen =====\r\n  if (showResult) {\r\n    const role = calculateResult();\r\n    return (\r\n      <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>YOUR APOCALYPSE CAREER IS:</Text>\r\n        <Image source={roles[role].image} style={styles.image} />\r\n        <Text style={styles.resultText}>{roles[role].description}</Text>\r\n        <TouchableOpacity style={styles.button} onPress={restartQuiz}><Text style={styles.buttonText}>HOME</Text></TouchableOpacity>\r\n      </ScrollView>\r\n    );\r\n  }\r\n  \r\n// ===== Secret Screen (Stage 1) =====\r\nif (mode === \"secret\" && secretStage === 1) {\r\n  const handleBoxPress = (index) => {\r\n    const next = [...secretBoxTaps];\r\n    next[index] = true;\r\n    setSecretBoxTaps(next);\r\n    if (next.every(Boolean)) setSecretStage(2);\r\n  };\r\n\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  // Instead of returning here, render inside main component JSX\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"THE AIR GOES QUIET. WHAT DO YOU DO?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/thedoor.png\" }}\r\n        style={styles.image}\r\n      />\r\n      {[\r\n        { text: \"Hold your breath and wait\", value: \"doomDJ\" },\r\n        { text: \"Signal your crew to regroup\", value: \"mutantHRManager\" },\r\n        { text: \"Sprint toward the sound\", value: \"screamerScout\" },\r\n        { text: \"Hum back at the horizon\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Invisible corner “decor” boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <TouchableOpacity\r\n            key={i}\r\n            onPress={() => handleBoxPress(i)}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n              secretBoxTaps[i] && styles.cornerBoxActive,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* SECRET PROGRESS BAR (static in Stage 1) */}\r\n      <SecretProgressBar currentSecretIndex={-1} onComplete={() => {}} />\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => setMode(previousModeRef.current)}\r\n      >\r\n        <Text style={styles.buttonText}>QUIT</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 2) =====\r\nif (mode === \"secret\" && secretStage === 2) {\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"THE HORIZON SHIFTS. WHAT'S YOUR MOVE?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/secretroom.png\" }}\r\n        style={styles.image}\r\n      />\r\n\r\n      {[\r\n        { text: \"Step cautiously forward\", value: \"doomDJ\" },\r\n        { text: \"Observe silently\", value: \"mutantHRManager\" },\r\n        { text: \"Run toward the light\", value: \"screamerScout\" },\r\n        { text: \"Call out a strange sound\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Corner aesthetic boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <View\r\n            key={i}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* Secret progress bar (static) */}\r\n      <SecretProgressBar currentSecretIndex={-1} onComplete={() => {}} />\r\n\r\n      {/* \"Leave\" button advances to secretStage 3 */}\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => setSecretStage(3)}\r\n      >\r\n        <Text style={styles.buttonText}>Leave</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 3) =====\r\nif (mode === \"secret\" && secretStage === 3) {\r\n  const handleSecretAnswer = (value) => {\r\n    const newAnswers = [...answers, value];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion + 1 < quizQuestions.length) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n      setMode(previousModeRef.current);\r\n    } else {\r\n      setShowResult(true);\r\n      setMode(previousModeRef.current);\r\n    }\r\n  };\r\n\r\n  const handleProgressComplete = () => {\r\n    // Show secret final results page\r\n    setSecretStage(4); // stage 4 = secret results page\r\n  };\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"A STRANGE ENERGY SURROUNDS YOU. WHAT DO YOU DO?\"}</Text>\r\n      <Image\r\n        source={{ uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/agents.png\" }}\r\n        style={styles.image}\r\n      />\r\n\r\n      {[\r\n        { text: \"Step boldly forward\", value: \"doomDJ\" },\r\n        { text: \"Wait and watch\", value: \"mutantHRManager\" },\r\n        { text: \"Leap toward the source\", value: \"screamerScout\" },\r\n        { text: \"Whisper a strange chant\", value: \"trashOracle\" },\r\n      ].map((opt, i) => (\r\n        <TouchableOpacity\r\n          key={i}\r\n          style={styles.button}\r\n          onPress={() => handleSecretAnswer(opt.value)}\r\n        >\r\n          <Text style={styles.buttonText}>{opt.text}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      {/* Corner aesthetic boxes */}\r\n      <View pointerEvents=\"box-none\" style={styles.secretOverlay}>\r\n        {[0, 1, 2, 3].map((i) => (\r\n          <TouchableOpacity\r\n            key={i}\r\n            onPress={() => {}}\r\n            style={[\r\n              styles.cornerBox,\r\n              i === 0 && styles.tl,\r\n              i === 1 && styles.tr,\r\n              i === 2 && styles.bl,\r\n              i === 3 && styles.br,\r\n            ]}\r\n          />\r\n        ))}\r\n      </View>\r\n\r\n      {/* Secret progress bar (interactive) */}\r\n      <SecretProgressBar currentSecretIndex={2} onComplete={handleProgressComplete} />\r\n\r\n      {/* Normal \"Quit\" button */}\r\n      <TouchableOpacity style={styles.button} onPress={() => setMode(previousModeRef.current)}>\r\n        <Text style={styles.buttonText}>Quit</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n// ===== Secret Screen (Stage 4 - Final Results) =====\r\nif (mode === \"secret\" && secretStage === 4) {\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n      <Text style={styles.header}>{\"🏆 YOU BEAT MY APP 🏆\"}</Text>\r\n      <Image\r\n        source={{\r\n          uri: \"https://raw.githubusercontent.com/dboss212121/ApocalypseQuiz/main/assets/images/utopia.png\",\r\n        }}\r\n        style={styles.image}\r\n      />\r\n      <Text style={styles.creditsText}>\r\n        {\"Against all odds, you found the hidden path and conquered it.\"}\r\n      </Text>\r\n\r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={() => {\r\n          setMode(null);    // back to mode select\r\n          setSecretStage(1);    // reset secret stages\r\n          setSecretBoxTaps([false, false, false, false]);\r\n          setSecretProgress(0); // reset progress bar\r\n          setCurrentQuestion(0);\r\n          setAnswers([]);\r\n          setShowResult(false);\r\n          setProgress(0);\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>BACK TO QUIZ</Text>\r\n      </TouchableOpacity>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\n  // ===== Mode Selection =====\r\n  if (!mode) {\r\n    return (\r\n      <View style={styles.fullScreenContainer}>\r\n        <Text style={styles.header}>CHOOSE YOUR APOCALYPSE QUIZ MODE</Text>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('basic')}><Text style={styles.buttonText}>BASIC (10 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('advanced')}><Text style={styles.buttonText}>ADVANCED (20 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.button} onPress={() => setMode('full')}><Text style={styles.buttonText}>FULL EVALUATION (30 Qs)</Text></TouchableOpacity>\r\n        <TouchableOpacity style={styles.creditsButton} onPress={() => setMode(\"credits\")}><Text style={styles.buttonText}>Credits</Text></TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  // ===== Quiz Screen =====\r\n  const q = quizQuestions[currentQuestion] ?? {};\r\n  const progress = Math.round(((currentQuestion) / quizQuestions.length) * 100);\r\n\r\nreturn (\r\n  <ScrollView contentContainerStyle={styles.fullScreenContainer}>\r\n    <Text style={styles.header}>{q.question}</Text>\r\n{q.image && (\r\n  <TouchableOpacity\r\n    onPress={() => {\r\n      const newCount = secretClicks + 1;\r\n      setSecretClicks(newCount);\r\n\r\n      if (newCount >= 5) {\r\n        setSecretUnlocked(true);\r\n        setMode(\"secret\"); // 👈 trigger secret mode\r\n        setSecretClicks(0); // optional reset\r\n      }\r\n    }}\r\n  >\r\n    <Image \r\n      source={{ uri: q.image.uri }} \r\n      style={styles.image} \r\n    />  \r\n    </TouchableOpacity>\r\n)}\r\n    {q.options && q.options.map((opt, index) => (\r\n      <TouchableOpacity key={index} style={styles.button} onPress={() => handleAnswer(opt.value)}>\r\n        <Text style={styles.buttonText}>{opt.text}</Text>\r\n      </TouchableOpacity>\r\n    ))}\r\n\r\n    <View style={styles.progressContainer}>\r\n      <View style={[styles.progressBar, { width: `${progress}%` }]}></View>\r\n    </View>\r\n\r\n    {!showResult && (\r\n      <TouchableOpacity style={styles.button} onPress={() => setExitWarningVisible(true)}>\r\n        <Text style={styles.buttonText}>QUIT</Text>\r\n      </TouchableOpacity>\r\n    )}\r\n\r\n    {/* Exit Warning Modal */}\r\n    <Modal\r\n      transparent={true}\r\n      visible={exitWarningVisible}\r\n      animationType=\"fade\"\r\n      onRequestClose={() => setExitWarningVisible(false)}\r\n    >\r\n      <View style={styles.modalOverlay}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.buttonText}>ARE YOU SURE YOU WANT TO QUIT AND LOSE ALL PROGRESS?</Text>\r\n          <TouchableOpacity style={styles.button} onPress={() => setExitWarningVisible(false)}>\r\n            <Text style={styles.buttonText}>CANCEL</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={() => {\r\n            setExitWarningVisible(false);\r\n            setCurrentQuestion(0);\r\n            setAnswers([]);\r\n            setQuizQuestions([]);\r\n            setShowResult(false);\r\n            setMode(null);\r\n          }}>\r\n            <Text style={styles.buttonText}>YES, QUIT</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n\r\n        {/* --- Universal Mute Button --- */}\r\n    <MuteButton />\r\n\r\n  </ScrollView>\r\n);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  fullScreenContainer: {\r\n    flexGrow: 1,\r\n    minHeight: Dimensions.get('window').height,\r\n    backgroundColor: '#000',\r\n    paddingTop: 60,\r\n    paddingHorizontal: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start', // 👈 prevents layout stretch\r\n    width: '100%',\r\n    maxWidth: 600,\r\n    marginHorizontal: 'auto',\r\n    position: 'relative',\r\n  },\r\n  header: {\r\n    fontSize: 20,\r\n    lineHeight: 28,\r\n    textAlign: 'center',\r\n    color: '#00ff00',\r\n    marginBottom: 16,\r\n    paddingHorizontal: 12,\r\n    width: '100%',\r\n    maxWidth: 500,\r\n    alignSelf: 'center',\r\n    flexShrink: 1,\r\n  },\r\n  button: {\r\n    backgroundColor: '#000',\r\n    borderColor: '#00ff00',\r\n    borderWidth: 2,\r\n    padding: 12,\r\n    marginTop: 16,\r\n    width: '80%',\r\n  },\r\n  buttonText: {\r\n    color: '#00ff00',\r\n    fontFamily: 'press-start',\r\n    fontSize: 10,\r\n    textAlign: 'center',\r\n  },\r\n  resultText: {\r\n    color: '#0ff',\r\n    fontSize: 12,\r\n    fontFamily: 'press-start',\r\n    textAlign: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  progressContainer: {\r\n    width: '80%',\r\n    height: 12,\r\n    backgroundColor: '#333',\r\n    borderColor: '#00ff00',\r\n    borderWidth: 2,\r\n    marginTop: 16,\r\n  },\r\n  progressBar: {\r\n    height: '100%',\r\n    backgroundColor: '#00ff00',\r\n  },\r\n  image: {\r\n  width: 200,\r\n  height: 200,\r\n  resizeMode: 'contain',\r\n  marginBottom: 16,\r\n  borderColor: '#00eeff',\r\n  borderWidth: 2,\r\n},\r\ncontainer: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 32,\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  subtitle: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 16,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  tap: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 14,\r\n    color: 'lime',\r\n    marginTop: 50,\r\n    textAlign: 'center',\r\n  },\r\n  titelHeader: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 24,\r\n    color: 'lime',\r\n  },\r\n  titleScreenContainer: {\r\n    flex: 1,\r\n    backgroundColor: '#000',        // black background\r\n    alignItems: 'center',\r\n    justifyContent: 'center',       // centers content vertically and horizontally\r\n    paddingHorizontal: 20,\r\n  },\r\n  titleText: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 28,                   // big text\r\n    color: '#00ff00',               // neon green\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  subtitleText: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 14,\r\n    color: '#00ff00',\r\n    textAlign: 'center',\r\n    marginBottom: 40,\r\n  },\r\n  tapToStart: {\r\n    fontFamily: 'press-start',\r\n    fontSize: 12,\r\n    color: '#00ff00',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  modalOverlay: {\r\n  flex: 1,\r\n  backgroundColor: \"rgba(0,0,0,0.7)\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n},\r\nmodalContent: {\r\n  backgroundColor: \"#222\",\r\n  padding: 20,\r\n  borderRadius: 10,\r\n  width: \"80%\",\r\n  alignItems: \"center\",\r\n},\r\nmodalText: {\r\n  color: \"#fff\",\r\n  fontSize: 18,\r\n  marginBottom: 20,\r\n  textAlign: \"center\",\r\n},\r\nscrollContainer: {\r\n  padding: 20,\r\n  alignItems: \"center\",\r\n},\r\ncreditItem: {\r\n  fontSize: 16,\r\n  color: \"white\",\r\n  marginBottom: 10,\r\n  textAlign: \"center\",\r\n},\r\ncreditsButton: {\r\n  position: \"absolute\",\r\n  bottom: 20,\r\n  right: 20,\r\n  paddingVertical: 8,\r\n  paddingHorizontal: 14,\r\n  backgroundColor: \"#333\", // dark background\r\n  borderRadius: 8,\r\n},\r\ncreditsText: {\r\n  fontSize: 20,\r\n  color: '#00FF00', // 👈 neon green like your buttons\r\n  textAlign: 'center',\r\n  lineHeight: 28,\r\n    fontFamily: 'press-start',\r\n},\r\n\r\nsecretOverlay: {\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  maxWidth: '100%',\r\n  maxHeight: '100%',\r\n  zIndex: 10,\r\n},\r\n\r\ncornerBox: {\r\n  position: \"absolute\",\r\n  width: 26,\r\n  height: 26,\r\n  borderWidth: 2,\r\n  borderColor: \"#00ff00\",\r\n  borderRadius: 6,\r\n  backgroundColor: \"transparent\",   // looks like UI chrome\r\n  opacity: 0.65,                     // subtle so it feels decorative\r\n},\r\n\r\ncornerBoxActive: {\r\n  opacity: 1,\r\n  backgroundColor: \"rgba(0,255,0,0.12)\", // tiny feedback when tapped\r\n},\r\n\r\ntl: { top: 12, left: 12 },\r\ntr: { top: 12, right: 12 },\r\nbl: { bottom: 12, left: 12 },\r\nbr: { bottom: 12, right: 12 },\r\n\r\nsecretProgressContainer: {\r\n  marginVertical: 12,\r\n  width: '90%',\r\n  alignSelf: 'center',\r\n},\r\nsecretProgressBackground: {\r\n  flexDirection: 'row',\r\n  height: 20,\r\n  backgroundColor: '#001133',\r\n  borderColor: '#33bbff',\r\n  borderWidth: 2,\r\n  borderRadius: 8,\r\n  shadowColor: '#33bbff',\r\n  shadowOpacity: 0.8,\r\n  shadowRadius: 8,\r\n  shadowOffset: { width: 0, height: 0 },\r\n  overflow: 'hidden',\r\n},\r\nsecretProgressFill: {\r\n  backgroundColor: '#00ccff',\r\n  borderRightWidth: 1,\r\n  borderRightColor: '#003366',\r\n},\r\n\r\nheaderWrapper: {\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  alignSelf: 'center',\r\n  paddingHorizontal: 12,\r\n},\r\n\r\ncreditsContainer: {\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  marginHorizontal: 'auto',\r\n  height: 300,\r\n  alignSelf: 'center',\r\n},\r\n\r\ncreditsInner: {\r\n  margin: 0,\r\n  padding: 0,\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  alignSelf: 'center',\r\n},\r\n\r\ncreditsText: {\r\n  fontSize: 16,\r\n  lineHeight: 24,\r\n  color: '#FC9B89',\r\n  textAlign: 'center',\r\n  paddingHorizontal: 12,\r\n  flexShrink: 1,\r\n  width: '100%',\r\n  maxWidth: 500,\r\n  alignSelf: 'center',\r\n},\r\n\r\n});\r\n","import { registerRootComponent } from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/ApocalypseQuiz/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [342], () => (__webpack_require__(3844)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["getFonts","Font","loadAsync","require","TitleScreen","onStart","fadeAnim","useState","Animated","Value","pulseAnim","useEffect","timing","toValue","duration","useNativeDriver","easing","Easing","ease","start","loop","sequence","_jsxs","View","style","styles","titleScreenContainer","children","opacity","_jsx","Text","titleText","subtitleText","TouchableOpacity","onPress","tapToStart","allQuestions","question","image","uri","alt","options","text","value","roles","trashOracle","description","mutantHRManager","screamerScout","bureaucracyGhoul","kaleChampion","fogMechanic","skeletonBarista","neonGravedigger","hamsterWarlord","balloonNecromancer","cockroachNegotiator","cyborgCellist","libraryCommando","doomDJ","duckPainter","glitterButcher","gnocchiNomad","lavaLifeguard","marshmallowGeneral","animalMime","molotovMixologist","origamiDetective","radioactivePhilosopher","receiptGolem","squirrelTamer","apocalypseConspiracyTheorist","yodelMechanic","travelAgentOfTerror","StyleSheet","create","fullScreenContainer","flexGrow","minHeight","Dimensions","get","height","backgroundColor","paddingTop","paddingHorizontal","alignItems","justifyContent","width","maxWidth","marginHorizontal","position","header","fontSize","lineHeight","textAlign","color","marginBottom","alignSelf","flexShrink","button","borderColor","borderWidth","padding","marginTop","buttonText","fontFamily","resultText","marginVertical","progressContainer","progressBar","resizeMode","container","flex","title","subtitle","tap","titelHeader","modalOverlay","modalContent","borderRadius","modalText","scrollContainer","creditItem","creditsButton","bottom","right","paddingVertical","creditsText","secretOverlay","top","left","maxHeight","zIndex","cornerBox","cornerBoxActive","tl","tr","bl","br","secretProgressContainer","secretProgressBackground","flexDirection","shadowColor","shadowOpacity","shadowRadius","shadowOffset","overflow","secretProgressFill","borderRightWidth","borderRightColor","headerWrapper","creditsContainer","creditsInner","margin","registerRootComponent","isTitleVisible","setIsTitleVisible","fontsLoaded","setFontsLoaded","mode","setMode","currentQuestion","setCurrentQuestion","answers","setAnswers","quizQuestions","setQuizQuestions","showResult","setShowResult","exitWarningVisible","setExitWarningVisible","scrollY","useRef","current","quizSound","setQuizSound","creditsSound","setCreditsSound","titleSound","setTitleSound","secretSound","setSecretSound","secretResultSound","setSecretResultSound","contentHeight","setContentHeight","secretClicks","setSecretClicks","secretUnlocked","setSecretUnlocked","secretBoxTaps","setSecretBoxTaps","secretStage","setSecretStage","isMuted","setIsMuted","previousModeRef","toggleMute","async","newMuted","allSounds","s","status","getStatusAsync","isLoaded","isPlaying","pauseAsync","playAsync","MuteButton","borderTopWidth","borderBottomWidth","borderTopColor","borderBottomColor","_Fragment","transform","rotate","SecretProgressBar","currentSecretIndex","onComplete","progress","setProgress","activeOpacity","handlePress","newProgress","isMounted","desiredTrack","stopAsync","unloadAsync","sound","Audio","createAsync","isLooping","shouldPlay","playSecretResultMusic","playSecretMusic","playCreditsMusic","playQuizMusic","playTitleMusic","handleMusic","screenHeight","setValue","linear","getRandomQuestions","num","copy","i","length","j","Math","floor","random","slice","restartQuiz","AppLoading","startAsync","onFinish","onError","console","warn","ScrollView","contentContainerStyle","translateY","onLayout","e","nativeEvent","layout","role","calculateResult","tally","forEach","val","Object","entries","sort","a","b","Image","source","handleBoxPress","index","next","every","Boolean","handleSecretAnswer","newAnswers","map","opt","pointerEvents","handleProgressComplete","setSecretProgress","q","round","newCount","handleAnswer","Modal","transparent","visible","animationType","onRequestClose","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","keys","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}